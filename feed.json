{
    "version": "https://jsonfeed.org/version/1",
    "title": "WELCOME",
    "subtitle": "~慢一点，稳一点~",
    "icon": "https://zoyager.github.io/images/favicon.ico",
    "description": "欢迎来到zoyager的博客，这里是生活的点点滴滴~",
    "home_page_url": "https://zoyager.github.io",
    "items": [
        {
            "id": "https://zoyager.github.io/2024/10/06/openCV-python%E7%9B%B8%E5%85%B3/",
            "url": "https://zoyager.github.io/2024/10/06/openCV-python%E7%9B%B8%E5%85%B3/",
            "title": "'openCV-python相关1'",
            "date_published": "2024-10-06T12:41:33.000Z",
            "content_html": "<p>这是一篇通过 openCV 处理图像相关操作的博文～</p>\n<ul>\n<li>算子 √</li>\n<li>Canny 边缘检测 √</li>\n<li>形态学处理 √</li>\n<li>直方图</li>\n<li>轮廓检测</li>\n<li>模板检测</li>\n</ul>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#引入相关库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2 <span class=\"keyword\">as</span> cv</span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"comment\">#定义show函数是为了在jupyter中便于展示，而在pycharm中用cv2.imshow()函数展示图像</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show</span>(<span class=\"params\">img</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> img.ndim == <span class=\"number\">2</span>:</span><br><span class=\"line\">        plt.imshow(img,cmap=<span class=\"string\">&#x27;gray&#x27;</span>,)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        plt.imshow(cv.cvtColor(img,cv.COLOR_BGR2RGB))</span><br><span class=\"line\">    plt.show()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"算子\"><a class=\"anchor\" href=\"#算子\">#</a> 算子</h2>\n<h3 id=\"sobel算子\"><a class=\"anchor\" href=\"#sobel算子\">#</a> Sobel 算子</h3>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img = cv.imread(<span class=\"string\">&#x27;./Fig1208.png&#x27;</span>,cv.IMREAD_GRAYSCALE)</span><br><span class=\"line\">dst = cv.Sobel(img,-<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,ksize=<span class=\"number\">3</span>)<span class=\"comment\">#cv.CV_64F,Gx</span></span><br><span class=\"line\">dst2=cv.Sobel(img,-<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,ksize=<span class=\"number\">3</span>)<span class=\"comment\">#Gy</span></span><br><span class=\"line\">dst3 = cv.addWeighted(dst,<span class=\"number\">0.5</span>,dst2,<span class=\"number\">0.5</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">res = np.hstack([img,dst,dst2,dst3])</span><br><span class=\"line\">show(res)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062049852.png\" alt=\"output_3_0\" /></p>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img2 = cv.imread(<span class=\"string\">&#x27;./LenaGauss.png&#x27;</span>,cv.IMREAD_GRAYSCALE)</span><br><span class=\"line\">dst = cv.Sobel(img2,-<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,ksize=<span class=\"number\">3</span>)<span class=\"comment\">#cv.CV_64F,Gx</span></span><br><span class=\"line\">dst2=cv.Sobel(img2,-<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,ksize=<span class=\"number\">3</span>)<span class=\"comment\">#Gy</span></span><br><span class=\"line\">dst3 = cv.addWeighted(dst,<span class=\"number\">0.5</span>,dst2,<span class=\"number\">0.5</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">res = np.hstack([img2,dst,dst2,dst3])</span><br><span class=\"line\">show(res)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062050726.png\" alt=\"output_4_0\" /></p>\n<h3 id=\"laplacian算子\"><a class=\"anchor\" href=\"#laplacian算子\">#</a> laplacian 算子</h3>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img3 = cv.imread(<span class=\"string\">&#x27;./LenaGauss.png&#x27;</span>,cv.IMREAD_GRAYSCALE)</span><br><span class=\"line\">dst = cv.Laplacian(img3,-<span class=\"number\">5</span>)</span><br><span class=\"line\">res = np.hstack([img3,dst])</span><br><span class=\"line\">show(res)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062051166.png\" alt=\"output_6_0\" /></p>\n<h2 id=\"canny边缘检测\"><a class=\"anchor\" href=\"#canny边缘检测\">#</a> Canny 边缘检测</h2>\n<p>注：算子为 sobel、非极大值抑制</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img = cv.imread(<span class=\"string\">&#x27;.\\Fig0903.png&#x27;</span>,cv.IMREAD_GRAYSCALE)</span><br><span class=\"line\">v1 = cv.Canny(img,<span class=\"number\">50</span>,<span class=\"number\">50</span>)</span><br><span class=\"line\">show(v1)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062053651.png\" alt=\"output_10_0\" /></p>\n<h2 id=\"形态学\"><a class=\"anchor\" href=\"#形态学\">#</a> 形态学</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img = cv.imread(<span class=\"string\">&#x27;./Fig1201.png&#x27;</span>)</span><br><span class=\"line\">show(img)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062056548.png\" alt=\"output_1_0\" /></p>\n<h3 id=\"腐蚀\"><a class=\"anchor\" href=\"#腐蚀\">#</a> 腐蚀</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kernel = np.ones((<span class=\"number\">5</span>,<span class=\"number\">5</span>),np.uint8)</span><br><span class=\"line\">erosion = cv.erode(img,kernel,iterations=<span class=\"number\">1</span>)</span><br><span class=\"line\">show(erosion)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062057256.png\" alt=\"output_3_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>):</span><br><span class=\"line\">    erosion = cv.erode(erosion,kernel,<span class=\"number\">1</span>)</span><br><span class=\"line\">show(erosion)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062057229.png\" alt=\"output_4_0\" /></p>\n<h3 id=\"膨胀\"><a class=\"anchor\" href=\"#膨胀\">#</a> 膨胀</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kernel = np.ones((<span class=\"number\">5</span>,<span class=\"number\">5</span>),np.uint8)</span><br><span class=\"line\">dige_erosion = cv.dilate(erosion,kernel,iterations=<span class=\"number\">1</span>)</span><br><span class=\"line\">show(dige_erosion)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062058645.png\" alt=\"output_6_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>):</span><br><span class=\"line\">    dige_erosion = cv.dilate(dige_erosion,kernel,iterations=<span class=\"number\">1</span>)</span><br><span class=\"line\">show(dige_erosion)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062058222.png\" alt=\"output_7_0\" /></p>\n<p>膨胀和腐蚀为互逆运算</p>\n<h3 id=\"开运算和闭运算\"><a class=\"anchor\" href=\"#开运算和闭运算\">#</a> 开运算和闭运算</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#开：先腐蚀再膨胀</span></span><br><span class=\"line\">img = cv.imread(<span class=\"string\">&#x27;./Fig1201.png&#x27;</span>)</span><br><span class=\"line\">kernel =np.ones((<span class=\"number\">3</span>,<span class=\"number\">3</span>),np.uint8)</span><br><span class=\"line\">opening = cv.morphologyEx(img,cv.MORPH_OPEN,kernel)</span><br><span class=\"line\">show(opening)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062059937.png\" alt=\"output_10_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#闭：先膨胀再腐蚀</span></span><br><span class=\"line\">img = cv.imread(<span class=\"string\">&#x27;./Fig1201.png&#x27;</span>)</span><br><span class=\"line\">kernel =np.ones((<span class=\"number\">3</span>,<span class=\"number\">3</span>),np.uint8)</span><br><span class=\"line\">closeing = cv.morphologyEx(img,cv.MORPH_CLOSE,kernel)</span><br><span class=\"line\">show(closeing)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062059620.png\" alt=\"output_11_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = np.hstack([img,opening,closeing])</span><br><span class=\"line\">show(res)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062103414.png\" alt=\"output_12_0\" /></p>\n<h3 id=\"梯度运算\"><a class=\"anchor\" href=\"#梯度运算\">#</a> 梯度运算</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#梯度 = 膨胀 - 腐蚀</span></span><br><span class=\"line\">pie = cv.imread(<span class=\"string\">&#x27;./Fig1208.png&#x27;</span>)</span><br><span class=\"line\">kernrl = np.ones((<span class=\"number\">5</span>,<span class=\"number\">5</span>),np.uint8)</span><br><span class=\"line\">dilate = cv.dilate(pie,kernel,iterations=<span class=\"number\">5</span>)</span><br><span class=\"line\">erosion = cv.erode(pie,kernel,iterations=<span class=\"number\">5</span>)</span><br><span class=\"line\">res = np.hstack([pie,dilate,erosion])</span><br><span class=\"line\">show(res)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062055958.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gradient = cv.morphologyEx(pie,cv.MORPH_GRADIENT,kernel)</span><br><span class=\"line\">show(gradient)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062101966.png\" alt=\"output_15_0\" /></p>\n<h3 id=\"礼帽与黑帽\"><a class=\"anchor\" href=\"#礼帽与黑帽\">#</a> 礼帽与黑帽</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#礼帽 = 原始-开运算结果:刺</span></span><br><span class=\"line\"><span class=\"comment\">#黑帽 = 原始-闭运算结果:轮廓</span></span><br><span class=\"line\">pie = cv.imread(<span class=\"string\">&#x27;./Fig1201.png&#x27;</span>)</span><br><span class=\"line\">kernrl = np.ones((<span class=\"number\">5</span>,<span class=\"number\">5</span>),np.uint8)</span><br><span class=\"line\">tophat = cv.morphologyEx(pie,cv.MORPH_TOPHAT,kernel)</span><br><span class=\"line\">blackhat = cv.morphologyEx(pie,cv.MORPH_BLACKHAT,kernel)</span><br><span class=\"line\">res = np.hstack([pie,tophat,blackhat])</span><br><span class=\"line\">show(res)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202410062101967.png\" alt=\"output_17_0\" /></p>\n",
            "tags": [
                "PYTHON"
            ]
        },
        {
            "id": "https://zoyager.github.io/2024/08/02/%E5%9B%BE%E7%89%87%E8%AF%BB%E5%8F%96%E5%92%8C%E6%98%BE%E7%A4%BA/",
            "url": "https://zoyager.github.io/2024/08/02/%E5%9B%BE%E7%89%87%E8%AF%BB%E5%8F%96%E5%92%8C%E6%98%BE%E7%A4%BA/",
            "title": "'图片读取和显示'",
            "date_published": "2024-08-02T14:24:15.000Z",
            "content_html": "<h2 id=\"图片读写与显示\"><a class=\"anchor\" href=\"#图片读写与显示\">#</a> 图片读写与显示</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2 <span class=\"keyword\">as</span> cv</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cv.imwrite(<span class=\"string\">&#x27;./bear.png&#x27;</span>,img)<span class=\"comment\">#图片的保存</span></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#图片的显示</span></span><br><span class=\"line\">cv.imshow(<span class=\"string\">&#x27;bear&#x27;</span>,img)</span><br><span class=\"line\">cv.waitKey(<span class=\"number\">0</span>)</span><br><span class=\"line\">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.imshow(img)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<p>​    <img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022239823.png\" alt=\"output_5_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#RGB BGR</span></span><br><span class=\"line\">img2 = cv.cvtColor(img,cv.COLOR_BGR2RGB)</span><br><span class=\"line\">plt.imshow(img2)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022238681.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img3 = cv.imread(<span class=\"string\">&#x27;./bear.png&#x27;</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">cv.imshow(<span class=\"string\">&#x27;bear&#x27;</span>,img3)</span><br><span class=\"line\">cv.waitKey(<span class=\"number\">0</span>)</span><br><span class=\"line\">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.imshow(img3)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022239112.png\" alt=\"output_8_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show</span>(<span class=\"params\">img</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> img.ndim == <span class=\"number\">2</span>:</span><br><span class=\"line\">        plt.imshoww(img,cmap=<span class=\"string\">&#x27;gray&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        plt.imshow(cv.cvtColor(img,cv.COLOR_BGR2RGB))</span><br><span class=\"line\">    plt.show()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"简单绘图\"><a class=\"anchor\" href=\"#简单绘图\">#</a> 简单绘图</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = np.arange(<span class=\"number\">2</span>,<span class=\"number\">20</span>)</span><br><span class=\"line\">y = <span class=\"number\">2</span>*x + np.random.randint(<span class=\"number\">5</span>,<span class=\"number\">20</span>,<span class=\"number\">18</span>)</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.plot(x,y,<span class=\"string\">&#x27;*-&#x27;</span>,color=<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022240302.png\" alt=\"output_13_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x = np.linspace(<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">100</span>)</span><br><span class=\"line\">y1 = np.power(x,<span class=\"number\">0.5</span>)</span><br><span class=\"line\">y2 = x</span><br><span class=\"line\">y3 = np.power(x,<span class=\"number\">1.5</span>)</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.plot(x,y1,label=<span class=\"string\">&#x27;0.5&#x27;</span>)</span><br><span class=\"line\">plt.plot(x,y2,label=<span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">plt.plot(x,y3,label=<span class=\"string\">&#x27;1.5&#x27;</span>)</span><br><span class=\"line\">plt.legend()<span class=\"comment\">#图例</span></span><br><span class=\"line\">plt.xlabel(<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">plt.ylabel(<span class=\"string\">&#x27;s&#x27;</span>)</span><br><span class=\"line\">plt.grid()</span><br><span class=\"line\">plt.xlim([<span class=\"number\">0</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\">plt.ylim([<span class=\"number\">0</span>,<span class=\"number\">1</span>])</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022240817.png\" alt=\"output_15_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#hist</span></span><br><span class=\"line\">a = np.random.randint(<span class=\"number\">0</span>,<span class=\"number\">101</span>,<span class=\"number\">1000</span>)</span><br><span class=\"line\">a</span><br></pre></td></tr></table></figure></p>\n<pre><code>array([ 93,  16,  70,  52,  47,  10,  76,  81,  85,  36,  16,  11,   8,\n        56,  64,  76,  11,  28,  40,  55,  81,  37,  70,  87,  12,  61,\n        51,  58,  20,  97,  63,  52,  25,   5,  53,  33,  90,  10,  21,\n        43,   6,  14,  87,  11,  62,  54,  70,  65,  43,  22,  86,  82,\n        64,   0,  50,  99,  93,  93,  61,  94,  43,  87,  78,  73,  16,\n        91,  49,  91,  13,  39,  44,  85,  78,  50,  11,   5,  42,  71,\n        18,  38,  78,  20,  12,  44,  77,  71,  49,  89,  26,  96,  25,\n        58,  77,  45,  73,  38,  81,  89,  56,  52,  45,   4,  79,  63,\n        91,  28,  83,  72,  44,   9,  32,  92,  62,  77,  14,  46, 100,\n        77,  33,  93,  77,   1,  30,  16,  10,  70,  91,  25,  52,  87,\n        51,  68,   2,  83,  91,  64,  52,  29,  26,  99,  70,  60,  79,\n        37,  30,  70,  66,  25,  51,  89,  19,  78,  99,  79,  51,  95,\n        57, 100,   7,  43,  94,  75,  13,  41,  54,  79,  20,  10,  46,\n        93,  66,  42,  63,  98,  30,  53,  73,  51,  79,  55,  31,  36,\n        84,  18,  69,  69,  82,  32,  21,  28,  67,  15,  15,  51,  35,\n         3,  20,  94,  71,  87,   8,  68,  15,  99,  99,  57,  75,  81,\n         0,  46,  41,  23,  75,  14,  57,  51,  53,  17,  98,  31,  94,\n        15,   6,  70,  17,  95,  79,   1,  23,  96,  86,  62,  12,  13,\n        75,  32,  19,  33,  56,  22,  33,  76,  72,  28,   6,   4,   6,\n        99,  36,  68,  45,  49,  95,  71,  40,  34,  20,  46,  99,   2,\n        78,  47,  29,  40,  48,  66,  31,  85,  16,  70,  83,  93,  91,\n        98,  56,  88,  96,  79,  28,  86,  62,  18,  85,  16,  13,  46,\n        23,  10,  37,  81,  68,  99,  97,  62,  26,  30,  36,  65,  21,\n        97,  42,  96,   2,  63,  51,  75,  63,  20,  71,  32,  85,  92,\n        10,  64,  96,  99,  52,  38,  60,  79,  57,  17,  67,  47,  18,\n        11,  20,  87,  56,   8,  66,   0,  16,  89,  26,  37,  98,  60,\n        30,  33,   9,   9,  97,  84,  91,  15,   0,  91,  75, 100,   6,\n        78,   6,  90,   3,  11,   0,  15,  46,  94,  89,   6,  66,  70,\n        45,  47,   7,  53,  62,   5,  90,  35,  42,  78,  23,  58,  56,\n        24,  74,  37,  27,  49,  16,  90,  25,  17,  68,   3,  53,  53,\n        14, 100,   1,  49,  31,  26,  25,  57,  71,  10,  66,  98,  80,\n        50,  85,   4,  25,  48,  40,  23,  52,  65,  86,  13,  63,  38,\n        22,  68,  17,   2,   3,  60,  93,  82,  10,  37,  78,  93,  47,\n        32,  57,  51,   0,  56,  59,  47,  96,  57,  75,  59,  99,  51,\n        92,  90,  58,  17,  95,  85,  41,   0,  10,  74,  52,  43,  23,\n        48,   6,  64,  50,  94,  24,  75,  50,  73,  86,  64,  30,   1,\n        72,  80,  83,  42,  95,  15,  46,  40,  17,  64,  35,  16,  59,\n        62,  95,  57,  83,   8,  15,  18,  22,  71,  94,  10,   4,  58,\n        42,   7,  71,  16,  91,  90,  94,  45,  91,  93,  96,   7,   4,\n        34,  91,  27,  57,  18,  20,  56,  10,  77,  95,  47,  58,  76,\n        65,  69,  85,  46,   9,  50,  65,   2,  63,  36,  32,  18,  25,\n        99,  49,  69,  14,  69,  11,  60,  23,  91,  40,  66,  66,  66,\n        92,   5,  65,  20,  35,  22,  71,  65,  67,  18,  94,  98,  46,\n         9,  10,  73,  67,  83,  85,  22,   6,  70,  97,   4,  22,  49,\n        99,  36,  61,  36,  85,   8,  55,  15,  27,  72,  67,  35,  85,\n        91,  64,  72,  31,  21,  27,  19,  38,  33,  11,  88,  57,  28,\n        53,   0,  77,  24,  41,  18,  79,  16,   5,  58,  93,  76,  22,\n        81,   4,  15,  78,  55,  98,  26,  39,  48,  84,  18,  27,  73,\n        24,  99,  74,  87,  97,  91,  30,  43, 100,  51,  69,  90,  33,\n        60,  13,   8,  98,  96,  86,  76,   2,   6,  10,  70,  74,  12,\n        60,  15,  62,  17,  34,  78,   6,  90,  37,  15,  96,  19,  70,\n        82,  68,  25,  89,  62,  55,  76,  39,  59,  96,  55,  42,  98,\n        73,  38,  78,  51,  61,   1,  92,   8,  41,   1,  37,   1,  92,\n        42,  33,   8,  59,  70,  31,  48,   9,  23,  38,   9,   3,   1,\n        25,  13,  16,  60,  35,  50,  79,  96,  59,  54,  29,  89,  10,\n        13,  61,  38,  26,   0,  47,  97,  48,  29,  14,  42,  47,  93,\n         2,  38,  33,  15,  77,  13,  97,  29,  89,  34,  82,  52,   4,\n        70,  99,   6,  93,  89,   0,  17,  77,   2,  83,  37,  36,  32,\n        39,  15,  42,  97,  42,  89,  94,  81, 100,  43,  11,  24,  95,\n        65,  33,   1,  12,  53,  36,  10,  70,  76,  67,  80,  16,  92,\n        70,  44,  95,  59,  27,  21,  90,  45,  70,   7,  76,   0,   2,\n        81,  93,  33,  53,  36,  26,  67,  82,  73,  86,  95,  56,  71,\n        77,  21,  35,  31,  31,  13,  28,  77,  76,  87,  43,   4,  36,\n        33,  42,  29,  68,  70,  51,  36,  61,  93,  79,  71,  96,  14,\n        49,  79,  33,  61,  15,  73,  67,   3,   0,  73,  69,  53,  18,\n        52,  87,  40,  25,  96,  36,  64,  77,  67,  76,  85,  85,  71,\n        57,   3,  91,   6,  28,  24,  82,  80,  64,  40,  70,  69,  66,\n        53,  90,  97,  77,   0,   4,  83,  91,  38,  80,  34,  57,   9,\n        31,  90,  84,  40,  30,  57,  75,  27,  51,  54,  94,  76,  81,\n        11,  92, 100,  83,  51,  87,  76,  10,  80,  17,  11,  64,  69,\n        76,  28,  25,  91,  32,  59,  65,  67,  51,  15,  43,  74,  48,\n        21,  31,  23,  32,  54,  89,  13,  26,  43,  11,  18,  70,  80,\n        43,  61,   4,  47,  27,  38,  21,  38,  96,  70,  85,  47,  33,\n        32,  18,  13,   4,  85,  61,  45,  28,  94,  93,  11,  10,   6,\n        55,  37,  54,  28,  65,  74,  40,  72,  62,  15,  22,  64,  10,\n        38,  87,  45,  99,  96,  55,  62,  25,  21,  83,  43,  56,  64,\n        13,  90,  82,  14,  99,  45,  17,  54,  43,   8,  90,  17])\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.hist(a,rwidth=<span class=\"number\">0.9</span>,color=<span class=\"string\">&#x27;g&#x27;</span>)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022238684.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bins = np.arange(-<span class=\"number\">0.5</span>,<span class=\"number\">101</span>,<span class=\"number\">1</span>)</span><br><span class=\"line\">bins</span><br></pre></td></tr></table></figure></p>\n<pre><code>array([ -0.5,   0.5,   1.5,   2.5,   3.5,   4.5,   5.5,   6.5,   7.5,\n         8.5,   9.5,  10.5,  11.5,  12.5,  13.5,  14.5,  15.5,  16.5,\n        17.5,  18.5,  19.5,  20.5,  21.5,  22.5,  23.5,  24.5,  25.5,\n        26.5,  27.5,  28.5,  29.5,  30.5,  31.5,  32.5,  33.5,  34.5,\n        35.5,  36.5,  37.5,  38.5,  39.5,  40.5,  41.5,  42.5,  43.5,\n        44.5,  45.5,  46.5,  47.5,  48.5,  49.5,  50.5,  51.5,  52.5,\n        53.5,  54.5,  55.5,  56.5,  57.5,  58.5,  59.5,  60.5,  61.5,\n        62.5,  63.5,  64.5,  65.5,  66.5,  67.5,  68.5,  69.5,  70.5,\n        71.5,  72.5,  73.5,  74.5,  75.5,  76.5,  77.5,  78.5,  79.5,\n        80.5,  81.5,  82.5,  83.5,  84.5,  85.5,  86.5,  87.5,  88.5,\n        89.5,  90.5,  91.5,  92.5,  93.5,  94.5,  95.5,  96.5,  97.5,\n        98.5,  99.5, 100.5])\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plt.hist(a,bins)</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022241577.png\" alt=\"output_20_0\" /></p>\n<h2 id=\"灰度图和彩色图\"><a class=\"anchor\" href=\"#灰度图和彩色图\">#</a> 灰度图和彩色图</h2>\n<p>gray(x,y) = 0.299r(x,y) + 0.587g(x,y) + 0.114b(x,y)</p>\n<h2 id=\"图像基础\"><a class=\"anchor\" href=\"#图像基础\">#</a> 图像基础</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A = np.random.randint(<span class=\"number\">0</span>,<span class=\"number\">256</span>,(<span class=\"number\">2</span>,<span class=\"number\">4</span>),dtype=np.uint8)</span><br><span class=\"line\">A</span><br></pre></td></tr></table></figure></p>\n<pre><code>array([[  6,  78,  67, 246],\n       [127,  16, 122,  20]], dtype=uint8)\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show(A)</span><br></pre></td></tr></table></figure></p>\n<p>​    <img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022246687.png\" alt=\"output_4_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">B = np.random.randint(<span class=\"number\">0</span>,<span class=\"number\">256</span>,(<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>),dtype=np.uint8)</span><br><span class=\"line\">show(B)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245402.png\" alt=\"png\" /></p>\n<p>0-1 灰度等值</p>\n<h2 id=\"通道分离和合并\"><a class=\"anchor\" href=\"#通道分离和合并\">#</a> 通道分离和合并</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img = cv.imread(<span class=\"string\">&#x27;./bear.png&#x27;</span>)</span><br><span class=\"line\">show(img)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245405.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">b,g,r = cv.split(img)<span class=\"comment\">#分离</span></span><br><span class=\"line\">show(r)</span><br></pre></td></tr></table></figure></p>\n<p>​    <img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022246119.png\" alt=\"output_9_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r.shape</span><br><span class=\"line\">(<span class=\"number\">302</span>, <span class=\"number\">441</span>)</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img2 = cv.merge([b,g,r])<span class=\"comment\">#合并</span></span><br><span class=\"line\">show(img2)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245406.png\" alt=\"png\" /></p>\n<h2 id=\"彩色图转成灰度图\"><a class=\"anchor\" href=\"#彩色图转成灰度图\">#</a> 彩色图转成灰度图</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gray1 = <span class=\"number\">1</span>*b/<span class=\"number\">3</span> + <span class=\"number\">1</span>*g/<span class=\"number\">3</span> + <span class=\"number\">1</span>*r/<span class=\"number\">3</span></span><br><span class=\"line\">show(gray1)</span><br></pre></td></tr></table></figure></p>\n<p>​    <img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022247049.png\" alt=\"output_13_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gray2 = np.uint8(gray1)2show(gray2)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245290.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gray3 = cv.cvtColor(img,cv.COLOR_BGR2GRAY)</span><br><span class=\"line\">show(gray3)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022248685.png\" alt=\"output_15_0\" /></p>\n<h2 id=\"二值化\"><a class=\"anchor\" href=\"#二值化\">#</a> 二值化</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">thresh = <span class=\"number\">125</span></span><br><span class=\"line\">gray3[gray3 &gt; thresh] = <span class=\"number\">255</span></span><br><span class=\"line\">gray3[gray3 &lt;= thresh] = <span class=\"number\">0</span></span><br><span class=\"line\">show(gray3)</span><br></pre></td></tr></table></figure></p>\n<p>​    <img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022248236.png\" alt=\"output_17_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show(gray2)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022248739.png\" alt=\"output_18_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i,img_bin = cv.threshold(gray2,<span class=\"number\">125</span>,<span class=\"number\">255</span>,cv.THRESH_BINARY)</span><br><span class=\"line\">show(img_bin)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245924.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img_bin</span><br></pre></td></tr></table></figure></p>\n<pre><code>array([[0, 0, 0, ..., 0, 0, 0],\n       [0, 0, 0, ..., 0, 0, 0],\n       [0, 0, 0, ..., 0, 0, 0],\n       ...,\n       [0, 0, 0, ..., 0, 0, 0],\n       [0, 0, 0, ..., 0, 0, 0],\n       [0, 0, 0, ..., 0, 0, 0]], dtype=uint8)\n</code></pre>\n<h2 id=\"图像加减\"><a class=\"anchor\" href=\"#图像加减\">#</a> 图像加减</h2>\n<p>相加：混合图像，添加噪声<br />\n相减：消除背景，差影法（比较差异，运动跟踪）<br />\n相乘：掩膜<br />\n相除：校正设备，比较差异</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj = cv.imread(<span class=\"string\">&#x27;./images/Fig0303a.jpg&#x27;</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">bj = cv.imread(<span class=\"string\">&#x27;./images/Fig0303b.jpg&#x27;</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">show(obj)</span><br></pre></td></tr></table></figure></p>\n<p>​    <img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022248802.png\" alt=\"output_23_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show(bj)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245660.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj.shape</span><br></pre></td></tr></table></figure></p>\n<pre><code>(501, 525)\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bj.shape</span><br></pre></td></tr></table></figure></p>\n<pre><code>(501, 525)\n</code></pre>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img_add = obj + bj</span><br><span class=\"line\">show(img_add)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022249128.png\" alt=\"output_27_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T1 = cv.add(obj*<span class=\"number\">0.5</span>,bj*<span class=\"number\">0.5</span>)</span><br><span class=\"line\">show(T1)</span><br></pre></td></tr></table></figure></p>\n<p>​    <img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022249053.png\" alt=\"output_28_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T2 = cv.addWeighted(obj,<span class=\"number\">1</span>,bj,<span class=\"number\">1</span>,<span class=\"number\">0</span>)<span class=\"comment\">#图像，权值，偏移值</span></span><br><span class=\"line\">show(T2)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022249637.png\" alt=\"output_29_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T3 = T2 - obj<span class=\"comment\">#减法</span></span><br><span class=\"line\">show(T3)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245451.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#乘法</span></span><br><span class=\"line\">mask = obj/<span class=\"number\">255</span></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">img_nul = bj*mask</span><br><span class=\"line\">img_nul2 = cv.multiply(bj*<span class=\"number\">1.0</span>,mask)</span><br><span class=\"line\">show(np.hstack([img_nul,img_nul2]))   </span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245085.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#除法</span></span><br><span class=\"line\">img_div = T2/(bj+<span class=\"number\">1</span>)</span><br><span class=\"line\">img_div2 = cv.divide(obj,(bj+<span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">show(np.hstack([img_div,img_div2]))</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245153.png\" alt=\"png\" /></p>\n<h2 id=\"图像像素线性和非线性变换\"><a class=\"anchor\" href=\"#图像像素线性和非线性变换\">#</a> 图像像素线性和非线性变换</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pic = cv.imread(<span class=\"string\">&#x27;./images/Fig0301.png&#x27;</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\">show(pic)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022250419.png\" alt=\"output_35_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">b = <span class=\"number\">20</span></span><br><span class=\"line\">k = <span class=\"number\">2</span></span><br><span class=\"line\">pic2 = b + k*pic</span><br><span class=\"line\"><span class=\"comment\">#pic2 =  b + k*pic.astype(np.int32)类型转换</span></span><br><span class=\"line\"><span class=\"comment\">#np.clip(pic2,0,255)</span></span><br><span class=\"line\">show(pic2)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022250964.png\" alt=\"output_36_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pic3 = cv.convertScaleAbs(pic,alpha =<span class=\"number\">2</span>,beta=<span class=\"number\">20</span>)</span><br><span class=\"line\">show(pic3)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245627.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pic4 = <span class=\"number\">10</span> + np.log(pic)<span class=\"comment\">#非线性变换</span></span><br><span class=\"line\">show(pic4)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022250942.png\" alt=\"output_38_0\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pic01 = pic*<span class=\"number\">255</span></span><br><span class=\"line\">pic02 = np.power(pic,<span class=\"number\">0.5</span>)*<span class=\"number\">255</span></span><br><span class=\"line\">pic03 = np.power(pic,<span class=\"number\">1.5</span>)*<span class=\"number\">255</span></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show(pic02)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245218.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show(pic)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022245923.png\" alt=\"png\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show(pic03)</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202408022251587.png\" alt=\"output_42_0\" /></p>\n",
            "tags": [
                "PYTHON"
            ]
        },
        {
            "id": "https://zoyager.github.io/2024/07/31/Jupyter%E5%92%8Cnumpy%E5%BA%93/",
            "url": "https://zoyager.github.io/2024/07/31/Jupyter%E5%92%8Cnumpy%E5%BA%93/",
            "title": "Jupyter和numpy库",
            "date_published": "2024-07-31T07:25:46.000Z",
            "content_html": "<p>Jupyter 是一个强大的 Python 编程工具。编程语言交互环境，可以在浏览器中，也可以 VsCode 插件中运行。jupyter 中可以用多种形式创建笔记，它有以下的特显：</p>\n<ul>\n<li>块状交互特性</li>\n<li>支持 markdown 模式单元添加笔记、添加说明和注释</li>\n<li>数据分析和可视化</li>\n</ul>\n<h2 id=\"1jupyter的环境配置\"><a class=\"anchor\" href=\"#1jupyter的环境配置\">#</a> 1.Jupyter 的环境配置</h2>\n<p>首先装好 python 环境，在 python 所对应的 Scripts 文件下打开 cmd，输入以下命令</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install numpy matplotlib</span><br><span class=\"line\">pip install pandas scipy scikit-learn scikit-image</span><br><span class=\"line\">pip install opencv-python</span><br><span class=\"line\">pip install jupyter</span><br><span class=\"line\">pip install jupyterlab</span><br></pre></td></tr></table></figure></p>\n<p>完成之后在 cmd 中输入  jupyter-lab  出现以下页面</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202407311540192.png\" alt=\"image-20240731154042104\" /></p>\n<p>点开 python3 输入以下内容</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib</span><br></pre></td></tr></table></figure></p>\n<p>如果不报错说明成功，如果报错【No module named ‘cv2‘】则更新 opencv-python 库</p>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --upgrade opencv-python</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"numpy库\"><a class=\"anchor\" href=\"#numpy库\">#</a> Numpy 库</h2>\n<p>在 Jupyter 编辑器中进行简单的数学计算</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202407311558689.png\" alt=\"image-20240731155825595\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202407311559616.png\" alt=\"image-20240731155915523\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202407311559274.png\" alt=\"image-20240731155952189\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202407311600779.png\" alt=\"image-20240731160028709\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202407311600994.png\" alt=\"image-20240731160049922\" /></p>\n",
            "tags": [
                "PYTHON"
            ]
        },
        {
            "id": "https://zoyager.github.io/2024/06/19/MATLAB%E5%9F%BA%E7%A1%80/",
            "url": "https://zoyager.github.io/2024/06/19/MATLAB%E5%9F%BA%E7%A1%80/",
            "title": "MATLAB相关",
            "date_published": "2024-06-19T10:24:23.000Z",
            "content_html": "<p>这是一篇关于 MATLAB 的博文～</p>\n<h3 id=\"数据类型\"><a class=\"anchor\" href=\"#数据类型\">#</a> 数据类型</h3>\n<p><figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">有符号整形 int8,int16</span><br><span class=\"line\">无符号整型 uint</span><br><span class=\"line\">单精度浮点型 single</span><br><span class=\"line\">双精度浮点型 double</span><br><span class=\"line\">逻辑型 logical</span><br><span class=\"line\">字符串型 char</span><br><span class=\"line\">结构体型 struct</span><br><span class=\"line\">句柄型 </span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数值类型\"><a class=\"anchor\" href=\"#数值类型\">#</a> 数值类型</h3>\n<p><strong>整形</strong>： 有符号（int8，int16，int32，int64；所占字节分别为一二三四个字节）和无符号（同理）</p>\n<p><strong>取整函数</strong>：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">round 向最接近的整数取整</span><br><span class=\"line\">fix 向0取整</span><br><span class=\"line\">floor 不大于该数的最接近整数</span><br><span class=\"line\">ceil 不小于该数的最接近整数</span><br></pre></td></tr></table></figure></p>\n<p><strong>浮点数</strong>：单精度浮点数（single）和双精度浮点型（double）</p>\n<p><strong>复数</strong>：complex () 创建复数，通过 i 或 j 表示虚部</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">相关函数</span><br><span class=\"line\">real求实部</span><br><span class=\"line\">imag求虚部</span><br><span class=\"line\">abs求模</span><br><span class=\"line\">conj求共轭复数</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"数据显示格式\"><a class=\"anchor\" href=\"#数据显示格式\">#</a> 数据显示格式</h3>\n<p>format () 函数，改变后一直有效</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202406192013424.png\" alt=\"image-20240619201308335\" /></p>\n",
            "tags": [
                "MATLAB"
            ]
        },
        {
            "id": "https://zoyager.github.io/2024/06/13/TEA%E5%8F%8A%E5%85%B6%E8%A1%8D%E7%94%9F%E7%BC%96%E7%A0%81/",
            "url": "https://zoyager.github.io/2024/06/13/TEA%E5%8F%8A%E5%85%B6%E8%A1%8D%E7%94%9F%E7%BC%96%E7%A0%81/",
            "title": "'TEA及其衍生编码'",
            "date_published": "2024-06-13T13:27:56.000Z",
            "content_html": "<p>这是一篇关于 TEA 加密的文章～</p>\n<h2 id=\"tea算法\"><a class=\"anchor\" href=\"#tea算法\">#</a> Tea 算法</h2>\n<h3 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h3>\n<p><a href=\"https://m.baidu.com/s?word=TEA&amp;sa=re_dqa_zy\">TEA<em></em></a>(Tiny Encryption Algorithm) 是一种分组密码算法，由<a href=\"https://m.baidu.com/s?word=%E5%89%91%E6%A1%A5%E5%A4%A7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AE%9E%E9%AA%8C%E5%AE%A4&amp;sa=re_dqa_zy\">剑桥大学计算机实验室<em></em></a>的 [David Wheeler<em></em>](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tLmJhaWR1LmNvbS9zP3dvcmQ9RGF2aWQ=\">https://m.baidu.com/s?word=David</span> Wheeler&amp;sa=re_dqa_zy) 和 [Roger Needham<em></em>](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tLmJhaWR1LmNvbS9zP3dvcmQ9Um9nZXI=\">https://m.baidu.com/s?word=Roger</span> Needham&amp;sa=re_dqa_zy) 于 1994 年发明。以下是 TEA 算法的详细介绍:</p>\n<ul>\n<li>密钥长度。TEA 算法的明文密文块为 64 比特，密钥长度为 128 比特。</li>\n<li>迭代次数。TEA 算法的加密过程采用 Feistel 结构，需要进行多轮迭代，每轮迭代中，算法使用加法和移位操作对明文和密钥进行扩散和混乱，实现明文的非线性变换。</li>\n<li>安全性。TEA 算法的初始版本建议的迭代次数为 32 轮，尽管作者认为 32 轮已经足够了，但实际应用中通常使用更多的迭代次数以提高安全性。</li>\n<li>填充方法。在处理原始数据时，TEA 使用了特定的填充方法，以确保即使对于相同的明文，密文的结果也会不同。</li>\n<li>交织算法。TEA 算法还包含一种交织算法，该算法将消息分为多个加密单元，每个加密单元都是 8 字节，并使用 TEA 进行加密，加密结果与下一个加密单元做异或运算后再作为待加密的明文。</li>\n</ul>\n<p>此外，为了解决 TEA 算法密钥表攻击的问题，TEA 算法先后经历了几次改进，产生了<a href=\"https://m.baidu.com/s?word=XTEA&amp;sa=re_dqa_zy\"> XTEA<em></em></a>、[Block TEA<em></em>](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tLmJhaWR1LmNvbS9zP3dvcmQ9QmxvY2s=\">https://m.baidu.com/s?word=Block</span> TEA&amp;sa=re_dqa_zy) 和<a href=\"https://m.baidu.com/s?word=XXTEA&amp;sa=re_dqa_zy\"> XXTEA<em></em></a>等版本。XXTEA 是 TEA 算法的一个改进版本，使用与 TEA 相同的简单运算，但采用了不同的顺序，并且使用了更复杂的密钥混合方式来阻止密钥表攻击。</p>\n<h3 id=\"特征\"><a class=\"anchor\" href=\"#特征\">#</a> 特征：</h3>\n<p>TEA（Tiny Encryption Algorithm）是一种对称密钥加密算法，其特征包括：</p>\n<ol>\n<li><strong>对称密钥算法</strong>：TEA 是一种对称密钥算法，加密和解密使用相同的密钥。</li>\n<li><strong>块加密算法</strong>：TEA 将数据分成 64 位（8 字节）的块，并对每个块进行加密或解密操作。</li>\n<li><strong>迭代轮数</strong>：TEA 算法通过多轮迭代来增强加密的强度，通常使用 32 轮或更多轮次。</li>\n<li><strong>简单的运算</strong>：TEA 主要使用了移位、异或和加法等简单的位操作，使其在硬件和软件上都能实现高效的加密运算。</li>\n<li><strong>强度和安全性</strong>：TEA 算法的安全性依赖于轮数、密钥长度和加密数据的特性。在正确使用的情况下，它能提供一定级别的安全性。</li>\n<li><strong>公开算法</strong>：TEA 是一种公开算法，其加密和解密过程都是公开的，因此可以在各种平台上实现和使用。</li>\n<li><strong>适用性</strong>：TEA 算法在对资源有限的环境下（如嵌入式系统、传感器网络等）具有较好的适用性，因为其算法结构简单，实现和执行都比较高效。</li>\n</ol>\n<h3 id=\"快速判断\"><a class=\"anchor\" href=\"#快速判断\">#</a> 快速判断</h3>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TEA每轮的加密特征，左移<span class=\"number\">4</span>，异或，右移<span class=\"number\">5</span>，以及一个变量sum会迭代+=delta32次</span><br><span class=\"line\"></span><br><span class=\"line\">XTEA每轮的加密特征，左移<span class=\"number\">4</span>，右移<span class=\"number\">5</span>，与TE不同的是对kyy和sum的处理：==key[(sum&gt;&gt;<span class=\"number\">11</span>)&amp;<span class=\"number\">3</span>],key[sum&amp;<span class=\"number\">3</span>]。</span><br><span class=\"line\"></span><br><span class=\"line\">XXTEA每轮的加密特征：</span><br><span class=\"line\">sum+=delta;e=(sum&gt;&gt;<span class=\"number\">2</span>&amp;<span class=\"number\">3</span>;</span><br><span class=\"line\">((z&gt;&gt;<span class=\"number\">5</span>^y&lt;&lt;<span class=\"number\">2</span>)=(y&gt;&gt;<span class=\"number\">3</span>^z&lt;&lt;<span class=\"number\">4</span>)+((sum^y)+(key[p&amp;<span class=\"number\">3</span>)^z));</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"tea加密过程python\"><a class=\"anchor\" href=\"#tea加密过程python\">#</a> TEA 加密过程（python）</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt_block</span>(<span class=\"params\">v, k</span>):</span><br><span class=\"line\">    delta, mask = <span class=\"number\">0x9e3779b9</span>, <span class=\"number\">0xffffffff</span></span><br><span class=\"line\">    sum_val = <span class=\"number\">0</span></span><br><span class=\"line\">    rounds = <span class=\"number\">32</span></span><br><span class=\"line\"></span><br><span class=\"line\">    v0, v1 = v[<span class=\"number\">0</span>], v[<span class=\"number\">1</span>]</span><br><span class=\"line\">    k0, k1, k2, k3 = k[<span class=\"number\">0</span>], k[<span class=\"number\">1</span>], k[<span class=\"number\">2</span>], k[<span class=\"number\">3</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(rounds):</span><br><span class=\"line\">        sum_val = (sum_val + delta) &amp; mask</span><br><span class=\"line\">        v0 += ((v1 &lt;&lt; <span class=\"number\">4</span>) + k0) ^ (v1 + sum_val) ^ ((v1 &gt;&gt; <span class=\"number\">5</span>) + k1)</span><br><span class=\"line\">        v0 &amp;= mask</span><br><span class=\"line\">        v1 += ((v0 &lt;&lt; <span class=\"number\">4</span>) + k2) ^ (v0 + sum_val) ^ ((v0 &gt;&gt; <span class=\"number\">5</span>) + k3)</span><br><span class=\"line\">        v1 &amp;= mask</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [v0, v1]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt_block</span>(<span class=\"params\">v, k</span>):</span><br><span class=\"line\">    delta, mask = <span class=\"number\">0x9e3779b9</span>, <span class=\"number\">0xffffffff</span></span><br><span class=\"line\">    sum_val = (delta &lt;&lt; <span class=\"number\">5</span>) &amp; mask</span><br><span class=\"line\">    rounds = <span class=\"number\">32</span></span><br><span class=\"line\"></span><br><span class=\"line\">    v0, v1 = v[<span class=\"number\">0</span>], v[<span class=\"number\">1</span>]</span><br><span class=\"line\">    k0, k1, k2, k3 = k[<span class=\"number\">0</span>], k[<span class=\"number\">1</span>], k[<span class=\"number\">2</span>], k[<span class=\"number\">3</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(rounds):</span><br><span class=\"line\">        v1 -= ((v0 &lt;&lt; <span class=\"number\">4</span>) + k2) ^ (v0 + sum_val) ^ ((v0 &gt;&gt; <span class=\"number\">5</span>) + k3)</span><br><span class=\"line\">        v1 &amp;= mask</span><br><span class=\"line\">        v0 -= ((v1 &lt;&lt; <span class=\"number\">4</span>) + k0) ^ (v1 + sum_val) ^ ((v1 &gt;&gt; <span class=\"number\">5</span>) + k1)</span><br><span class=\"line\">        v0 &amp;= mask</span><br><span class=\"line\">        sum_val = (sum_val - delta) &amp; mask</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [v0, v1]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt</span>(<span class=\"params\">text, key</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 分组成64位的块</span></span><br><span class=\"line\">    blocks = [text[i:i+<span class=\"number\">2</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(text), <span class=\"number\">2</span>)]</span><br><span class=\"line\">    encrypted_blocks = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> block <span class=\"keyword\">in</span> blocks:</span><br><span class=\"line\">        v = [<span class=\"built_in\">int</span>.from_bytes(block[i:i+<span class=\"number\">1</span>], <span class=\"string\">&#x27;big&#x27;</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>)]</span><br><span class=\"line\">        k = [<span class=\"built_in\">int</span>.from_bytes(key[i:i+<span class=\"number\">1</span>], <span class=\"string\">&#x27;big&#x27;</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>)]</span><br><span class=\"line\">        encrypted_block = encrypt_block(v, k)</span><br><span class=\"line\">        encrypted_blocks.extend(encrypted_block)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">bytes</span>(encrypted_blocks)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt</span>(<span class=\"params\">encrypted_text, key</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 分组成64位的块</span></span><br><span class=\"line\">    blocks = [encrypted_text[i:i+<span class=\"number\">8</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(encrypted_text), <span class=\"number\">8</span>)]</span><br><span class=\"line\">    decrypted_blocks = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> block <span class=\"keyword\">in</span> blocks:</span><br><span class=\"line\">        v = [<span class=\"built_in\">int</span>.from_bytes(block[i:i+<span class=\"number\">4</span>], <span class=\"string\">&#x27;big&#x27;</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span>)]</span><br><span class=\"line\">        k = [<span class=\"built_in\">int</span>.from_bytes(key[i:i+<span class=\"number\">1</span>], <span class=\"string\">&#x27;big&#x27;</span>) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>)]</span><br><span class=\"line\">        decrypted_block = decrypt_block(v, k)</span><br><span class=\"line\">        decrypted_blocks.extend(decrypted_block)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">bytes</span>(decrypted_blocks)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\">plaintext = <span class=\"string\">b&#x27;Hello, TEA!&#x27;</span></span><br><span class=\"line\">key = <span class=\"string\">b&#x27;MySecretKey&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密</span></span><br><span class=\"line\">encrypted_text = encrypt(plaintext, key)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Encrypted:&quot;</span>, encrypted_text.<span class=\"built_in\">hex</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解密</span></span><br><span class=\"line\">decrypted_text = decrypt(encrypted_text, key)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Decrypted:&quot;</span>, decrypted_text.decode())</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"keyword\">def</span> <span class=\"title function_\">encrypt_block</span>(<span class=\"params\">v, k</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">这一行定义了一个名为encrypt_block的函数，该函数接受两个参数 v 和 k，分别表示待加密的数据块和加密密钥。</span><br><span class=\"line\"></span><br><span class=\"line\">    delta, mask = <span class=\"number\">0x9e3779b9</span>, <span class=\"number\">0xffffffff</span></span><br><span class=\"line\"></span><br><span class=\"line\">这一行定义了TEA算法中使用的两个常量，delta 和 mask。它们是用于混淆和扩散数据的关键部分。</span><br><span class=\"line\"></span><br><span class=\"line\">    sum_val = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">这一行初始化了一个变量 sum_val，用于存储在加密过程中不断变化的值。</span><br><span class=\"line\"></span><br><span class=\"line\">    rounds = <span class=\"number\">32</span></span><br><span class=\"line\"></span><br><span class=\"line\">这一行定义了TEA算法的轮数，即加密操作的迭代次数。通常情况下，TEA算法执行<span class=\"number\">32</span>轮加密。</span><br><span class=\"line\"></span><br><span class=\"line\">    v0, v1 = v[<span class=\"number\">0</span>], v[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">这一行从输入的数据块中提取出两个<span class=\"number\">32</span>位的字（或者称为半个数据块），分别赋值给 v0 和 v1。</span><br><span class=\"line\"></span><br><span class=\"line\">    k0, k1, k2, k3 = k[<span class=\"number\">0</span>], k[<span class=\"number\">1</span>], k[<span class=\"number\">2</span>], k[<span class=\"number\">3</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">这一行从输入的密钥中提取出四个<span class=\"number\">32</span>位的字，分别赋值给 k0、k1、k2 和 k3。</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(rounds):</span><br><span class=\"line\"></span><br><span class=\"line\">这一行开始一个循环，循环次数为预先设定的轮数，即<span class=\"number\">32</span>轮。</span><br><span class=\"line\"></span><br><span class=\"line\">        sum_val = (sum_val + delta) &amp; mask</span><br><span class=\"line\"></span><br><span class=\"line\">这一行更新了加密过程中的一个常量 sum_val，用于引入轮常数来增强加密的强度。</span><br><span class=\"line\"></span><br><span class=\"line\">        v0 += ((v1 &lt;&lt; <span class=\"number\">4</span>) + k0) ^ (v1 + sum_val) ^ ((v1 &gt;&gt; <span class=\"number\">5</span>) + k1)</span><br><span class=\"line\"></span><br><span class=\"line\">这一行执行TEA算法中的加密操作，对 v0 进行更新。它包括了左移、异或和加法等操作。</span><br><span class=\"line\"></span><br><span class=\"line\">        v1 += ((v0 &lt;&lt; <span class=\"number\">4</span>) + k2) ^ (v0 + sum_val) ^ ((v0 &gt;&gt; <span class=\"number\">5</span>) + k3)</span><br><span class=\"line\"></span><br><span class=\"line\">这一行执行TEA算法中的加密操作，对 v1 进行更新。同样地，它也包括了左移、异或和加法等操作。</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [v0, v1]</span><br><span class=\"line\"></span><br><span class=\"line\">这一行返回加密后的数据块，以列表的形式包含两个<span class=\"number\">32</span>位的字。</span><br><span class=\"line\"></span><br><span class=\"line\">解密部分的代码与加密部分类似，只是运算过程中的操作相反。整个过程涉及到了TEA算法中的加密和解密核心过程。</span><br><span class=\"line\"></span><br><span class=\"line\">至于encrypt和decrypt函数，它们是用来对数据进行分块加密和解密的。具体过程是将数据分成<span class=\"number\">8</span>字节的块，然后对每个块进行加密或解密操作。这个过程在实际应用中是必要的，因为TEA算法是对固定长度的数据块进行操作的。</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"tea加密c语言\"><a class=\"anchor\" href=\"#tea加密c语言\">#</a> TEA 加密（C 语言）</h3>\n<p><figure class=\"highlight cc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdint.h&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">encrypt</span> <span class=\"params\">(<span class=\"type\">uint32_t</span> *v,<span class=\"type\">uint32_t</span> *k )</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> v0=v[<span class=\"number\">0</span>],v1=v[<span class=\"number\">1</span>],sum=<span class=\"number\">0</span>,i;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> delta=<span class=\"number\">0x9e3779b9</span>;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> k0=k[<span class=\"number\">0</span>],k1=k[<span class=\"number\">1</span>],k2=k[<span class=\"number\">2</span>],k3=k[<span class=\"number\">3</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">32</span>;i++)&#123;</span><br><span class=\"line\">\t\tsum+=delta;</span><br><span class=\"line\">\t\tv0+=((v1&lt;&lt;<span class=\"number\">4</span>)+k0)^(v1+sum)^((v1&gt;&gt;<span class=\"number\">5</span>)+k1);</span><br><span class=\"line\">\t\tv1+=((v0&lt;&lt;<span class=\"number\">4</span>)+k2)^(v0+sum)^((v0&gt;&gt;<span class=\"number\">5</span>)+k3);</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\tv[<span class=\"number\">0</span>]=v0;v[<span class=\"number\">1</span>]=v1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">decrypt</span> <span class=\"params\">(<span class=\"type\">uint32_t</span> *v,<span class=\"type\">uint32_t</span> *k)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> v0=v[<span class=\"number\">0</span>],v1=v[<span class=\"number\">1</span>],sum=<span class=\"number\">0xC6EF3720</span>,i;\t<span class=\"comment\">//这里的sum是0x9e3779b9*32后截取32位的结果，截取很重要。</span></span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> delta=<span class=\"number\">0x9e3779b9</span>;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> k0=k[<span class=\"number\">0</span>],k1=k[<span class=\"number\">1</span>],k2=k[<span class=\"number\">2</span>],k3=k[<span class=\"number\">3</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">32</span>;i++)&#123;</span><br><span class=\"line\">\t\tv1-=((v0&lt;&lt;<span class=\"number\">4</span>)+k2)^(v0+sum)^((v0&gt;&gt;<span class=\"number\">5</span>)+k3);</span><br><span class=\"line\">\t\tv0-=((v1&lt;&lt;<span class=\"number\">4</span>)+k0)^(v1+sum)^((v1&gt;&gt;<span class=\"number\">5</span>)+k1);</span><br><span class=\"line\">\t\tsum-=delta;</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\tv[<span class=\"number\">0</span>]=v0;v[<span class=\"number\">1</span>]=v1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> v[<span class=\"number\">2</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;,k[<span class=\"number\">4</span>]=&#123;<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;加密前的数据：%u %u\\n&quot;</span>,v[<span class=\"number\">0</span>],v[<span class=\"number\">1</span>]);\t<span class=\"comment\">//%u 以十进制形式输出无符号整数 </span></span><br><span class=\"line\">\t<span class=\"built_in\">encrypt</span>(v,k);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;加密后数据：%u %u\\n&quot;</span>,v[<span class=\"number\">0</span>],v[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"built_in\">decrypt</span>(v,k);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;解密后数据：%u %u\\n&quot;</span>,v[<span class=\"number\">0</span>],v[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"xtea加密\"><a class=\"anchor\" href=\"#xtea加密\">#</a> XTEA 加密</h3>\n<p><figure class=\"highlight cc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdint.h&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">encipher</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> num_rounds, <span class=\"type\">uint32_t</span> v[<span class=\"number\">2</span>], <span class=\"type\">uint32_t</span> <span class=\"type\">const</span> key[<span class=\"number\">4</span>])</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">int</span> i;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> v0=v[<span class=\"number\">0</span>],v1=v[<span class=\"number\">1</span>],sum=<span class=\"number\">0</span>,delta=<span class=\"number\">0x9E3779B9</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;num_rounds;i++)&#123;</span><br><span class=\"line\">\t\tv0+=(((v1&lt;&lt;<span class=\"number\">4</span>)^(v1&gt;&gt;<span class=\"number\">5</span>))+v1)^(sum+key[sum&amp;<span class=\"number\">3</span>]);</span><br><span class=\"line\">\t\tsum+=delta;</span><br><span class=\"line\">\t\tv1+=(((v0&lt;&lt;<span class=\"number\">4</span>)^(v0&gt;&gt;<span class=\"number\">5</span>))+v0)^(sum+key[(sum&gt;&gt;<span class=\"number\">11</span>)&amp;<span class=\"number\">3</span>]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tv[<span class=\"number\">0</span>]=v0;v[<span class=\"number\">1</span>]=v1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">decipher</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> num_rounds,<span class=\"type\">uint32_t</span> v[<span class=\"number\">2</span>],<span class=\"type\">uint32_t</span> <span class=\"type\">const</span> key[<span class=\"number\">4</span>])</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">int</span> i;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> v0=v[<span class=\"number\">0</span>],v1=v[<span class=\"number\">1</span>],delta=<span class=\"number\">0x9E3779B9</span>,sum=delta*num_rounds;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;num_rounds;i++)&#123;</span><br><span class=\"line\">\tv1-=(((v0&lt;&lt;<span class=\"number\">4</span>)^(v0&gt;&gt;<span class=\"number\">5</span>))+v0)^(sum+key[(sum&gt;&gt;<span class=\"number\">11</span>)&amp;<span class=\"number\">3</span>]);</span><br><span class=\"line\">\tsum-=delta;</span><br><span class=\"line\">\tv0-=(((v1&lt;&lt;<span class=\"number\">4</span>)^(v1&gt;&gt;<span class=\"number\">5</span>))+v1)^(sum+key[sum&amp;<span class=\"number\">3</span>]);</span><br><span class=\"line\">\t&#125; </span><br><span class=\"line\">\tv[<span class=\"number\">0</span>]=v0;v[<span class=\"number\">1</span>]=v1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> v[<span class=\"number\">2</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> <span class=\"type\">const</span> k[<span class=\"number\">4</span>]=&#123;<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">int</span> r=<span class=\"number\">32</span>;\t\t\t\t<span class=\"comment\">//这里是加密轮数，自己设置 </span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;加密前原始数据：%u %u\\n&quot;</span>,v[<span class=\"number\">0</span>],v[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"built_in\">encipher</span>(r,v,k);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;加密后原始数据：%u %u\\n&quot;</span>,v[<span class=\"number\">0</span>],v[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"built_in\">decipher</span>(r,v,k);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;解密后原始数据：%u %u\\n&quot;</span>,v[<span class=\"number\">0</span>],v[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"xxtea加密\"><a class=\"anchor\" href=\"#xxtea加密\">#</a> XXTEA 加密</h3>\n<p><figure class=\"highlight cc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdint.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DELTA 0x933779b9</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MX (((z&gt;&gt;5^y<span class=\"string\">&lt;&lt;2)+(y&gt;</span>&gt;3^z&lt;&lt;4))^((sum^y)+(key[(p&amp;3)^e]^z)))</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">btea</span><span class=\"params\">(<span class=\"type\">uint32_t</span> *v,<span class=\"type\">int</span> n,<span class=\"type\">uint32_t</span> <span class=\"type\">const</span> key[<span class=\"number\">4</span>])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> y,z,sum;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> p,rounds,e;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n&gt;<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\trounds=<span class=\"number\">6</span>+<span class=\"number\">52</span>/n;\t<span class=\"comment\">//这里可以说是预定义值，n=2是rounds=32</span></span><br><span class=\"line\">\t\tsum=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tz=v[n<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tsum+=DELTA;</span><br><span class=\"line\">\t\t\te=(sum&gt;&gt;<span class=\"number\">2</span>)&amp;<span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(p=<span class=\"number\">0</span>;p&lt;n<span class=\"number\">-1</span>;p++)        <span class=\"comment\">//注意这里的p是从0~n-1</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\ty=v[p+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\t\t\tz=v[p]+=MX;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\ty=v[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t\tz=v[n<span class=\"number\">-1</span>]+=MX;        <span class=\"comment\">//这里的MX中传入的p=n-1</span></span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(--rounds);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n&lt;<span class=\"number\">-1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tn=-n;</span><br><span class=\"line\">\t\trounds=<span class=\"number\">6</span>+<span class=\"number\">52</span>/n;</span><br><span class=\"line\">\t\tsum=rounds*DELTA;</span><br><span class=\"line\">\t\ty=v[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\te=(sum&gt;&gt;<span class=\"number\">2</span>)&amp;<span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(p=n<span class=\"number\">-1</span>;p&gt;<span class=\"number\">0</span>;p--)    <span class=\"comment\">//注意这里的p是从n-1~0,和上面是反过来的</span></span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tz=v[p<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t\t\ty=v[p]-=MX;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tz=v[n<span class=\"number\">-1</span>];</span><br><span class=\"line\">\t\t\ty=v[<span class=\"number\">0</span>]-=MX;    <span class=\"comment\">//这里的MX中传入的 p=0</span></span><br><span class=\"line\">\t\t\tsum-=DELTA;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(--rounds);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> v[<span class=\"number\">2</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">uint32_t</span> <span class=\"type\">const</span> k[<span class=\"number\">4</span>]=&#123;<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;加密前原始数据：%u %u\\n&quot;</span>,v[<span class=\"number\">0</span>],v[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"built_in\">btea</span>(v,n,k);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;加密后数据：%u %u\\n&quot;</span>,v[<span class=\"number\">0</span>],v[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"built_in\">btea</span>(v,-n,k);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;解密后数据：%u %u\\n&quot;</span>,v[<span class=\"number\">0</span>],v[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "CTF"
            ]
        },
        {
            "id": "https://zoyager.github.io/2024/06/12/CTF/Reverse%E5%B0%8F%E8%AE%B0/",
            "url": "https://zoyager.github.io/2024/06/12/CTF/Reverse%E5%B0%8F%E8%AE%B0/",
            "title": "'Reverse小记'",
            "date_published": "2024-06-12T13:38:58.000Z",
            "content_html": "<p>这是一篇初学 CTF 中一些 Reverse 的解题记录～</p>\n<h3 id=\"swpuctf-2021-新生赛re2\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛re2\">#</a> [SWPUCTF 2021 新生赛] re2</h3>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_main();</span><br><span class=\"line\"><span class=\"built_in\">strcpy</span>(Str2, <span class=\"string\">&quot;ylqq]aycqyp&#123;&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(Format);</span><br><span class=\"line\">gets(Str);</span><br><span class=\"line\">v7 = <span class=\"built_in\">strlen</span>(Str);</span><br><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; v7; ++i )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( (Str[i] &lt;= <span class=\"number\">96</span> || Str[i] &gt; <span class=\"number\">98</span>) &amp;&amp; (Str[i] &lt;= <span class=\"number\">64</span> || Str[i] &gt; <span class=\"number\">66</span>) )</span><br><span class=\"line\">    Str[i] -= <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    Str[i] += <span class=\"number\">24</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( <span class=\"built_in\">strcmp</span>(Str, Str2) )</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(asc_404024);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(aBingo);</span><br><span class=\"line\">system(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure></p>\n<p>对 Str2 进行加密与输入的 Str 进行比较</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;ylqq]aycqyp&#123;&quot;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">ord</span>(i) &lt;= <span class=\"number\">94</span> <span class=\"keyword\">or</span> <span class=\"built_in\">ord</span>(i) &gt; <span class=\"number\">96</span>) <span class=\"keyword\">and</span> (<span class=\"built_in\">ord</span>(i) &lt;= <span class=\"number\">64</span> <span class=\"keyword\">or</span> <span class=\"built_in\">ord</span>(i) &gt; <span class=\"number\">66</span>):</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i)+<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i)-<span class=\"number\">24</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure></p>\n<p>（94 和 96 不知道咋来的）</p>\n<h3 id=\"swpuctf-2021-新生赛简简单单的逻辑\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛简简单单的逻辑\">#</a> [SWPUCTF 2021 新生赛] 简简单单的逻辑</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag = <span class=\"string\">&#x27;xxxxxxxxxxxxxxxxxx&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">list</span> = [<span class=\"number\">47</span>, <span class=\"number\">138</span>, <span class=\"number\">127</span>, <span class=\"number\">57</span>, <span class=\"number\">117</span>, <span class=\"number\">188</span>, <span class=\"number\">51</span>, <span class=\"number\">143</span>, <span class=\"number\">17</span>, <span class=\"number\">84</span>, <span class=\"number\">42</span>, <span class=\"number\">135</span>, <span class=\"number\">76</span>, <span class=\"number\">105</span>, <span class=\"number\">28</span>, <span class=\"number\">169</span>, <span class=\"number\">25</span>]</span><br><span class=\"line\">result = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(<span class=\"built_in\">list</span>)):</span><br><span class=\"line\">    key = (<span class=\"built_in\">list</span>[i]&gt;&gt;<span class=\"number\">4</span>)+((<span class=\"built_in\">list</span>[i] &amp; <span class=\"number\">0xf</span>)&lt;&lt;<span class=\"number\">4</span>)</span><br><span class=\"line\">    result += <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(<span class=\"built_in\">ord</span>(flag[i])^key))[<span class=\"number\">2</span>:].zfill(<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"><span class=\"comment\"># result=bcfba4d0038d48bd4b00f82796d393dfec</span></span><br></pre></td></tr></table></figure></p>\n<p>a ^ key ^ key = a</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">result = <span class=\"string\">&#x27;bcfba4d0038d48bd4b00f82796d393dfec&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">list</span> = [<span class=\"number\">47</span>, <span class=\"number\">138</span>, <span class=\"number\">127</span>, <span class=\"number\">57</span>, <span class=\"number\">117</span>, <span class=\"number\">188</span>, <span class=\"number\">51</span>, <span class=\"number\">143</span>, <span class=\"number\">17</span>, <span class=\"number\">84</span>, <span class=\"number\">42</span>, <span class=\"number\">135</span>, <span class=\"number\">76</span>, <span class=\"number\">105</span>, <span class=\"number\">28</span>, <span class=\"number\">169</span>, <span class=\"number\">25</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)//<span class=\"number\">2</span>):</span><br><span class=\"line\">    key = (<span class=\"built_in\">list</span>[i] &gt;&gt; <span class=\"number\">4</span>) + ((<span class=\"built_in\">list</span>[i] &amp; <span class=\"number\">0xf</span>) &lt;&lt; <span class=\"number\">4</span>)</span><br><span class=\"line\">    s = result[<span class=\"number\">2</span>*i:<span class=\"number\">2</span>+<span class=\"number\">2</span>*i]</span><br><span class=\"line\">    t = <span class=\"built_in\">int</span>(s,<span class=\"number\">16</span>)</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(t^key)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#NSSCTF&#123;EZEZ_RERE&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"swpuctf-2021-新生赛re1\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛re1\">#</a> [SWPUCTF 2021 新生赛] re1</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_main();</span><br><span class=\"line\"> strcpy(Str2, <span class=\"string\">&quot;&#123;34sy_r3v3rs3&#125;&quot;</span>);</span><br><span class=\"line\"> printf(<span class=\"string\">&quot;please put your flag:&quot;</span>);</span><br><span class=\"line\"> scanf(<span class=\"string\">&quot;%s&quot;</span>, Str1);</span><br><span class=\"line\"> <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">665</span>; ++i )</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> ( Str1[i] == <span class=\"number\">101</span> )</span><br><span class=\"line\">     Str1[i] = <span class=\"number\">51</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">665</span>; ++i )</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> ( Str1[i] == <span class=\"number\">97</span> )</span><br><span class=\"line\">     Str1[i] = <span class=\"number\">52</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">if</span> ( strcmp(Str1, Str2) )</span><br><span class=\"line\">   printf(<span class=\"string\">&quot;you are wrong,see again!&quot;</span>);</span><br><span class=\"line\"> <span class=\"keyword\">else</span></span><br><span class=\"line\">   printf(<span class=\"string\">&quot;you are right!&quot;</span>);</span><br><span class=\"line\"> system(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure></p>\n<p>加密将 ASCII 值位 101 变为 51，97 变为 52。即 3 和 e，4 和 a 互换</p>\n<h3 id=\"nssctf-2022-spring-recruiteasy-c\"><a class=\"anchor\" href=\"#nssctf-2022-spring-recruiteasy-c\">#</a> [NSSCTF 2022 Spring Recruit]easy C</h3>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> a[]=<span class=\"string\">&quot;wwwwwww&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">char</span> b[]=<span class=\"string\">&quot;d`vxbQd&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//try to find out the flag</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;please input flag:&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot; %s&quot;</span>,&amp;a);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">strlen</span>(a)!=<span class=\"number\">7</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;NoNoNo\\n&quot;</span>);</span><br><span class=\"line\">        system(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">7</span>;i++)&#123;</span><br><span class=\"line\">        a[i]++;</span><br><span class=\"line\">        a[i]=a[i]^<span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">strcmp</span>(a,b))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;good!\\n&quot;</span>);</span><br><span class=\"line\">        system(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;NoNoNo\\n&quot;</span>);</span><br><span class=\"line\">    system(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输入的字符串加密后与 char b 相等即将 b 解密</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result = <span class=\"string\">&quot;d`vxbQd&quot;</span></span><br><span class=\"line\">flag = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">    t = <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(i)^<span class=\"number\">2</span>) - <span class=\"number\">1</span>)</span><br><span class=\"line\">    flag += t</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#easy_Re</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"litctf-2023世界上最棒的程序员\"><a class=\"anchor\" href=\"#litctf-2023世界上最棒的程序员\">#</a> [LitCTF 2023] 世界上最棒的程序员</h3>\n<p>ida 打开后即有 flag</p>\n<h3 id=\"hubuctf-2022-新生赛simple_re\"><a class=\"anchor\" href=\"#hubuctf-2022-新生赛simple_re\">#</a> [HUBUCTF 2022 新生赛] simple_RE</h3>\n<p>base 换表</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#新表</span></span><br><span class=\"line\">biao = <span class=\"string\">&#x27;qvEJAfHmUYjBac+u8Ph5n9Od17FrICL/X0gVtM4Qk6T2z3wNSsyoebilxWKGZpRD&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#密文</span></span><br><span class=\"line\">origin = <span class=\"string\">&quot;5Mc58bPHLiAx7J8ocJIlaVUxaJvMcoYMaoPMaOfg15c475tscHfM/8==&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">a = <span class=\"built_in\">str</span>.maketrans(biao,<span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(base64.b64decode(origin.translate(a)))</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"swpuctf-2021-新生赛简简单单的解密\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛简简单单的解密\">#</a> [SWPUCTF 2021 新生赛] 简简单单的解密</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">分析：</span><br><span class=\"line\">题目过程为rc4加密</span><br><span class=\"line\"></span><br><span class=\"line\">RC4加密：</span><br><span class=\"line\"></span><br><span class=\"line\">RC4 算法非常简单:用从1~256个字节的可变长度密钥初始化一个256字节的状态矢量S,S的元素记为S[0],s[1],…,S[255]，从始至终置换后的S包含从0~255的所有8比特数。对于加密和解密中应用的密钥流的产生,密钥流中的每个密钥k是由S中255 个元素按一定的方式选出一个元素而生成 每生成一个密钥k,S中的元素就被重新置换一次。</span><br><span class=\"line\"></span><br><span class=\"line\">虽然每一次的s盒都不一样，但是rc4为对称加密,加解密过程可逆，因此解密直接按原程序跑就可以（因为由流程可以看出只有最后一步异或操作是对字符串的加密，前面的操作均为对s盒的更改运算，而且最后一步异或也可逆）</span><br><span class=\"line\"></span><br><span class=\"line\">注意最后base加解密为干扰操作没有用，join作用为将字符串以指定符号分隔，前面是空的所以也没有用</span><br><span class=\"line\"></span><br><span class=\"line\">urllib.parse.quote（）为url加密，解密函数为</span><br><span class=\"line\"></span><br><span class=\"line\">urllib.parse.unquote（）</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#源码</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> base64,urllib.parse</span><br><span class=\"line\">key = <span class=\"string\">&quot;HereIsFlagggg&quot;</span></span><br><span class=\"line\">flag = <span class=\"string\">&quot;xxxxxxxxxxxxxxxxxxx&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">s_box = <span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">256</span>))</span><br><span class=\"line\">j = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">256</span>):</span><br><span class=\"line\">    j = (j + s_box[i] + <span class=\"built_in\">ord</span>(key[i % <span class=\"built_in\">len</span>(key)])) % <span class=\"number\">256</span></span><br><span class=\"line\">    s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class=\"line\">res = []</span><br><span class=\"line\">i = j = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> flag:</span><br><span class=\"line\">    i = (i + <span class=\"number\">1</span>) % <span class=\"number\">256</span></span><br><span class=\"line\">    j = (j + s_box[i]) % <span class=\"number\">256</span></span><br><span class=\"line\">    s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class=\"line\">    t = (s_box[i] + s_box[j]) % <span class=\"number\">256</span></span><br><span class=\"line\">    k = s_box[t]</span><br><span class=\"line\">    res.append(<span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(s) ^ k))</span><br><span class=\"line\">cipher = <span class=\"string\">&quot;&quot;</span>.join(res)</span><br><span class=\"line\">crypt = (<span class=\"built_in\">str</span>(base64.b64encode(cipher.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)), <span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">enc = <span class=\"built_in\">str</span>(base64.b64decode(crypt),<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\">enc = urllib.parse.quote(enc)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(enc)</span><br><span class=\"line\"><span class=\"comment\"># enc = %C2%A6n%C2%87Y%1Ag%3F%C2%A01.%C2%9C%C3%B7%C3%8A%02%C3%80%C2%92W%C3%8C%C3%BA</span></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解密脚本</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> base64,urllib.parse</span><br><span class=\"line\">key = <span class=\"string\">&quot;HereIsFlagggg&quot;</span></span><br><span class=\"line\">enc = <span class=\"string\">&quot;%C2%A6n%C2%87Y%1Ag%3F%C2%A01.%C2%9C%C3%B7%C3%8A%02%C3%80%C2%92W%C3%8C%C3%BA&quot;</span></span><br><span class=\"line\">flag = urllib.parse.unquote(enc)</span><br><span class=\"line\"><span class=\"comment\">#原代码原因：rc4为对称加密,加解密过程可逆</span></span><br><span class=\"line\">s_box = <span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">256</span>))</span><br><span class=\"line\">j = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">256</span>):</span><br><span class=\"line\">    j = (j + s_box[i] + <span class=\"built_in\">ord</span>(key[i % <span class=\"built_in\">len</span>(key)])) % <span class=\"number\">256</span></span><br><span class=\"line\">    s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class=\"line\">res = []</span><br><span class=\"line\">i = j = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> flag:</span><br><span class=\"line\">    i = (i + <span class=\"number\">1</span>) % <span class=\"number\">256</span></span><br><span class=\"line\">    j = (j + s_box[i]) % <span class=\"number\">256</span></span><br><span class=\"line\">    s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class=\"line\">    t = (s_box[i] + s_box[j]) % <span class=\"number\">256</span></span><br><span class=\"line\">    k = s_box[t]</span><br><span class=\"line\">    res.append(<span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(s) ^ k))</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&#x27;&#x27;</span>)<span class=\"comment\">#NSSCTF&#123;REAL_EZ_RC4&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"wustctf-2020level2\"><a class=\"anchor\" href=\"#wustctf-2020level2\">#</a> [WUSTCTF 2020]level2</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upx -d <span class=\"comment\">#文件</span></span><br></pre></td></tr></table></figure></p>\n<p>脱壳后 ida 可看到 flag</p>\n<h3 id=\"swpuctf-2021-新生赛fakerandom\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛fakerandom\">#</a> [SWPUCTF 2021 新生赛] fakerandom</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#源码</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;xxxxxxxxxxxxxxxxxxxx&#x27;</span></span><br><span class=\"line\">random.seed(<span class=\"number\">1</span>)</span><br><span class=\"line\">l = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">    l.append(random.getrandbits(<span class=\"number\">8</span>))</span><br><span class=\"line\">result=[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(l)):</span><br><span class=\"line\">    random.seed(l[i])</span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>):</span><br><span class=\"line\">        result.append(<span class=\"built_in\">ord</span>(flag[i*<span class=\"number\">5</span>+n])^random.getrandbits(<span class=\"number\">8</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"><span class=\"comment\"># result = [201, 8, 198, 68, 131, 152, 186, 136, 13, 130, 190, 112, 251, 93, 212, 1, 31, 214, 116, 244]</span></span><br></pre></td></tr></table></figure></p>\n<p>据 random 模块生成一个种子，使以后生成的随机序列不发生变化。主要加密过程为：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(l)):</span><br><span class=\"line\">    random.seed(l[i])</span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>):</span><br><span class=\"line\">        result.append(<span class=\"built_in\">ord</span>(flag[i*<span class=\"number\">5</span>+n])^random.getrandbits(<span class=\"number\">8</span>))</span><br></pre></td></tr></table></figure></p>\n<p>则解密过程为：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag += <span class=\"built_in\">chr</span>(result[i*<span class=\"number\">5</span>+n] ^ random.getrandbits(<span class=\"number\">8</span>))</span><br></pre></td></tr></table></figure></p>\n<p>完整解密代码：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">random.seed(<span class=\"number\">1</span>)<span class=\"comment\">#生成种子使生成的随机序列相同</span></span><br><span class=\"line\">l = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">    l.append(random.getrandbits(<span class=\"number\">8</span>))<span class=\"comment\">#随机生成一个8位整数</span></span><br><span class=\"line\">result = [<span class=\"number\">201</span>, <span class=\"number\">8</span>, <span class=\"number\">198</span>, <span class=\"number\">68</span>, <span class=\"number\">131</span>, <span class=\"number\">152</span>, <span class=\"number\">186</span>, <span class=\"number\">136</span>, <span class=\"number\">13</span>, <span class=\"number\">130</span>, <span class=\"number\">190</span>, <span class=\"number\">112</span>, <span class=\"number\">251</span>, <span class=\"number\">93</span>, <span class=\"number\">212</span>, <span class=\"number\">1</span>, <span class=\"number\">31</span>, <span class=\"number\">214</span>, <span class=\"number\">116</span>, <span class=\"number\">244</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(l)):</span><br><span class=\"line\">    random.seed(l[i])</span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">5</span>):</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(result[i*<span class=\"number\">5</span>+n] ^ random.getrandbits(<span class=\"number\">8</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#NSSCTF&#123;FakeE_random&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"swpuctf-2022-新生赛base64\"><a class=\"anchor\" href=\"#swpuctf-2022-新生赛base64\">#</a> [SWPUCTF 2022 新生赛] base64</h3>\n<p>ida 打开，shift+12 查找字符串，找到两段，</p>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TlNTQ1RGe2Jhc2VfNjRfTlRXUTRaR0ROQzdOfQ==</span><br><span class=\"line\">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</span><br></pre></td></tr></table></figure></p>\n<p>正常 base64 解码</p>\n<h3 id=\"gfctf-2021wordy\"><a class=\"anchor\" href=\"#gfctf-2021wordy\">#</a> [GFCTF 2021]wordy</h3>\n<p>花指令</p>\n<h3 id=\"swpuctf-2021-新生赛fakebase\"><a class=\"anchor\" href=\"#swpuctf-2021-新生赛fakebase\">#</a> [SWPUCTF 2021 新生赛] fakebase</h3>\n<h3 id=\"reverse1\"><a class=\"anchor\" href=\"#reverse1\">#</a> reverse1</h3>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//加密代码</span></span><br><span class=\"line\"> <span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>; ; ++j )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v8 = j;</span><br><span class=\"line\">    v2 = j_strlen(Str2);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v8 &gt; v2 )</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( Str2[j] == <span class=\"string\">&#x27;o&#x27;</span> )</span><br><span class=\"line\">      Str2[j] = <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//字符串为&#123;hello_world&#125;</span></span><br><span class=\"line\">可知<span class=\"number\">0</span>和o互换</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"新年快乐\"><a class=\"anchor\" href=\"#新年快乐\">#</a> 新年快乐</h3>\n<p>EP 查壳，upx 脱壳，ida32 查看，主要代码如下</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__main();</span><br><span class=\"line\"><span class=\"built_in\">strcpy</span>(Str2, <span class=\"string\">&quot;HappyNewYear!&quot;</span>);</span><br><span class=\"line\">Str1 = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">memset</span>(v6, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v6));</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;please input the true flag:&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, &amp;Str1);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( !<span class=\"built_in\">strncmp</span>((<span class=\"type\">const</span> <span class=\"type\">char</span> *)&amp;Str1, Str2, <span class=\"built_in\">strlen</span>(Str2)) )</span><br><span class=\"line\">  result = <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;this is true flag!&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  result = <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong!&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> result;</span><br></pre></td></tr></table></figure></p>\n<p>匹配输入和 str2 是否一致</p>\n<h3 id=\"xor\"><a class=\"anchor\" href=\"#xor\">#</a> xor</h3>\n<p>加密过程为：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">33</span>; ++i )</span><br><span class=\"line\">  __b[i] ^= __b[i - <span class=\"number\">1</span>];<span class=\"comment\">//每一项与它前一项进行异或</span></span><br></pre></td></tr></table></figure></p>\n<p>在 ida 中 shift+e 导出 16 进制流</p>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将数据流分块变成16进制</span></span><br><span class=\"line\"><span class=\"comment\"># result = &#x27;660A6B0C77264F2E4011780D5A3B55117019461F76224D23440E6706680F47324F00&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># result1 = []</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(len(result)//2):</span></span><br><span class=\"line\"><span class=\"comment\">#     t = result[2*i:2*i+2]</span></span><br><span class=\"line\"><span class=\"comment\">#     t = &#x27;0x&#x27;+ t</span></span><br><span class=\"line\"><span class=\"comment\">#     result1.append(t)</span></span><br><span class=\"line\"><span class=\"comment\"># print(result1)</span></span><br><span class=\"line\"><span class=\"comment\">#异或解密</span></span><br><span class=\"line\">result2 = [<span class=\"number\">0x66</span>, <span class=\"number\">0x0A</span>, <span class=\"number\">0x6B</span>, <span class=\"number\">0x0C</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x4F</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x40</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x0D</span>, <span class=\"number\">0x5A</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0x1F</span>,<span class=\"number\">0x76</span>, <span class=\"number\">0x22</span>, <span class=\"number\">0x4D</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x44</span>, <span class=\"number\">0x0E</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0x0F</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0x32</span>, <span class=\"number\">0x4F</span>, <span class=\"number\">0x00</span>]</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"built_in\">len</span>(result2)-<span class=\"number\">1</span>):</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(result2[i]^result2[i-<span class=\"number\">1</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#flag&#123;QianQiuWanDai_YiTongJiangHu&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"reverse3\"><a class=\"anchor\" href=\"#reverse3\">#</a> reverse3</h3>\n<p>主要加密过程：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sub_41132F(<span class=\"string\">&quot;please enter the flag:&quot;</span>, v7);</span><br><span class=\"line\">  sub_411375(<span class=\"string\">&quot;%20s&quot;</span>, (<span class=\"type\">char</span>)Str);</span><br><span class=\"line\">  v3 = j_strlen(Str);</span><br><span class=\"line\">  v4 = (<span class=\"type\">const</span> <span class=\"type\">char</span> *)sub_4110BE(Str, v3, v14);</span><br><span class=\"line\">  <span class=\"built_in\">strncpy</span>(Destination, v4, <span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  v11 = j_strlen(Destination);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>; j &lt; v11; ++j )</span><br><span class=\"line\">    Destination[j] += j;</span><br></pre></td></tr></table></figure></p>\n<p>。根据后两句代码 ASCII 值加一</p>\n<p>所以解密脚本：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str2 = <span class=\"string\">&#x27;e3nifIH9b_C@n@dH&#x27;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">total = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> str2:</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i)-total)</span><br><span class=\"line\">    total += <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#e2lfbDB2ZV95b3V9</span></span><br></pre></td></tr></table></figure></p>\n<p>解出来发现不对，shift+12 查看字符串发现 base64 表，进行一次 base64 解码得到 flag</p>\n<h3 id=\"helloword\"><a class=\"anchor\" href=\"#helloword\">#</a> helloword</h3>\n<p>shift+12 查找字符串</p>\n<h3 id=\"不一样的flag\"><a class=\"anchor\" href=\"#不一样的flag\">#</a> 不一样的 flag</h3>\n<p>字符串‘*11110100001010000101111#’分为五行五列有</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*1111</span><br><span class=\"line\">01000</span><br><span class=\"line\">01010</span><br><span class=\"line\">00010</span><br><span class=\"line\">1111#</span><br></pre></td></tr></table></figure></p>\n<p>走迷宫 222441144222</p>\n<h3 id=\"litctf-2023ez_xor\"><a class=\"anchor\" href=\"#litctf-2023ez_xor\">#</a> [LitCTF 2023]ez_XOR</h3>\n<p>主要加密过程</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__main();</span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(v8, <span class=\"string\">&quot;E`&#125;J]OrQF[V8zV:hzpV&#125;fVF[t&quot;</span>);</span><br><span class=\"line\">  v9 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v11 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v13 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v14 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter The Right FLAG:&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, Str1);</span><br><span class=\"line\">  XOR(Str1, <span class=\"number\">3</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(Str1, v8) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;U Saved IT!\\n&quot;</span>);</span><br><span class=\"line\">    result = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">size_t</span> __cdecl <span class=\"title function_\">XOR</span><span class=\"params\">(<span class=\"type\">char</span> *Str, <span class=\"type\">int</span> a2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">size_t</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+2Ch] [ebp-Ch]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; ; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    result = <span class=\"built_in\">strlen</span>(Str);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( i &gt;= result )</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    Str[i] ^= <span class=\"number\">3</span> * a2;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>所以是将 v8 字符串用 XOR 函数异或即异或 9</p>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result2 = <span class=\"string\">&#x27;E`&#125;J]OrQF[V8zV:hzpV&#125;fVF[t&#x27;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> result2:</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i)^<span class=\"number\">9</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)<span class=\"comment\">#LitCTF&#123;XOR_1s_3asy_to_OR&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"litctf-2023enbase64\"><a class=\"anchor\" href=\"#litctf-2023enbase64\">#</a> [LitCTF 2023]enbase64</h3>\n<p>加密过程：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  __main();</span><br><span class=\"line\">  Str = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(v9, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v9));</span><br><span class=\"line\">  Str1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(v7, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v7));</span><br><span class=\"line\">  *(_DWORD *)Source = *(_DWORD *)<span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>;</span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(v5, <span class=\"string\">&quot;9+/&quot;</span>);</span><br><span class=\"line\">  qmemcpy(&amp;Source[<span class=\"number\">1</span>], &amp;aAbcdefghijklmn[-(Source - &amp;Source[<span class=\"number\">1</span>])], <span class=\"number\">4</span> * (((Source - &amp;Source[<span class=\"number\">1</span>] + <span class=\"number\">65</span>) &amp; <span class=\"number\">0xFFFFFFFC</span>) &gt;&gt; <span class=\"number\">2</span>));</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Please input flag:&quot;</span>);</span><br><span class=\"line\">  gets(&amp;Str);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>((<span class=\"type\">const</span> <span class=\"type\">char</span> *)&amp;Str) == <span class=\"number\">33</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    base64(Source, (<span class=\"type\">char</span> *)&amp;Str, (<span class=\"type\">char</span> *)&amp;Str1);</span><br><span class=\"line\">    basecheck((<span class=\"type\">char</span> *)&amp;Str1);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#base64（）函数</span><br><span class=\"line\"><span class=\"type\">signed</span> <span class=\"type\">int</span> __cdecl <span class=\"title function_\">base64</span><span class=\"params\">(<span class=\"type\">char</span> *Source, <span class=\"type\">char</span> *Str, <span class=\"type\">char</span> *a3)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">signed</span> <span class=\"type\">int</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">signed</span> <span class=\"type\">int</span> v4; <span class=\"comment\">// [esp+14h] [ebp-14h]</span></span><br><span class=\"line\">  <span class=\"type\">signed</span> <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+18h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v6; <span class=\"comment\">// [esp+1Ch] [ebp-Ch]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  basechange(Source);</span><br><span class=\"line\">  v4 = <span class=\"built_in\">strlen</span>(Str);</span><br><span class=\"line\">  v6 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; ; i += <span class=\"number\">3</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    result = i;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( i &gt;= v4 )</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    a3[v6] = Source[Str[i] &gt;&gt; <span class=\"number\">2</span>];</span><br><span class=\"line\">    a3[v6 + <span class=\"number\">1</span>] = Source[(<span class=\"number\">16</span> * Str[i]) &amp; <span class=\"number\">0x30</span> | (Str[i + <span class=\"number\">1</span>] &gt;&gt; <span class=\"number\">4</span>)];</span><br><span class=\"line\">    a3[v6 + <span class=\"number\">2</span>] = Source[(<span class=\"number\">4</span> * Str[i + <span class=\"number\">1</span>]) &amp; <span class=\"number\">0x3C</span> | (Str[i + <span class=\"number\">2</span>] &gt;&gt; <span class=\"number\">6</span>)];</span><br><span class=\"line\">    a3[v6 + <span class=\"number\">3</span>] = Source[Str[i + <span class=\"number\">2</span>] &amp; <span class=\"number\">0x3F</span>];</span><br><span class=\"line\">    v6 += <span class=\"number\">4</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#basechange（）函数</span></span><br><span class=\"line\"><span class=\"type\">char</span> *__cdecl <span class=\"title function_\">basechange</span><span class=\"params\">(<span class=\"type\">char</span> *Source)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> *result; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> Destination[<span class=\"number\">65</span>]; <span class=\"comment\">// [esp+13h] [ebp-155h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v3[<span class=\"number\">65</span>]; <span class=\"comment\">// [esp+54h] [ebp-114h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">int</span> j; <span class=\"comment\">// [esp+158h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+15Ch] [ebp-Ch]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(v3, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v3));</span><br><span class=\"line\">  v3[<span class=\"number\">0</span>] = <span class=\"number\">16</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">1</span>] = <span class=\"number\">34</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">2</span>] = <span class=\"number\">56</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">3</span>] = <span class=\"number\">7</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">4</span>] = <span class=\"number\">46</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">5</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">6</span>] = <span class=\"number\">10</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">7</span>] = <span class=\"number\">44</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">8</span>] = <span class=\"number\">20</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">9</span>] = <span class=\"number\">41</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">10</span>] = <span class=\"number\">59</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">11</span>] = <span class=\"number\">31</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">12</span>] = <span class=\"number\">51</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">13</span>] = <span class=\"number\">60</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">14</span>] = <span class=\"number\">61</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">15</span>] = <span class=\"number\">26</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">16</span>] = <span class=\"number\">5</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">17</span>] = <span class=\"number\">40</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">18</span>] = <span class=\"number\">21</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">19</span>] = <span class=\"number\">38</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">20</span>] = <span class=\"number\">4</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">21</span>] = <span class=\"number\">54</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">22</span>] = <span class=\"number\">52</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">23</span>] = <span class=\"number\">47</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">24</span>] = <span class=\"number\">3</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">25</span>] = <span class=\"number\">11</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">26</span>] = <span class=\"number\">58</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">27</span>] = <span class=\"number\">48</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">28</span>] = <span class=\"number\">32</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">29</span>] = <span class=\"number\">15</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">30</span>] = <span class=\"number\">49</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">31</span>] = <span class=\"number\">14</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">32</span>] = <span class=\"number\">37</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">34</span>] = <span class=\"number\">55</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">35</span>] = <span class=\"number\">53</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">36</span>] = <span class=\"number\">24</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">37</span>] = <span class=\"number\">35</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">38</span>] = <span class=\"number\">18</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">39</span>] = <span class=\"number\">25</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">40</span>] = <span class=\"number\">33</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">41</span>] = <span class=\"number\">43</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">42</span>] = <span class=\"number\">50</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">43</span>] = <span class=\"number\">39</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">44</span>] = <span class=\"number\">12</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">45</span>] = <span class=\"number\">19</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">46</span>] = <span class=\"number\">13</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">47</span>] = <span class=\"number\">42</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">48</span>] = <span class=\"number\">9</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">49</span>] = <span class=\"number\">17</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">50</span>] = <span class=\"number\">28</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">51</span>] = <span class=\"number\">30</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">52</span>] = <span class=\"number\">23</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">53</span>] = <span class=\"number\">36</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">54</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">55</span>] = <span class=\"number\">22</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">56</span>] = <span class=\"number\">57</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">57</span>] = <span class=\"number\">63</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">58</span>] = <span class=\"number\">8</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">59</span>] = <span class=\"number\">27</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">60</span>] = <span class=\"number\">6</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">61</span>] = <span class=\"number\">62</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">62</span>] = <span class=\"number\">45</span>;</span><br><span class=\"line\">  v3[<span class=\"number\">63</span>] = <span class=\"number\">29</span>;</span><br><span class=\"line\">  result = <span class=\"built_in\">strcpy</span>(Destination, Source);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">47</span>; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">63</span>; ++j )</span><br><span class=\"line\">      Source[j] = Destination[v3[j]];</span><br><span class=\"line\">    result = <span class=\"built_in\">strcpy</span>(Destination, Source);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p>是一个 base64 换表加密，加密为 48 次循环换表，换表 key 是 v3。解密脚本：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\">result = <span class=\"string\">&#x27;GQTZlSqQXZ/ghxxwhju3hbuZ4wufWjujWrhYe7Rce7ju&#x27;</span></span><br><span class=\"line\">base = <span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class=\"line\">key =[<span class=\"number\">16</span>, <span class=\"number\">34</span>, <span class=\"number\">56</span>, <span class=\"number\">7</span>, <span class=\"number\">46</span>, <span class=\"number\">2</span>, <span class=\"number\">10</span>, <span class=\"number\">44</span>, <span class=\"number\">20</span>, <span class=\"number\">41</span>, <span class=\"number\">59</span>, <span class=\"number\">31</span>, <span class=\"number\">51</span>, <span class=\"number\">60</span>, <span class=\"number\">61</span>, <span class=\"number\">26</span>, <span class=\"number\">5</span>, <span class=\"number\">40</span>, <span class=\"number\">21</span>, <span class=\"number\">38</span>, <span class=\"number\">4</span>, <span class=\"number\">54</span>, <span class=\"number\">52</span>, <span class=\"number\">47</span>, <span class=\"number\">3</span>, <span class=\"number\">11</span>, <span class=\"number\">58</span>, <span class=\"number\">48</span>, <span class=\"number\">32</span>, <span class=\"number\">15</span>, <span class=\"number\">49</span>, <span class=\"number\">14</span>, <span class=\"number\">37</span>, <span class=\"number\">0</span>, <span class=\"number\">55</span>, <span class=\"number\">53</span>, <span class=\"number\">24</span>, <span class=\"number\">35</span>, <span class=\"number\">18</span>, <span class=\"number\">25</span>, <span class=\"number\">33</span>, <span class=\"number\">43</span>, <span class=\"number\">50</span>, <span class=\"number\">39</span>, <span class=\"number\">12</span>, <span class=\"number\">19</span>, <span class=\"number\">13</span>, <span class=\"number\">42</span>, <span class=\"number\">9</span>, <span class=\"number\">17</span>, <span class=\"number\">28</span>, <span class=\"number\">30</span>, <span class=\"number\">23</span>, <span class=\"number\">36</span>, <span class=\"number\">1</span>, <span class=\"number\">22</span>, <span class=\"number\">57</span>, <span class=\"number\">63</span>, <span class=\"number\">8</span>, <span class=\"number\">27</span>, <span class=\"number\">6</span>, <span class=\"number\">62</span>, <span class=\"number\">45</span>, <span class=\"number\">29</span>]</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">base2 = []</span><br><span class=\"line\"><span class=\"comment\">#进行换表</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">48</span>):</span><br><span class=\"line\">    flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">64</span>):</span><br><span class=\"line\">        flag += base[key[j]]</span><br><span class=\"line\">    base = flag</span><br><span class=\"line\"><span class=\"comment\">#新表</span></span><br><span class=\"line\">biao = base</span><br><span class=\"line\">a = <span class=\"built_in\">str</span>.maketrans(biao,<span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(base64.b64decode(result.translate(a)))</span><br><span class=\"line\"><span class=\"comment\">#b&#x27;LitCTF&#123;B@5E64_l5_tooo0_E3sy!!!!!&#125;&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"hnctf-2022-week1x0r\"><a class=\"anchor\" href=\"#hnctf-2022-week1x0r\">#</a> [HNCTF 2022 Week1]X0r</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  _main();</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;please input your flag!&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, Str);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>(Str) != <span class=\"number\">22</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;strlen error!&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">21</span>; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( arr[i] != (Str[i] ^ <span class=\"number\">0x34</span>) + <span class=\"number\">900</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;flag error!&quot;</span>);</span><br><span class=\"line\">      <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#arr = [1022,1003,1003,1019,996,1014,979,976,904,970,1007,905,971,1007,971,904,1007,981,985,971,977,973]</span></span><br></pre></td></tr></table></figure></p>\n<p>异或进行：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result = [<span class=\"number\">1022</span>,<span class=\"number\">1003</span>,<span class=\"number\">1003</span>,<span class=\"number\">1019</span>,<span class=\"number\">996</span>,<span class=\"number\">1014</span>,<span class=\"number\">979</span>,<span class=\"number\">976</span>,<span class=\"number\">904</span>,<span class=\"number\">970</span>,<span class=\"number\">1007</span>,<span class=\"number\">905</span>,<span class=\"number\">971</span>,<span class=\"number\">1007</span>,<span class=\"number\">971</span>,<span class=\"number\">904</span>,<span class=\"number\">1007</span>,<span class=\"number\">981</span>,<span class=\"number\">985</span>,<span class=\"number\">971</span>,<span class=\"number\">977</span>,<span class=\"number\">973</span>]</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)):</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>((result[i]-<span class=\"number\">900</span>)^<span class=\"number\">0x34</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#NSSCTF&#123;x0r_1s_s0_easy&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"nisactf-2022ezpython\"><a class=\"anchor\" href=\"#nisactf-2022ezpython\">#</a> [NISACTF 2022]ezpython</h3>\n<p>pyinstxtractor 解包</p>\n<p>根据 struct 和 src 文件进行反编译 得到：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># visit https://tool.lu/pyc/ for more information</span></span><br><span class=\"line\"><span class=\"comment\"># Version: Python 3.4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> rsa</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\">key1 = rsa.PrivateKey.load_pkcs1(base64.b64decode(</span><br><span class=\"line\">    <span class=\"string\">&#x27;LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcVFJQkFBS0NBUUVBcVJUZ0xQU3BuT0ZDQnJvNHR1K1FBWXFhTjI2Uk42TzY1bjBjUURGRy9vQ1NJSU00ClNBeEVWaytiZHpSN2FucVNtZ1l5MEhRWGhDZTM2U2VGZTF0ejlrd0taL3UzRUpvYzVBSzR1NXZ4UW5QOWY1cTYKYVFsbVAvVjJJTXB5NFFRNlBjbUVoNEtkNm81ZWRJUlB2SHd6V0dWS09OQ3BpL0taQ082V0tWYkpXcWh3WGpEQgpsSDFNVURzZ1gyVUM4b3Bodnk5dXIyek9kTlBocElJZHdIc1o5b0ZaWWtaMUx5Q0lRRXRZRmlKam1GUzJFQ1RVCkNvcU9acnQxaU5jNXVhZnFvZlB4eHlPb2wwYVVoVGhiaHE4cEpXL3FPSFdYd0xJbXdtNk96YXFVeks4NEYyY3UKYWRiRE5zeVNvaElHaHYzd0lBVThNSlFnOEthd1Z3ZHBzRWhlSXdJREFRQUJBb0lCQURBazdwUStjbEZtWHF1Vgp1UEoyRWxZdUJpMkVnVHNMbHZ0c1ltL3cyQnM5dHQ0bEh4QjgxYlNSNUYyMEJ2UlJ4STZ3OXlVZCtWZzdDd1lMCnA5bHhOL3JJdWluVHBkUEhYalNhaGNsOTVOdWNOWEZ4T0dVU05SZy9KNHk4dUt0VHpkV3NITjJORnJRa0o4Y2IKcWF5czNOM3RzWTJ0OUtrUndjbUJGUHNJalNNQzB5UkpQVEE4cmNqOFkranV3SHZjbUJPNHVFWXZXeXh0VHR2UQova0RQelBqdTBuakhkR055RytkSDdkeHVEV2Jxb3VZQnRMdzllZGxXdmIydTJ5YnZzTXl0NWZTOWF1a01NUjNoCnBhaDRMcU1LbC9ETTU3cE44Vms0ZTU3WE1zZUJLWm1hcEptcVNnSGdjajRPNWE2R1RvelN1TEVoTmVGY0l2Tm8KWFczTEFHRUNnWWtBc0J0WDNVcFQ3aUcveE5BZDdSWER2MENOY1k1QnNZOGY4NHQ3dGx0U2pjSWdBKy9nUjFMZQpzb2gxY1RRd1RadUYyRTJXL1hHU3orQmJDTVVySHNGWmh1bXV6aTBkbElNV3ZhU0dvSlV1OGpNODBlUjRiVTRyCmdYQnlLZVZqelkzNVlLejQ5TEVBcFRQcTZRYTVQbzhRYkF6czhuVjZtNXhOQkNPc0pQQ29zMGtCclFQaGo5M0cKOFFKNUFQWEpva0UrMmY3NXZlazZNMDdsaGlEUXR6LzRPYWRaZ1MvUVF0eWRLUmg2V3VEeGp3MytXeXc5ZjNUcAp5OXc0RmtLRzhqNVRpd1RzRmdzem94TGo5TmpSUWpqb3cyVFJGLzk3b2NxMGNwY1orMUtsZTI1cEJ3bk9yRDJBCkVpMUVkMGVEV3dJR2gzaFhGRmlRSzhTOG5remZkNGFMa1ZxK1V3S0JpRXRMSllIamFZY0N2dTd5M0JpbG1ZK0gKbGZIYkZKTkowaXRhazRZZi9XZkdlOUd6R1h6bEhYblBoZ2JrZlZKeEVBU3ZCOE5NYjZ5WkM5THdHY09JZnpLRApiczJQMUhuT29rWnF0WFNxMCt1UnBJdEkxNFJFUzYySDJnZTNuN2dlMzJSS0VCYnVKb3g3YWhBL1k2d3ZscUhiCjFPTEUvNnJRWk0xRVF6RjRBMmpENmdlREJVbHhWTUVDZVFDQjcyUmRoYktNL3M0TSsvMmYyZXI4Y2hwT01SV1oKaU5Hb3l6cHRrby9sSnRuZ1RSTkpYSXdxYVNCMldCcXpndHNSdEhGZnpaNlNyWlJCdTd5Y0FmS3dwSCtUd2tsNQpoS2hoSWFTNG1vaHhwUVNkL21td1JzbTN2NUNDdXEvaFNtNmNXYTdFOVZxc25heGQzV21tQ2VqTnp0MUxQWUZNCkxZMENnWWdKUHhpVTVraGs5cHB6TVAwdWU0clA0Z2YvTENldEdmQjlXMkIyQU03eW9VM2VsMWlCSEJqOEZ3UFQKQUhKUWtCeTNYZEh3SUpGTUV1RUZSSFFzcUFkSTlYVDBzL2V0QTg1Y3grQjhjUmt3bnFHakFseW1PdmJNOVNrMgptMnRwRi8rYm56ZVhNdFA3c0ZoR3NHOXJ5SEZ6UFNLY3NDSDhXWWx0Y1pTSlNDZHRTK21qblAwelArSjMKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K&#x27;</span>))</span><br><span class=\"line\">key2 = rsa.PublicKey.load_pkcs1(base64.b64decode(</span><br><span class=\"line\">    <span class=\"string\">&#x27;LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJDZ0tDQVFFQXFSVGdMUFNwbk9GQ0JybzR0dStRQVlxYU4yNlJONk82NW4wY1FERkcvb0NTSUlNNFNBeEUKVmsrYmR6UjdhbnFTbWdZeTBIUVhoQ2UzNlNlRmUxdHo5a3dLWi91M0VKb2M1QUs0dTV2eFFuUDlmNXE2YVFsbQpQL1YySU1weTRRUTZQY21FaDRLZDZvNWVkSVJQdkh3eldHVktPTkNwaS9LWkNPNldLVmJKV3Fod1hqREJsSDFNClVEc2dYMlVDOG9waHZ5OXVyMnpPZE5QaHBJSWR3SHNaOW9GWllrWjFMeUNJUUV0WUZpSmptRlMyRUNUVUNvcU8KWnJ0MWlOYzV1YWZxb2ZQeHh5T29sMGFVaFRoYmhxOHBKVy9xT0hXWHdMSW13bTZPemFxVXpLODRGMmN1YWRiRApOc3lTb2hJR2h2M3dJQVU4TUpRZzhLYXdWd2Rwc0VoZUl3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt1</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    crypto_text = rsa.encrypt(message.encode(), key2)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> crypto_text</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt1</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    message_str = rsa.decrypt(message, key1).decode()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> message_str</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt2</span>(<span class=\"params\">tips, key</span>):</span><br><span class=\"line\">    ltips = <span class=\"built_in\">len</span>(tips)</span><br><span class=\"line\">    lkey = <span class=\"built_in\">len</span>(key)</span><br><span class=\"line\">    secret = []</span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> tips:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num &gt;= lkey:</span><br><span class=\"line\">            num = num % lkey</span><br><span class=\"line\">        secret.append(<span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(each) ^ <span class=\"built_in\">ord</span>(key[num])))</span><br><span class=\"line\">        num += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> base64.b64encode(<span class=\"string\">&#x27;&#x27;</span>.join(secret).encode()).decode()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt2</span>(<span class=\"params\">secret, key</span>):</span><br><span class=\"line\">    tips = base64.b64decode(secret.encode()).decode()</span><br><span class=\"line\">    ltips = <span class=\"built_in\">len</span>(tips)</span><br><span class=\"line\">    lkey = <span class=\"built_in\">len</span>(key)</span><br><span class=\"line\">    secret = []</span><br><span class=\"line\">    num = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> tips:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num &gt;= lkey:</span><br><span class=\"line\">            num = num % lkey</span><br><span class=\"line\">        secret.append(<span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(each) ^ <span class=\"built_in\">ord</span>(key[num])))</span><br><span class=\"line\">        num += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>.join(secret)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;IAMrG1EOPkM5NRI1cChQDxEcGDZMURptPzgHJHUiN0ASDgUYUB4LGQMUGAtLCQcJJywcFmddNno/PBtQbiMWNxsGLiFuLwpiFlkyP084Ng0lKj8GUBMXcwEXPTJrRDMdNwMiHVkCBFklHgIAWQwgCz8YQhp6E1xUHgUELxMtSh0xXzxBEisbUyYGOx1DBBZWPg1CXFkvJEcxO0ADeBwzChIOQkdwXQRpQCJHCQsaFE4CIjMDcwswTBw4BS9mLVMLLDs8HVgeQkscGBEBFSpQFQQgPTVRAUpvHyAiV1oPE0kyADpDbF8AbyErBjNkPh9PHiY7O1ZaGBADMB0PEVwdCxI+MCcXARZiPhwfH1IfKitGOF42FV8FTxwqPzBPAVUUOAEKAHEEP2QZGjQVV1oIS0QBJgBDLx1jEAsWKGk5Nw03MVgmWSE4Qy5LEghoHDY+OQ9dXE44Th0=&#x27;</span></span><br><span class=\"line\">key = <span class=\"string\">&#x27;this is key&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    result = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;please input key: &#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> result == decrypt2(<span class=\"string\">&#x27;AAAAAAAAAAAfFwwRSAIWWQ==&#x27;</span>, key):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(decrypt1(base64.b64decode(decrypt2(flag, result))))</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> result == key:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;flag&#123;0e26d898-b454-43de-9c87-eb3d122186bc&#125;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;key is error.&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">    e = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">        e = <span class=\"literal\">None</span></span><br><span class=\"line\">        <span class=\"keyword\">del</span> e</span><br><span class=\"line\"><span class=\"built_in\">print</span>(decrypt2(<span class=\"string\">&#x27;AAAAAAAAAAAfFwwRSAIWWQ==&#x27;</span>, key))</span><br><span class=\"line\"><span class=\"comment\">#flag&#123;5236cb7d-f4a7-4080-9bde-8b9e061609ad&#125;</span></span><br><span class=\"line\"><span class=\"comment\">#this is true key</span></span><br></pre></td></tr></table></figure></p>\n<p>根据代码可知需要使 result 和 decrypt2 ('AAAAAAAAAAAfFwwRSAIWWQ==', key) 相同。</p>\n<h3 id=\"hnctf-2022-week1贝斯是什么乐器啊\"><a class=\"anchor\" href=\"#hnctf-2022-week1贝斯是什么乐器啊\">#</a> [HNCTF 2022 Week1] 贝斯是什么乐器啊？</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_main();</span><br><span class=\"line\"><span class=\"built_in\">puts</span>(<span class=\"string\">&quot;please input your flag:&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, Str);</span><br><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; ; ++i )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  v3 = i;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v3 &gt;= <span class=\"built_in\">strlen</span>(Str) )</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  Str[i] -= i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">base64_encode(Str2, Str);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(enc, Str2) )</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;yes!&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure></p>\n<p>查看 base64_encode (Str2, Str) 后是正常 base64 表。先进行 base64 解码，然后 ASCII 解</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"comment\">#base64解码</span></span><br><span class=\"line\">enc = <span class=\"string\">&#x27;TlJRQFBBdTs4alsrKFI6MjgwNi5p&#x27;</span></span><br><span class=\"line\">base = <span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class=\"line\">biao = base</span><br><span class=\"line\">a = <span class=\"built_in\">str</span>.maketrans(biao,<span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(base64.b64decode(enc.translate(a)))</span><br><span class=\"line\"><span class=\"comment\">#&#x27;NRQ@PAu;8j[+(R:2806.i&#x27;</span></span><br><span class=\"line\">result = <span class=\"string\">&#x27;NRQ@PAu;8j[+(R:2806.i&#x27;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(result)):</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(result[i])+i)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)<span class=\"comment\">#NSSCTF&#123;B@se64_HAHAHA&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"swpuctf-2022-新生赛base64-2\"><a class=\"anchor\" href=\"#swpuctf-2022-新生赛base64-2\">#</a> [SWPUCTF 2022 新生赛] base64-2</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"type\">char</span> *v3; <span class=\"comment\">// [rsp-10h] [rbp-18h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v3 = (<span class=\"type\">char</span> *)sub_124C(*(_QWORD *)(a2 + <span class=\"number\">8</span>));</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(v3, s2) )</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This is flag!!&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;This is wrong&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">#函数为base64加密</span><br><span class=\"line\">_BYTE *__fastcall <span class=\"title function_\">sub_124C</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *a1)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> v2; <span class=\"comment\">// [rsp+10h] [rbp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v3; <span class=\"comment\">// [rsp+14h] [rbp-1Ch]</span></span><br><span class=\"line\">  __int64 v4; <span class=\"comment\">// [rsp+18h] [rbp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">signed</span> __int64 v5; <span class=\"comment\">// [rsp+20h] [rbp-10h]</span></span><br><span class=\"line\">  _BYTE *v6; <span class=\"comment\">// [rsp+28h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v5 = <span class=\"built_in\">strlen</span>(a1);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v5 % <span class=\"number\">3</span> )</span><br><span class=\"line\">    v4 = <span class=\"number\">4</span> * (v5 / <span class=\"number\">3</span> + <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    v4 = <span class=\"number\">4</span> * (v5 / <span class=\"number\">3</span>);</span><br><span class=\"line\">  v6 = <span class=\"built_in\">malloc</span>(v4 + <span class=\"number\">1</span>);</span><br><span class=\"line\">  v6[v4] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v3 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( v2 &lt; v4 - <span class=\"number\">2</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v6[v2] = off_4018[(<span class=\"type\">unsigned</span> __int8)a1[v3] &gt;&gt; <span class=\"number\">2</span>];</span><br><span class=\"line\">    v6[v2 + <span class=\"number\">1</span>] = off_4018[(<span class=\"number\">16</span> * a1[v3]) &amp; <span class=\"number\">0x30</span> | ((<span class=\"type\">unsigned</span> __int8)a1[v3 + <span class=\"number\">1</span>] &gt;&gt; <span class=\"number\">4</span>)];</span><br><span class=\"line\">    v6[v2 + <span class=\"number\">2</span>] = off_4018[(<span class=\"number\">4</span> * a1[v3 + <span class=\"number\">1</span>]) &amp; <span class=\"number\">0x3C</span> | ((<span class=\"type\">unsigned</span> __int8)a1[v3 + <span class=\"number\">2</span>] &gt;&gt; <span class=\"number\">6</span>)];</span><br><span class=\"line\">    v6[v2 + <span class=\"number\">3</span>] = off_4018[a1[v3 + <span class=\"number\">2</span>] &amp; <span class=\"number\">0x3F</span>];</span><br><span class=\"line\">    v3 += <span class=\"number\">3</span>;</span><br><span class=\"line\">    v2 += <span class=\"number\">4</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v5 % <span class=\"number\">3</span> == <span class=\"number\">1</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v6[v2 - <span class=\"number\">2</span>] = <span class=\"number\">61</span>;</span><br><span class=\"line\">    v6[v2 - <span class=\"number\">1</span>] = <span class=\"number\">61</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( v5 % <span class=\"number\">3</span> == <span class=\"number\">2</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v6[v2 - <span class=\"number\">1</span>] = <span class=\"number\">61</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v6;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//base64表变为off_4018：NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm0123456789+/</span></span><br></pre></td></tr></table></figure></p>\n<p>解码：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"comment\">#base64解码</span></span><br><span class=\"line\">enc = <span class=\"string\">&#x27;GyAGD1ETr3AcGKNkZ19PLKAyAwEsAIELHx1nFSH2IwyGsD==&#x27;</span></span><br><span class=\"line\">base = <span class=\"string\">&quot;NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm0123456789+/&quot;</span></span><br><span class=\"line\">biao = base</span><br><span class=\"line\">a = <span class=\"built_in\">str</span>.maketrans(biao,<span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(base64.b64decode(enc.translate(a)))</span><br><span class=\"line\"><span class=\"comment\">#b&#x27;NSSCTF&#123;siMp13_Base64_5TXRMZHU6V9S&#125;&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"bjdctf-2020justre\"><a class=\"anchor\" href=\"#bjdctf-2020justre\">#</a> [BJDCTF 2020]JustRE</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ( dword_4099F0 == <span class=\"number\">19999</span> )</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">   <span class=\"built_in\">sprintf</span>(String, <span class=\"string\">&quot; BJD&#123;%d%d2069a45792d233ac&#125;&quot;</span>, <span class=\"number\">19999</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">   SetWindowTextA(hWnd, String);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>所以替换占位符</p>\n<h3 id=\"nssround3-teamjump_by_jump\"><a class=\"anchor\" href=\"#nssround3-teamjump_by_jump\">#</a> [NSSRound#3 Team]jump_by_jump</h3>\n<p>ida32 打开</p>\n<h3 id=\"刮开有奖\"><a class=\"anchor\" href=\"#刮开有奖\">#</a> 刮开有奖</h3>\n<p>本题需要数组寻址公式：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a[i]_address = base_address + i * data_type_size</span><br></pre></td></tr></table></figure></p>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>(String) == <span class=\"number\">8</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v7[<span class=\"number\">0</span>] = <span class=\"number\">90</span>;</span><br><span class=\"line\">    v7[<span class=\"number\">1</span>] = <span class=\"number\">74</span>;</span><br><span class=\"line\">    v8 = <span class=\"number\">83</span>;</span><br><span class=\"line\">    v9 = <span class=\"number\">69</span>;</span><br><span class=\"line\">    v10 = <span class=\"number\">67</span>;</span><br><span class=\"line\">    v11 = <span class=\"number\">97</span>;</span><br><span class=\"line\">    v12 = <span class=\"number\">78</span>;</span><br><span class=\"line\">    v13 = <span class=\"number\">72</span>;</span><br><span class=\"line\">    v14 = <span class=\"number\">51</span>;</span><br><span class=\"line\">    v15 = <span class=\"number\">110</span>;</span><br><span class=\"line\">    v16 = <span class=\"number\">103</span>;</span><br><span class=\"line\">    sub_4010F0(v7, <span class=\"number\">0</span>, <span class=\"number\">10</span>);<span class=\"comment\">//从v7开始寻址得到字符串：3CEHJNSZagn</span></span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(v18, <span class=\"number\">0</span>, <span class=\"number\">0xFFFF</span>u);</span><br><span class=\"line\">    v18[<span class=\"number\">0</span>] = String[<span class=\"number\">5</span>];</span><br><span class=\"line\">    v18[<span class=\"number\">2</span>] = String[<span class=\"number\">7</span>];</span><br><span class=\"line\">    v18[<span class=\"number\">1</span>] = String[<span class=\"number\">6</span>];</span><br><span class=\"line\">    v4 = (<span class=\"type\">const</span> <span class=\"type\">char</span> *)sub_401000(v18, <span class=\"built_in\">strlen</span>(v18));<span class=\"comment\">//对v18进行base64加密。//原始值 jMp</span></span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(v18, <span class=\"number\">0</span>, <span class=\"number\">0xFFFF</span>u);</span><br><span class=\"line\">    v18[<span class=\"number\">1</span>] = String[<span class=\"number\">3</span>];</span><br><span class=\"line\">    v18[<span class=\"number\">0</span>] = String[<span class=\"number\">2</span>];</span><br><span class=\"line\">    v18[<span class=\"number\">2</span>] = String[<span class=\"number\">4</span>];</span><br><span class=\"line\">    v5 = (<span class=\"type\">const</span> <span class=\"type\">char</span> *)sub_401000(v18, <span class=\"built_in\">strlen</span>(v18));<span class=\"comment\">//进行base64加密//原始值 WP1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( String[<span class=\"number\">0</span>] == v7[<span class=\"number\">0</span>] + <span class=\"number\">34</span><span class=\"comment\">//U</span></span><br><span class=\"line\">      &amp;&amp; String[<span class=\"number\">1</span>] == v10<span class=\"comment\">//J</span></span><br><span class=\"line\">      &amp;&amp; <span class=\"number\">4</span> * String[<span class=\"number\">2</span>] - <span class=\"number\">141</span> == <span class=\"number\">3</span> * v8<span class=\"comment\">//W</span></span><br><span class=\"line\">      &amp;&amp; String[<span class=\"number\">3</span>] / <span class=\"number\">4</span> == <span class=\"number\">2</span> * (v13 / <span class=\"number\">9</span>)<span class=\"comment\">//P</span></span><br><span class=\"line\">      &amp;&amp; !<span class=\"built_in\">strcmp</span>(v4, <span class=\"string\">&quot;ak1w&quot;</span>)</span><br><span class=\"line\">      &amp;&amp; !<span class=\"built_in\">strcmp</span>(v5, <span class=\"string\">&quot;V1Ax&quot;</span>) )<span class=\"comment\">//将加密后的信息进行比较</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      MessageBoxA(hDlg, <span class=\"string\">&quot;U g3t 1T!&quot;</span>, <span class=\"string\">&quot;@_@&quot;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;<span class=\"comment\">//所以strings：UJWP开头，又因为解密v4，v5后为jMpWP1，猜测为flag&#123;UJWP1jMp&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//源代码，由于传入的字符串，所以将函数根据寻址公式进行改编</span></span><br><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">sub_4010F0</span><span class=\"params\">(<span class=\"type\">int</span> a1, <span class=\"type\">int</span> a2, <span class=\"type\">int</span> a3)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// esi</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v5; <span class=\"comment\">// ecx</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v6; <span class=\"comment\">// edx</span></span><br><span class=\"line\"></span><br><span class=\"line\">  result = a3;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = a2; i &lt;= a3; a2 = i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v5 = <span class=\"number\">4</span> * i;</span><br><span class=\"line\">    v6 = *(_DWORD *)(<span class=\"number\">4</span> * i + a1);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( a2 &lt; result &amp;&amp; i &lt; result )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">do</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v6 &gt; *(_DWORD *)(a1 + <span class=\"number\">4</span> * result) )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> ( i &gt;= result )</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          ++i;</span><br><span class=\"line\">          *(_DWORD *)(v5 + a1) = *(_DWORD *)(a1 + <span class=\"number\">4</span> * result);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> ( i &gt;= result )</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          <span class=\"keyword\">while</span> ( *(_DWORD *)(a1 + <span class=\"number\">4</span> * i) &lt;= v6 )</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( ++i &gt;= result )</span><br><span class=\"line\">              <span class=\"keyword\">goto</span> LABEL_13;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> ( i &gt;= result )</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">          v5 = <span class=\"number\">4</span> * i;</span><br><span class=\"line\">          *(_DWORD *)(a1 + <span class=\"number\">4</span> * result) = *(_DWORD *)(<span class=\"number\">4</span> * i + a1);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        --result;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">while</span> ( i &lt; result );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">LABEL_13:</span><br><span class=\"line\">    *(_DWORD *)(a1 + <span class=\"number\">4</span> * result) = v6;</span><br><span class=\"line\">    sub_4010F0(a1, a2, i - <span class=\"number\">1</span>);</span><br><span class=\"line\">    result = a3;</span><br><span class=\"line\">    ++i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">sub_4010F0</span><span class=\"params\">(<span class=\"type\">char</span>* a1, <span class=\"type\">int</span> a2, <span class=\"type\">int</span> a3)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\">    <span class=\"type\">int</span> i; <span class=\"comment\">// esi</span></span><br><span class=\"line\">    <span class=\"type\">int</span> v5; <span class=\"comment\">// ecx</span></span><br><span class=\"line\">    <span class=\"type\">int</span> v6; <span class=\"comment\">// edx</span></span><br><span class=\"line\"></span><br><span class=\"line\">    result = a3;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = a2; i &lt;= a3; a2 = i)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v5 = i;</span><br><span class=\"line\">        v6 = a1[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a2 &lt; result &amp;&amp; i &lt; result)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">do</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (v6 &gt;  a1[result])</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i &gt;= result)</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    ++i;</span><br><span class=\"line\">                    a1[v5] = a1[result];</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i &gt;= result)</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">while</span> (a1[i] &lt;= v6)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (++i &gt;= result)</span><br><span class=\"line\">                            <span class=\"keyword\">goto</span> LABEL_13;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (i &gt;= result)</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    v5 = i;</span><br><span class=\"line\">                    a1[result] = a1[i];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                --result;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">while</span> (i &lt; result);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    LABEL_13:</span><br><span class=\"line\">        a1[result] = v6;</span><br><span class=\"line\">        sub_4010F0(a1, a2, i - <span class=\"number\">1</span>);</span><br><span class=\"line\">        result = a3;</span><br><span class=\"line\">        ++i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> str[] = <span class=\"string\">&quot;ZJSECaNH3ng&quot;</span>;</span><br><span class=\"line\">    sub_4010F0(str, <span class=\"number\">0</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s&quot;</span>, str);<span class=\"comment\">//3CEHJNSZagn</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"java逆向解密\"><a class=\"anchor\" href=\"#java逆向解密\">#</a> Java 逆向解密</h3>\n<p>java 反编译后的代码如下：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\">public <span class=\"keyword\">class</span> <span class=\"title class_\">Reverse</span> &#123;</span><br><span class=\"line\">  public static void main(String[] args) &#123;</span><br><span class=\"line\">    Scanner s = new Scanner(System.<span class=\"keyword\">in</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Please input the flag );</span></span><br><span class=\"line\"><span class=\"string\">    String str = s.next();</span></span><br><span class=\"line\"><span class=\"string\">    System.out.println(&quot;</span>Your <span class=\"built_in\">input</span> <span class=\"keyword\">is</span> );</span><br><span class=\"line\">    System.out.println(<span class=\"built_in\">str</span>);</span><br><span class=\"line\">    char[] stringArr = <span class=\"built_in\">str</span>.toCharArray();</span><br><span class=\"line\">    Encrypt(stringArr);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  public static void Encrypt(char[] arr) &#123;</span><br><span class=\"line\">    ArrayList&lt;Integer&gt; Resultlist = new ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">int</span> result = arr[i] + <span class=\"number\">64</span> ^ <span class=\"number\">0x20</span>;</span><br><span class=\"line\">      Resultlist.add(Integer.valueOf(result));</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"built_in\">int</span>[] KEY = &#123; </span><br><span class=\"line\">        <span class=\"number\">180</span>, <span class=\"number\">136</span>, <span class=\"number\">137</span>, <span class=\"number\">147</span>, <span class=\"number\">191</span>, <span class=\"number\">137</span>, <span class=\"number\">147</span>, <span class=\"number\">191</span>, <span class=\"number\">148</span>, <span class=\"number\">136</span>, </span><br><span class=\"line\">        <span class=\"number\">133</span>, <span class=\"number\">191</span>, <span class=\"number\">134</span>, <span class=\"number\">140</span>, <span class=\"number\">129</span>, <span class=\"number\">135</span>, <span class=\"number\">191</span>, <span class=\"number\">65</span> &#125;;</span><br><span class=\"line\">    ArrayList&lt;Integer&gt; KEYList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> j = <span class=\"number\">0</span>; j &lt; KEY.length; j++)</span><br><span class=\"line\">      KEYList.add(Integer.valueOf(KEY[j])); </span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Result:&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Resultlist.equals(KEYList)) &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;Congratulations);</span></span><br><span class=\"line\"><span class=\"string\">    &#125; else &#123;</span></span><br><span class=\"line\"><span class=\"string\">      System.err.println(&quot;</span>Error);</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>解密代码如下：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">KEY = [<span class=\"number\">180</span>, <span class=\"number\">136</span>, <span class=\"number\">137</span>, <span class=\"number\">147</span>, <span class=\"number\">191</span>, <span class=\"number\">137</span>, <span class=\"number\">147</span>, <span class=\"number\">191</span>, <span class=\"number\">148</span>, <span class=\"number\">136</span>,<span class=\"number\">133</span>, <span class=\"number\">191</span>, <span class=\"number\">134</span>, <span class=\"number\">140</span>, <span class=\"number\">129</span>, <span class=\"number\">135</span>, <span class=\"number\">191</span>, <span class=\"number\">65</span>]</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(KEY)):</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(KEY[i] - <span class=\"number\">64</span>^<span class=\"number\">0x20</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#This_is_the_flag_!</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"攻防世界easyxor\"><a class=\"anchor\" href=\"#攻防世界easyxor\">#</a> 攻防世界 easyxor</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_main();</span><br><span class=\"line\">v11 = <span class=\"number\">0</span>;</span><br><span class=\"line\">v9 = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Please input your flag:&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  v8 = getchar();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v8 == <span class=\"number\">10</span> )<span class=\"comment\">//当输入为“\\n”时结束</span></span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  v7 = key[v9 % <span class=\"number\">4</span>] ^ v8;<span class=\"comment\">//和输入的异或</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v4 = v7--;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v4 &lt;= <span class=\"number\">0</span> )</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    v3 = v11++;</span><br><span class=\"line\">    s[v3] = <span class=\"number\">1</span>;<span class=\"comment\">//数组赋值1</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  v5 = v11++;</span><br><span class=\"line\">  s[v5] = <span class=\"number\">0</span>;<span class=\"comment\">//分段</span></span><br><span class=\"line\">  ++v9;<span class=\"comment\">//v9 + 1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">while</span> ( v11 &lt;= <span class=\"number\">2559</span> )</span><br><span class=\"line\">  s[v11++] = <span class=\"number\">-1</span>;<span class=\"comment\">//其余的值赋值为-1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">2559</span>; ++i )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( r[i] != s[i] )<span class=\"comment\">//数组r和s比较</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Lose lose lose!&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( i == <span class=\"number\">2560</span> )</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Win win win!&quot;</span>);</span><br><span class=\"line\">system(<span class=\"string\">&quot;pause&quot;</span>);</span><br></pre></td></tr></table></figure></p>\n<p>导出 r，脚本如下：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r =[</span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>, </span><br><span class=\"line\">    <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">1</span>,   <span class=\"number\">0</span>]</span><br><span class=\"line\">a = []</span><br><span class=\"line\">b = <span class=\"number\">0</span></span><br><span class=\"line\">num = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(b,<span class=\"built_in\">len</span>(r)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> r[i] == <span class=\"number\">1</span>:</span><br><span class=\"line\">        num += <span class=\"number\">1</span></span><br><span class=\"line\">        b += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        a.append(num)</span><br><span class=\"line\">        num = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"><span class=\"comment\"># a = [53, 47, 47, 50, 40, 20, 39, 59, 61, 112, 60, 10, 61, 115, 58, 10, 31, 115, 61, 102, 33, 28, 109, 40]</span></span><br><span class=\"line\">v9 = <span class=\"number\">0</span></span><br><span class=\"line\">key = <span class=\"string\">&#x27;SCNU&#x27;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(i^<span class=\"built_in\">ord</span>(key[v9%<span class=\"number\">4</span>]))</span><br><span class=\"line\">    v9 += <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#flag&#123;Winn3r_n0t_L0s3r_#&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"攻防世界babyre\"><a class=\"anchor\" href=\"#攻防世界babyre\">#</a> 攻防世界 BABYRE</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">181</span>; ++i )</span><br><span class=\"line\">  judge[i] ^= <span class=\"number\">0xC</span>u;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input flag:&quot;</span>);</span><br><span class=\"line\">__isoc99_scanf(<span class=\"string\">&quot;%20s&quot;</span>, s);</span><br><span class=\"line\">v5 = <span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( v5 == <span class=\"number\">14</span> &amp;&amp; (*(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> (__fastcall **)(<span class=\"type\">char</span> *))judge)(s) )</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Right!&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Wrong!&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"re2\"><a class=\"anchor\" href=\"#re2\">#</a> re2</h3>\n<p>密钥加密代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span> v3; <span class=\"comment\">// [esp+0h] [ebp-E4h]</span></span><br><span class=\"line\"><span class=\"type\">signed</span> <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+D0h] [ebp-14h]</span></span><br><span class=\"line\"><span class=\"type\">signed</span> <span class=\"type\">int</span> v5; <span class=\"comment\">// [esp+DCh] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">__CheckForDebuggerJustMyCode(&amp;unk_40B027);</span><br><span class=\"line\">v5 = <span class=\"built_in\">strlen</span>(Str);</span><br><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; v5; ++i )</span><br><span class=\"line\">  Str1[i] += Str[i] ^ <span class=\"number\">0x1F</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(Str1, <span class=\"string\">&quot;DH~mqqvqxB^||zll@Jq~jkwpmvez&#123;&quot;</span>) )</span><br><span class=\"line\">  sub_401037(<span class=\"string\">&quot;充值成功.\\n&quot;</span>, v3);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  sub_401037(<span class=\"string\">&quot;Error!\\n&quot;</span>, v3);</span><br><span class=\"line\"><span class=\"keyword\">return</span> *Str1;</span><br></pre></td></tr></table></figure></p>\n<p>解密：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = <span class=\"string\">&quot;DH~mqqvqxB^||zll@Jq~jkwpmvez&#123;&quot;</span></span><br><span class=\"line\">flag = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i)^<span class=\"number\">0x1F</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#[Warnning]Access_Unauthorized</span></span><br></pre></td></tr></table></figure></p>\n<p RC4&amp;-ENc0d3F1le=\"\">运行程序得到 flag#flag</p>\n<h3 id=\"r3\"><a class=\"anchor\" href=\"#r3\">#</a> r3</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  v21 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  v7 = <span class=\"number\">80</span>;</span><br><span class=\"line\">  v8 = <span class=\"number\">64227</span>;</span><br><span class=\"line\">  v9 = <span class=\"number\">226312059</span>;</span><br><span class=\"line\">  v10 = <span class=\"number\">-1540056586</span>;</span><br><span class=\"line\">  v11 = <span class=\"number\">5</span>;</span><br><span class=\"line\">  v12 = <span class=\"number\">16</span>;</span><br><span class=\"line\">  v13 = <span class=\"number\">3833</span>;</span><br><span class=\"line\">  v5 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;plz input the key:&quot;</span>);</span><br><span class=\"line\">  __isoc99_scanf(<span class=\"string\">&quot;%s&quot;</span>, s);</span><br><span class=\"line\">  v3 = <span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">  <span class=\"built_in\">strncpy</span>(dest, v19, v3 - <span class=\"number\">6</span>);<span class=\"comment\">//从v19中复制（v3 - 6）个内容</span></span><br><span class=\"line\">  dest[<span class=\"built_in\">strlen</span>(s) - <span class=\"number\">6</span>] = <span class=\"number\">0</span>;<span class=\"comment\">//初为0</span></span><br><span class=\"line\">  __isoc99_sscanf(dest, <span class=\"string\">&quot;%x&quot;</span>, &amp;v5);</span><br><span class=\"line\">  v17[<span class=\"number\">0</span>] = v7;<span class=\"comment\">//80</span></span><br><span class=\"line\">  v17[<span class=\"number\">1</span>] = v8;<span class=\"comment\">//64227</span></span><br><span class=\"line\">  v17[<span class=\"number\">2</span>] = v9;<span class=\"comment\">//226312059</span></span><br><span class=\"line\">  v17[<span class=\"number\">3</span>] = v10;<span class=\"comment\">//-1540056586</span></span><br><span class=\"line\">  v17[<span class=\"number\">4</span>] = (v11 &lt;&lt; <span class=\"number\">12</span>) + v12;<span class=\"comment\">// (5 &lt;&lt; 12) + 16 = 4112  </span></span><br><span class=\"line\">  v17[<span class=\"number\">5</span>] = v13;<span class=\"comment\">//3833</span></span><br><span class=\"line\">  v17[<span class=\"number\">6</span>] = v5;<span class=\"comment\">//输入</span></span><br><span class=\"line\">  v16 = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">6</span>; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( v16 += (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)v17[i]; v16 &gt; <span class=\"number\">0xFFFF</span>; v16 = v15 + (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)(<span class=\"type\">unsigned</span> __int16)v16 )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v14 = (<span class=\"type\">unsigned</span> __int16)v16;</span><br><span class=\"line\">      v15 = v16 &gt;&gt; <span class=\"number\">16</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v16 == <span class=\"number\">0xFFFF</span> )</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;OK&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//需要动态调试</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"actf新生赛2020easyre\"><a class=\"anchor\" href=\"#actf新生赛2020easyre\">#</a> [ACTF 新生赛 2020] easyre</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__main();</span><br><span class=\"line\">qmemcpy(v4, <span class=\"string\">&quot;*F&#x27;\\&quot;N,\\&quot;(I?+@&quot;</span>, <span class=\"keyword\">sizeof</span>(v4));</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input:&quot;</span>);</span><br><span class=\"line\"><span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, v6);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( v6[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;A&#x27;</span> || v6[<span class=\"number\">1</span>] != <span class=\"string\">&#x27;C&#x27;</span> || v6[<span class=\"number\">2</span>] != <span class=\"string\">&#x27;T&#x27;</span> || v6[<span class=\"number\">3</span>] != <span class=\"string\">&#x27;F&#x27;</span> || v6[<span class=\"number\">4</span>] != <span class=\"string\">&#x27;&#123;&#x27;</span> || v10 != <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">v5[<span class=\"number\">0</span>] = v7;</span><br><span class=\"line\">v5[<span class=\"number\">1</span>] = v8;</span><br><span class=\"line\">v5[<span class=\"number\">2</span>] = v9;</span><br><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">11</span>; ++i )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v4[i] != _data_start__[*((<span class=\"type\">char</span> *)v5 + i) - <span class=\"number\">1</span>] )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;You are correct!&quot;</span>);</span><br></pre></td></tr></table></figure></p>\n<p>从_data_start__中匹配数据，则</p>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = <span class=\"string\">&quot;*F&#x27;\\&quot;N,\\&quot;(I?+@&quot;</span></span><br><span class=\"line\">key = <span class=\"string\">&#x27;~&#125;|&#123;zyxwvutsrqponmlkjihgfedcba`_^]\\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?&gt;=&lt;;:9876543210/.-,+*)(\\&#x27;&amp;%$# !&quot;&#x27;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(key.find(i) + <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)<span class=\"comment\">#U9X_1S_W6@T?</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"pyre\"><a class=\"anchor\" href=\"#pyre\">#</a> pyre</h3>\n<p>反编译代码：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># visit https://tool.lu/pyc/ for more information</span><br><span class=\"line\"># Version: Python 2.7</span><br><span class=\"line\"></span><br><span class=\"line\">print &#x27;Welcome to Re World!&#x27;</span><br><span class=\"line\">print &#x27;Your input1 is your flag~&#x27;</span><br><span class=\"line\">l = len(input1)</span><br><span class=\"line\">for i in range(l):</span><br><span class=\"line\">    num = ((input1[i] + i) % 128 + 128) % 128</span><br><span class=\"line\">    code += num</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(l - 1):</span><br><span class=\"line\">    code[i] = code[i] ^ code[i + 1]</span><br><span class=\"line\"></span><br><span class=\"line\">print code</span><br><span class=\"line\">code = [</span><br><span class=\"line\">    &#x27;%1f&#x27;,</span><br><span class=\"line\">    &#x27;%12&#x27;,</span><br><span class=\"line\">    &#x27;%1d&#x27;,</span><br><span class=\"line\">    &#x27;(&#x27;,</span><br><span class=\"line\">    &#x27;0&#x27;,</span><br><span class=\"line\">    &#x27;4&#x27;,</span><br><span class=\"line\">    &#x27;%01&#x27;,</span><br><span class=\"line\">    &#x27;%06&#x27;,</span><br><span class=\"line\">    &#x27;%14&#x27;,</span><br><span class=\"line\">    &#x27;4&#x27;,</span><br><span class=\"line\">    &#x27;,&#x27;,</span><br><span class=\"line\">    &#x27;%1b&#x27;,</span><br><span class=\"line\">    &#x27;U&#x27;,</span><br><span class=\"line\">    &#x27;?&#x27;,</span><br><span class=\"line\">    &#x27;o&#x27;,</span><br><span class=\"line\">    &#x27;6&#x27;,</span><br><span class=\"line\">    &#x27;*&#x27;,</span><br><span class=\"line\">    &#x27;:&#x27;,</span><br><span class=\"line\">    &#x27;%01&#x27;,</span><br><span class=\"line\">    &#x27;D&#x27;,</span><br><span class=\"line\">    &#x27;;&#x27;,</span><br><span class=\"line\">    &#x27;%&#x27;,</span><br><span class=\"line\">    &#x27;%13&#x27;]</span><br></pre></td></tr></table></figure></p>\n<p>解密：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code = [<span class=\"string\">&#x27;\\x1f&#x27;</span>,<span class=\"string\">&#x27;\\x12&#x27;</span>,<span class=\"string\">&#x27;\\x1d&#x27;</span>,<span class=\"string\">&#x27;(&#x27;</span>,<span class=\"string\">&#x27;0&#x27;</span>,<span class=\"string\">&#x27;4&#x27;</span>,<span class=\"string\">&#x27;\\x01&#x27;</span>,<span class=\"string\">&#x27;\\x06&#x27;</span>,<span class=\"string\">&#x27;\\x14&#x27;</span>,<span class=\"string\">&#x27;4&#x27;</span>,<span class=\"string\">&#x27;,&#x27;</span>,<span class=\"string\">&#x27;\\x1b&#x27;</span>,<span class=\"string\">&#x27;U&#x27;</span>,<span class=\"string\">&#x27;?&#x27;</span>,<span class=\"string\">&#x27;o&#x27;</span>,<span class=\"string\">&#x27;6&#x27;</span>,<span class=\"string\">&#x27;*&#x27;</span>,<span class=\"string\">&#x27;:&#x27;</span>,<span class=\"string\">&#x27;\\x01&#x27;</span>,<span class=\"string\">&#x27;D&#x27;</span>,<span class=\"string\">&#x27;;&#x27;</span>,<span class=\"string\">&#x27;%&#x27;</span>,<span class=\"string\">&#x27;\\x13&#x27;</span>]</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">code.reverse()<span class=\"comment\">#便于异或</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(code)):</span><br><span class=\"line\">    code[i] = <span class=\"built_in\">ord</span>(code[i])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"built_in\">len</span>(code)):</span><br><span class=\"line\">    code[i] = code[i] ^ code[i-<span class=\"number\">1</span>]</span><br><span class=\"line\">code.reverse()异或完恢复</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(code)):</span><br><span class=\"line\">    code[i] -= i</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(code[i]%<span class=\"number\">128</span>)<span class=\"comment\">#((input1[i] + i) % 128 + 128) % 128 = (input1[i] + i) % 128</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)<span class=\"comment\">#GWHT&#123;Just_Re_1s_Ha66y!&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"findit\"><a class=\"anchor\" href=\"#findit\">#</a> findit</h3>\n<p>使用 apk-IDE 打开进如 mainactive 中</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = [   <span class=\"number\">0x70</span>,</span><br><span class=\"line\">        <span class=\"number\">0x76</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6b</span>,</span><br><span class=\"line\">        <span class=\"number\">0x71</span>,</span><br><span class=\"line\">        <span class=\"number\">0x7b</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6d</span>,</span><br><span class=\"line\">        <span class=\"number\">0x31</span>,</span><br><span class=\"line\">        <span class=\"number\">0x36</span>,</span><br><span class=\"line\">        <span class=\"number\">0x34</span>,</span><br><span class=\"line\">        <span class=\"number\">0x36</span>,</span><br><span class=\"line\">        <span class=\"number\">0x37</span>,</span><br><span class=\"line\">        <span class=\"number\">0x35</span>,</span><br><span class=\"line\">        <span class=\"number\">0x32</span>,</span><br><span class=\"line\">        <span class=\"number\">0x36</span>,</span><br><span class=\"line\">        <span class=\"number\">0x32</span>,</span><br><span class=\"line\">        <span class=\"number\">0x30</span>,</span><br><span class=\"line\">        <span class=\"number\">0x33</span>,</span><br><span class=\"line\">        <span class=\"number\">0x33</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6c</span>,</span><br><span class=\"line\">        <span class=\"number\">0x34</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6d</span>,</span><br><span class=\"line\">        <span class=\"number\">0x34</span>,</span><br><span class=\"line\">        <span class=\"number\">0x39</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6c</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6e</span>,</span><br><span class=\"line\">        <span class=\"number\">0x70</span>,</span><br><span class=\"line\">        <span class=\"number\">0x37</span>,</span><br><span class=\"line\">        <span class=\"number\">0x70</span>,</span><br><span class=\"line\">        <span class=\"number\">0x39</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6d</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6e</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6b</span>,</span><br><span class=\"line\">        <span class=\"number\">0x32</span>,</span><br><span class=\"line\">        <span class=\"number\">0x38</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6b</span>,</span><br><span class=\"line\">        <span class=\"number\">0x37</span>,</span><br><span class=\"line\">        <span class=\"number\">0x35</span>,</span><br><span class=\"line\">        <span class=\"number\">0x7d</span>]</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(i)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)<span class=\"comment\">#flag&#123;c164675262033b4c49bdf7f9cda28a75&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"简单注册器\"><a class=\"anchor\" href=\"#简单注册器\">#</a> 简单注册器</h3>\n<p>源码：</p>\n<p><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onClick</span><span class=\"params\">(View paramView)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  paramView = <span class=\"built_in\">this</span>.val$editview.getText().toString();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ((paramView.length() != <span class=\"number\">32</span>) || (paramView.charAt(<span class=\"number\">31</span>) != <span class=\"string\">&#x27;a&#x27;</span>) || (paramView.charAt(<span class=\"number\">1</span>) != <span class=\"string\">&#x27;b&#x27;</span>) || (paramView.charAt(<span class=\"number\">0</span>) + paramView.charAt(<span class=\"number\">2</span>) - <span class=\"number\">48</span> != <span class=\"number\">56</span>)) &#123;</span><br><span class=\"line\">    j = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (j == <span class=\"number\">1</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    paramView = <span class=\"string\">&quot;dd2940c04462b4dd7c450528835cca15&quot;</span>.toCharArray();</span><br><span class=\"line\">    paramView[<span class=\"number\">2</span>] = ((<span class=\"type\">char</span>)(paramView[<span class=\"number\">2</span>] + paramView[<span class=\"number\">3</span>] - <span class=\"number\">50</span>));</span><br><span class=\"line\">    paramView[<span class=\"number\">4</span>] = ((<span class=\"type\">char</span>)(paramView[<span class=\"number\">2</span>] + paramView[<span class=\"number\">5</span>] - <span class=\"number\">48</span>));</span><br><span class=\"line\">    paramView[<span class=\"number\">30</span>] = ((<span class=\"type\">char</span>)(paramView[<span class=\"number\">31</span>] + paramView[<span class=\"number\">9</span>] - <span class=\"number\">48</span>));</span><br><span class=\"line\">    paramView[<span class=\"number\">14</span>] = ((<span class=\"type\">char</span>)(paramView[<span class=\"number\">27</span>] + paramView[<span class=\"number\">28</span>] - <span class=\"number\">97</span>));</span><br><span class=\"line\">    j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (;;)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (j &gt;= <span class=\"number\">16</span>)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        paramView = String.valueOf(paramView);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.val$textview.setText(<span class=\"string\">&quot;flag&#123;&quot;</span> + paramView + <span class=\"string\">&quot;&#125;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> paramView[(<span class=\"number\">31</span> - j)];</span><br><span class=\"line\">      paramView[(<span class=\"number\">31</span> - j)] = paramView[j];</span><br><span class=\"line\">      paramView[j] = i;</span><br><span class=\"line\">      j += <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">this</span>.val$textview.setText(<span class=\"string\">&quot;��������������&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>脚本；</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flagtrue = <span class=\"string\">&quot;dd2940c04462b4dd7c450528835cca15&quot;</span></span><br><span class=\"line\">x = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> flagtrue]</span><br><span class=\"line\">x[<span class=\"number\">2</span>] = <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(x[<span class=\"number\">2</span>]) + <span class=\"built_in\">ord</span>(x[<span class=\"number\">3</span>]) - <span class=\"number\">0x32</span>)</span><br><span class=\"line\">x[<span class=\"number\">4</span>] = <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(x[<span class=\"number\">2</span>]) + <span class=\"built_in\">ord</span>(x[<span class=\"number\">5</span>]) - <span class=\"number\">0x30</span>)</span><br><span class=\"line\">x[<span class=\"number\">0x1e</span>] = <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(x[<span class=\"number\">0x1f</span>]) + <span class=\"built_in\">ord</span>(x[<span class=\"number\">0x9</span>]) - <span class=\"number\">0x30</span>)</span><br><span class=\"line\">x[<span class=\"number\">0xe</span>] = <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(x[<span class=\"number\">0x1b</span>]) + <span class=\"built_in\">ord</span>(x[<span class=\"number\">0x1c</span>]) - <span class=\"number\">0x61</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">16</span>):</span><br><span class=\"line\">    x[i],x[<span class=\"number\">31</span>-i] = x[<span class=\"number\">31</span>-i],x[i]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&quot;flag&#123;&quot;</span>+ <span class=\"string\">&#x27;&#x27;</span>.join(x) + <span class=\"string\">&quot;&#125;&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#flag&#123;59acc538825054c7de4b26440c0999dd&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"simplerev\"><a class=\"anchor\" href=\"#simplerev\">#</a> simplerev</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span> *__fastcall <span class=\"title function_\">join</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">char</span> *a1, <span class=\"type\">const</span> <span class=\"type\">char</span> *a2)</span><span class=\"comment\">//key3（kills），v9（wodah）</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">size_t</span> v2; <span class=\"comment\">// rbx</span></span><br><span class=\"line\">  <span class=\"type\">size_t</span> v3; <span class=\"comment\">// rax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *dest; <span class=\"comment\">// [rsp+18h] [rbp-18h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v2 = <span class=\"built_in\">strlen</span>(a1);</span><br><span class=\"line\">  v3 = <span class=\"built_in\">strlen</span>(a2);</span><br><span class=\"line\">  dest = (<span class=\"type\">char</span> *)<span class=\"built_in\">malloc</span>(v2 + v3 + <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !dest )</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(dest, a1);</span><br><span class=\"line\">  <span class=\"built_in\">strcat</span>(dest, a2);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> dest;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  *(_QWORD *)src = <span class=\"string\">&#x27;SLCDN&#x27;</span>;</span><br><span class=\"line\">  v7 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v8 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v9[<span class=\"number\">0</span>] = <span class=\"string\">&#x27;wodah&#x27;</span>;</span><br><span class=\"line\">  v9[<span class=\"number\">1</span>] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">  v10 = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//x86cpu中存储是小端存储，因此，实际存储的应该是倒过来的</span></span><br><span class=\"line\">  text = join(key3, (<span class=\"type\">const</span> <span class=\"type\">char</span> *)v9);<span class=\"comment\">//killshadow</span></span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(key, key1);<span class=\"comment\">//key1 = “ADSFK”</span></span><br><span class=\"line\">  <span class=\"built_in\">strcat</span>(key, src);<span class=\"comment\">//key = ADSFKNDCLS</span></span><br><span class=\"line\">  v2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v3 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  getchar();</span><br><span class=\"line\">  v5 = <span class=\"built_in\">strlen</span>(key);<span class=\"comment\">//10</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; v5; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( key[v3 % v5] &gt; <span class=\"number\">64</span> &amp;&amp; key[v3 % v5] &lt;= <span class=\"number\">90</span> )</span><br><span class=\"line\">      key[i] = key[v3 % v5] + <span class=\"number\">32</span>;</span><br><span class=\"line\">    ++v3;</span><br><span class=\"line\">  &#125;<span class=\"comment\">//v3 = 10，key=adsfkndcls</span></span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input your flag:&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v1 = getchar();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v1 == <span class=\"string\">&#x27;\\n&#x27;</span> )</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v1 == <span class=\"string\">&#x27; &#x27;</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      ++v2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v1 &lt;= <span class=\"number\">96</span> || v1 &gt; <span class=\"number\">122</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v1 &gt; <span class=\"number\">64</span> &amp;&amp; v1 &lt;= <span class=\"number\">90</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          str2[v2] = (v1 - <span class=\"number\">39</span> - key[v3 % v5] + <span class=\"number\">97</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>;</span><br><span class=\"line\">          ++v3;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        str2[v2] = (v1 - <span class=\"number\">39</span> - key[v3 % v5] + <span class=\"number\">97</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>;</span><br><span class=\"line\">        ++v3;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( !(v3 % v5) )</span><br><span class=\"line\">        <span class=\"built_in\">putchar</span>(<span class=\"string\">&#x27; &#x27;</span>);</span><br><span class=\"line\">      ++v2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(text, str2) )</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Congratulation!\\n&quot;</span>);</span><br></pre></td></tr></table></figure></p>\n<p>脚本：</p>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">key = <span class=\"string\">&#x27;ADSFKNDCLS&#x27;</span></span><br><span class=\"line\">key2 = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">test = <span class=\"string\">&#x27;killshadow&#x27;</span></span><br><span class=\"line\">v5 = <span class=\"built_in\">len</span>(key)</span><br><span class=\"line\">v3 = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(key)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">ord</span>(key[i]) &gt;<span class=\"number\">64</span> <span class=\"keyword\">and</span> <span class=\"built_in\">ord</span>(key[i]) &lt;= <span class=\"number\">90</span>:</span><br><span class=\"line\">        key2 += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(key[i]) +<span class=\"number\">32</span>)</span><br><span class=\"line\">        v3 += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        key2 += key[i]</span><br><span class=\"line\">        v3 += <span class=\"number\">1</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> test:</span><br><span class=\"line\">    t = <span class=\"built_in\">ord</span>(i) - <span class=\"number\">97</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">65</span>,<span class=\"number\">123</span>):</span><br><span class=\"line\">         <span class=\"keyword\">if</span> t == (j + <span class=\"number\">58</span> - <span class=\"built_in\">ord</span>(key2[v3%<span class=\"number\">10</span>])) % <span class=\"number\">26</span>:</span><br><span class=\"line\">             v3 += <span class=\"number\">1</span></span><br><span class=\"line\">             flag += <span class=\"built_in\">chr</span>(j)</span><br><span class=\"line\">             <span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"gxyctf2019luck_guy\"><a class=\"anchor\" href=\"#gxyctf2019luck_guy\">#</a> [GXYCTF2019]luck_guy</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">4</span>; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> ( rand() % <span class=\"number\">200</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;OK, it&#x27;s flag:&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(s, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(s));</span><br><span class=\"line\">        <span class=\"built_in\">strcat</span>((<span class=\"type\">char</span> *)s, f1);<span class=\"comment\">//f1 = GXY&#123;do_not_</span></span><br><span class=\"line\">        <span class=\"built_in\">strcat</span>((<span class=\"type\">char</span> *)s, &amp;f2);<span class=\"comment\">//f2 = &quot;icug`of\\x7F&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%s&quot;</span>, (<span class=\"type\">const</span> <span class=\"type\">char</span> *)s);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Solar not like you&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Solar want a girlfriend&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">        <span class=\"built_in\">strcpy</span>((<span class=\"type\">char</span> *)s, <span class=\"string\">&quot;icug`of\\x7F&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">strcat</span>(&amp;f2, (<span class=\"type\">const</span> <span class=\"type\">char</span> *)s);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">5</span>:<span class=\"comment\">//猜测是f2加密</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">7</span>; ++j )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> ( j % <span class=\"number\">2</span> == <span class=\"number\">1</span> )</span><br><span class=\"line\">            *(&amp;f2 + j) -= <span class=\"number\">2</span>;</span><br><span class=\"line\">          <span class=\"keyword\">else</span></span><br><span class=\"line\">            --*(&amp;f2 + j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;emmm,you can&#x27;t find flag 23333&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p>试了试对 f2 字符串由 case 5 解密：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result = <span class=\"string\">&quot;icug`of\\x7F&quot;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">8</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(result[i]) - <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(result[i]) - <span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#hate_me&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"actf新生赛2020rome\"><a class=\"anchor\" href=\"#actf新生赛2020rome\">#</a> [ACTF 新生赛 2020] rome</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">strcpy</span>(v12, <span class=\"string\">&quot;Qsw3sj_lz4_Ujw@l&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input:&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, &amp;v2);</span><br><span class=\"line\">  result = v2;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v2 == <span class=\"number\">65</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    result = v3;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v3 == <span class=\"number\">67</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      result = v4;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v4 == <span class=\"number\">84</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        result = v5;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v5 == <span class=\"number\">70</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          result = v6;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> ( v6 == <span class=\"number\">123</span> )</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            result = v11;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( v11 == <span class=\"number\">125</span> )</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              v1[<span class=\"number\">0</span>] = v7;</span><br><span class=\"line\">              v1[<span class=\"number\">1</span>] = v8;</span><br><span class=\"line\">              v1[<span class=\"number\">2</span>] = v9;</span><br><span class=\"line\">              v1[<span class=\"number\">3</span>] = v10;</span><br><span class=\"line\">              *(_DWORD *)&amp;v12[<span class=\"number\">17</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">              <span class=\"keyword\">while</span> ( *(<span class=\"type\">int</span> *)&amp;v12[<span class=\"number\">17</span>] &lt;= <span class=\"number\">15</span> )</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &gt; <span class=\"number\">64</span> &amp;&amp; *((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &lt;= <span class=\"number\">90</span> )</span><br><span class=\"line\">                  *((_BYTE *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) = (*((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) - <span class=\"number\">51</span>) % <span class=\"number\">26</span> + <span class=\"number\">65</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &gt; <span class=\"number\">96</span> &amp;&amp; *((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &lt;= <span class=\"number\">122</span> )</span><br><span class=\"line\">                  *((_BYTE *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) = (*((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) - <span class=\"number\">79</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>;</span><br><span class=\"line\">                ++*(_DWORD *)&amp;v12[<span class=\"number\">17</span>];</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              *(_DWORD *)&amp;v12[<span class=\"number\">17</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">              <span class=\"keyword\">while</span> ( *(<span class=\"type\">int</span> *)&amp;v12[<span class=\"number\">17</span>] &lt;= <span class=\"number\">15</span> )</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                result = (<span class=\"type\">unsigned</span> __int8)v12[*(_DWORD *)&amp;v12[<span class=\"number\">17</span>]];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((_BYTE *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) != (_BYTE)result )</span><br><span class=\"line\">                  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">                ++*(_DWORD *)&amp;v12[<span class=\"number\">17</span>];</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              result = <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;You are correct!&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"flareon4login\"><a class=\"anchor\" href=\"#flareon4login\">#</a> [FlareOn4]login</h3>\n<p>AI 网页源代码得知为 rot13 加密则；</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">&#x27;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&#x27;</span></span><br><span class=\"line\">flag=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i &gt;=<span class=\"string\">&#x27;A&#x27;</span> <span class=\"keyword\">and</span> i&lt;=<span class=\"string\">&#x27;M&#x27;</span>:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i)+<span class=\"number\">13</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> i &gt;=<span class=\"string\">&#x27;a&#x27;</span> <span class=\"keyword\">and</span> i&lt;=<span class=\"string\">&#x27;m&#x27;</span>:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i)+<span class=\"number\">13</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> i&gt;=<span class=\"string\">&#x27;N&#x27;</span> <span class=\"keyword\">and</span> i&lt;=<span class=\"string\">&quot;Z&quot;</span>:</span><br><span class=\"line\">        flag+=<span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i)-<span class=\"number\">13</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> i&gt;=<span class=\"string\">&#x27;n&#x27;</span> <span class=\"keyword\">and</span> i&lt;=<span class=\"string\">&#x27;z&#x27;</span>:</span><br><span class=\"line\">        flag+=<span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(i)-<span class=\"number\">13</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        flag+=i</span><br><span class=\"line\"><span class=\"built_in\">print</span> (<span class=\"string\">&#x27;flag&#123;&#x27;</span>+flag+<span class=\"string\">&#x27;&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"mrctf2020xor\"><a class=\"anchor\" href=\"#mrctf2020xor\">#</a> [MRCTF2020]Xor</h3>\n<p>主要代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>(byte_4212C0) != <span class=\"number\">27</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">LABEL_6:</span><br><span class=\"line\">    sub_401020((<span class=\"type\">int</span>)<span class=\"string\">&quot;Wrong!\\n&quot;</span>);</span><br><span class=\"line\">    sub_404B7E(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    _loaddll(<span class=\"number\">0</span>);</span><br><span class=\"line\">    __debugbreak();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">27</span>; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( ((<span class=\"type\">unsigned</span> __int8)i ^ (<span class=\"type\">unsigned</span> __int8)byte_4212C0[i]) != byte_41EA08[i] )</span><br><span class=\"line\">      <span class=\"keyword\">goto</span> LABEL_6;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sub_401020((<span class=\"type\">int</span>)<span class=\"string\">&quot;Right!\\n&quot;</span>);</span><br></pre></td></tr></table></figure></p>\n<p>字符串进行异或</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;MSAWB~FXZ:J:`tQJ\\&quot;N@ bpdd&#125;8g&quot;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(a[i])^i)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)<span class=\"comment\">#MRCTF&#123;@_R3@1ly_E2_R3verse!&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"hubuctf-2022-新生赛ezpython\"><a class=\"anchor\" href=\"#hubuctf-2022-新生赛ezpython\">#</a> [HUBUCTF 2022 新生赛] ezPython</h3>\n<p>pyc 反编译代码：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> base58</span><br><span class=\"line\">password = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;password.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>).read()</span><br><span class=\"line\">tmp = bytes_to_long(password.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">ans = base64.b64encode(base58.b58encode(<span class=\"built_in\">str</span>(tmp))).decode()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;I&#x27;ve forgot my password,could you please help me find the password?&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> ans == <span class=\"string\">&#x27;M0hBajFITHVLcWV6R1BOcEM5MTR0R0J3eGZVODV6MTJjZUhGZFNHQw==&#x27;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;You get the password!&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Wrong! try again&#x27;</span>)</span><br></pre></td></tr></table></figure></p>\n<p>base58 和 base64 解码得到</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> base58</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> long_to_bytes</span><br><span class=\"line\">ans = <span class=\"string\">&#x27;M0hBajFITHVLcWV6R1BOcEM5MTR0R0J3eGZVODV6MTJjZUhGZFNHQw==&#x27;</span></span><br><span class=\"line\">ans1 = base64.b64decode(ans)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ans1)</span><br><span class=\"line\">ans2 = <span class=\"built_in\">int</span>(base58.b58decode(ans1))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ans2)</span><br><span class=\"line\">ans3 = long_to_bytes(ans2)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(ans3)</span><br><span class=\"line\">flag = hashlib.md5(ans3).hexdigest()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#b&#x27;3HAj1HLuKqezGPNpC914tGBwxfU85z12ceHFdSGC&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#22385992650816784030032474165</span></span><br><span class=\"line\"><span class=\"comment\">#b&#x27;HUBUCTF@1405&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#fd78ee3399dd6a3c1d0b637fdca0c075</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"hnctf-2022-week1你知道什么是py嘛\"><a class=\"anchor\" href=\"#hnctf-2022-week1你知道什么是py嘛\">#</a> [HNCTF 2022 Week1] 你知道什么是 Py 嘛？</h3>\n<p>加密代码：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = <span class=\"built_in\">str</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;please input your flag:&quot;</span>))</span><br><span class=\"line\">arr=[<span class=\"number\">29</span>, <span class=\"number\">0</span>, <span class=\"number\">16</span>, <span class=\"number\">23</span>, <span class=\"number\">18</span>, <span class=\"number\">61</span>, <span class=\"number\">43</span>, <span class=\"number\">41</span>, <span class=\"number\">13</span>, <span class=\"number\">28</span>, <span class=\"number\">88</span>, <span class=\"number\">94</span>, <span class=\"number\">49</span>, <span class=\"number\">110</span>, <span class=\"number\">66</span>, <span class=\"number\">44</span>, <span class=\"number\">43</span>, <span class=\"number\">28</span>, <span class=\"number\">91</span>, <span class=\"number\">108</span>, <span class=\"number\">61</span>, <span class=\"number\">7</span>, <span class=\"number\">22</span>, <span class=\"number\">7</span>, <span class=\"number\">43</span>, <span class=\"number\">51</span>, <span class=\"number\">44</span>, <span class=\"number\">46</span>, <span class=\"number\">9</span>, <span class=\"number\">18</span>, <span class=\"number\">20</span>, <span class=\"number\">6</span>, <span class=\"number\">2</span>, <span class=\"number\">24</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">len</span>(s)!=<span class=\"number\">35</span>  <span class=\"keyword\">or</span> s[<span class=\"number\">0</span>]!=<span class=\"string\">&#x27;N&#x27;</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;error&quot;</span>)</span><br><span class=\"line\">    exit(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"built_in\">len</span>(s)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">ord</span>(s[i-<span class=\"number\">1</span>])^<span class=\"built_in\">ord</span>(s[i])!=arr[i-<span class=\"number\">1</span>]):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;error!&quot;</span>)</span><br><span class=\"line\">        exit(<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;right!&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n<p>解密：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr=[<span class=\"number\">29</span>, <span class=\"number\">0</span>, <span class=\"number\">16</span>, <span class=\"number\">23</span>, <span class=\"number\">18</span>, <span class=\"number\">61</span>, <span class=\"number\">43</span>, <span class=\"number\">41</span>, <span class=\"number\">13</span>, <span class=\"number\">28</span>, <span class=\"number\">88</span>, <span class=\"number\">94</span>, <span class=\"number\">49</span>, <span class=\"number\">110</span>, <span class=\"number\">66</span>, <span class=\"number\">44</span>, <span class=\"number\">43</span>, <span class=\"number\">28</span>, <span class=\"number\">91</span>, <span class=\"number\">108</span>, <span class=\"number\">61</span>, <span class=\"number\">7</span>, <span class=\"number\">22</span>, <span class=\"number\">7</span>, <span class=\"number\">43</span>, <span class=\"number\">51</span>, <span class=\"number\">44</span>, <span class=\"number\">46</span>, <span class=\"number\">9</span>, <span class=\"number\">18</span>, <span class=\"number\">20</span>, <span class=\"number\">6</span>, <span class=\"number\">2</span>, <span class=\"number\">24</span>]</span><br><span class=\"line\">s = <span class=\"string\">&#x27;N&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"built_in\">len</span>(arr)):</span><br><span class=\"line\">    t = (arr[i-<span class=\"number\">1</span>])^<span class=\"built_in\">ord</span>(s[i-<span class=\"number\">1</span>])</span><br><span class=\"line\">    s += <span class=\"built_in\">chr</span>(t)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s)<span class=\"comment\">#NSSCTF&#123;Pyth0n_1s_th3_best_l@nguage</span></span><br></pre></td></tr></table></figure></p>\n<p>加括号即可</p>\n<h3 id=\"actf新生赛2020rome-2\"><a class=\"anchor\" href=\"#actf新生赛2020rome-2\">#</a> [ACTF 新生赛 2020] rome</h3>\n<p>源代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"built_in\">strcpy</span>(v12, <span class=\"string\">&quot;Qsw3sj_lz4_Ujw@l&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Please input:&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, &amp;v2);</span><br><span class=\"line\">  result = v2;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v2 == <span class=\"string\">&#x27;A&#x27;</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    result = v3;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v3 == <span class=\"string\">&#x27;C&#x27;</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      result = v4;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( v4 == <span class=\"string\">&#x27;T&#x27;</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        result = v5;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v5 == <span class=\"string\">&#x27;F&#x27;</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          result = v6;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> ( v6 == <span class=\"string\">&#x27;&#123;&#x27;</span> )</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">            result = v11;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( v11 == <span class=\"string\">&#x27;&#125;&#x27;</span> )</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              v1[<span class=\"number\">0</span>] = v7;</span><br><span class=\"line\">              v1[<span class=\"number\">1</span>] = v8;</span><br><span class=\"line\">              v1[<span class=\"number\">2</span>] = v9;</span><br><span class=\"line\">              v1[<span class=\"number\">3</span>] = v10;</span><br><span class=\"line\">              *(_DWORD *)&amp;v12[<span class=\"number\">17</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">              <span class=\"keyword\">while</span> ( *(<span class=\"type\">int</span> *)&amp;v12[<span class=\"number\">17</span>] &lt;= <span class=\"number\">15</span> )<span class=\"comment\">//凯撒加密</span></span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &gt; <span class=\"number\">64</span> &amp;&amp; *((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &lt;= <span class=\"number\">90</span> )<span class=\"comment\">//对大写字母偏移</span></span><br><span class=\"line\">                  *((_BYTE *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) = (*((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) - <span class=\"number\">51</span>) % <span class=\"number\">26</span> + <span class=\"number\">65</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &gt; <span class=\"number\">96</span> &amp;&amp; *((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) &lt;= <span class=\"number\">122</span> )<span class=\"comment\">//对小写字母偏移</span></span><br><span class=\"line\">                  *((_BYTE *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) = (*((<span class=\"type\">char</span> *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) - <span class=\"number\">79</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>;</span><br><span class=\"line\">                ++*(_DWORD *)&amp;v12[<span class=\"number\">17</span>];</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              *(_DWORD *)&amp;v12[<span class=\"number\">17</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">              <span class=\"keyword\">while</span> ( *(<span class=\"type\">int</span> *)&amp;v12[<span class=\"number\">17</span>] &lt;= <span class=\"number\">15</span> )</span><br><span class=\"line\">              &#123;</span><br><span class=\"line\">                result = (<span class=\"type\">unsigned</span> __int8)v12[*(_DWORD *)&amp;v12[<span class=\"number\">17</span>]];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( *((_BYTE *)v1 + *(_DWORD *)&amp;v12[<span class=\"number\">17</span>]) != (_BYTE)result )</span><br><span class=\"line\">                  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">                ++*(_DWORD *)&amp;v12[<span class=\"number\">17</span>];</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              result = <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;You are correct!&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>对大写字母加密分析得到偏移量 - 51-（-64）+ 65 - 64 ==  14</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202405071424966.png\" alt=\"image-20240507142441937\" /></p>\n<p>对小写字母加密分析得到偏移量 -79-（-64）+97-64 ==  18</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202405071427762.png\" alt=\"image-20240507142728724\" /></p>\n<p>所以解密脚本为：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result = <span class=\"string\">&quot;Qsw3sj_lz4_Ujw@l&quot;</span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">    t = <span class=\"built_in\">ord</span>(i)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> t &gt;<span class=\"number\">64</span> <span class=\"keyword\">and</span> t &lt;= <span class=\"number\">90</span> :</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(((t-<span class=\"number\">64</span>)-<span class=\"number\">14</span>)%<span class=\"number\">26</span>+<span class=\"number\">64</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> t &gt; <span class=\"number\">96</span> <span class=\"keyword\">and</span> t&lt;=<span class=\"number\">122</span>:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(((t-<span class=\"number\">97</span>)-<span class=\"number\">18</span>)%<span class=\"number\">26</span>+<span class=\"number\">97</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(t)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"><span class=\"comment\">#Cae3ar_th4_Gre@t</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"wustctf2020level1\"><a class=\"anchor\" href=\"#wustctf2020level1\">#</a> [WUSTCTF2020]level1</h3>\n<p>加密如下：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">19</span>; ++i )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( (i &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%ld\\n&quot;</span>, (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)(ptr[i] &lt;&lt; i));</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%ld\\n&quot;</span>, (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)(i * ptr[i]));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>解密</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr = [<span class=\"number\">198</span>,</span><br><span class=\"line\"><span class=\"number\">232</span>,</span><br><span class=\"line\"><span class=\"number\">816</span>,</span><br><span class=\"line\"><span class=\"number\">200</span>,</span><br><span class=\"line\"><span class=\"number\">1536</span>,</span><br><span class=\"line\"><span class=\"number\">300</span>,</span><br><span class=\"line\"><span class=\"number\">6144</span>,</span><br><span class=\"line\"><span class=\"number\">984</span>,</span><br><span class=\"line\"><span class=\"number\">51200</span>,</span><br><span class=\"line\"><span class=\"number\">570</span>,</span><br><span class=\"line\"><span class=\"number\">92160</span>,</span><br><span class=\"line\"><span class=\"number\">1200</span>,</span><br><span class=\"line\"><span class=\"number\">565248</span>,</span><br><span class=\"line\"><span class=\"number\">756</span>,</span><br><span class=\"line\"><span class=\"number\">1474560</span>,</span><br><span class=\"line\"><span class=\"number\">800</span>,</span><br><span class=\"line\"><span class=\"number\">6291456</span>,</span><br><span class=\"line\"><span class=\"number\">1782</span>,</span><br><span class=\"line\"><span class=\"number\">65536000</span>]</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">19</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i+<span class=\"number\">1</span>)&amp;<span class=\"number\">1</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(arr[i]//(i+<span class=\"number\">1</span>))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        flag += <span class=\"built_in\">chr</span>(arr[i]&gt;&gt;(i+<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)<span class=\"comment\">#ctf2020&#123;d9-dE6-20c&#125;</span></span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "CTF",
                "CTF"
            ]
        },
        {
            "id": "https://zoyager.github.io/2024/06/12/RC4%E7%BC%96%E7%A0%81/",
            "url": "https://zoyager.github.io/2024/06/12/RC4%E7%BC%96%E7%A0%81/",
            "title": "'RC4编码'",
            "date_published": "2024-06-12T05:28:31.000Z",
            "content_html": "<h2 id=\"rc4算法\"><a class=\"anchor\" href=\"#rc4算法\">#</a> RC4 算法</h2>\n<p>Rc4 是一种较为安全的密钥流算法。算法中有很 mod 运算和 256 数字。和输入有关的只有最后一步。</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RC4算法的原理很简单，包括初始化算法（KSA）和伪随机子密码生成算法（PRGA)两大部分。假设S-box的长度为<span class=\"number\">256</span>，密钥长度为Len。先来看算法的初始化部分（用C代码表示）</span><br><span class=\"line\">\t其中，参数<span class=\"number\">1</span>是一个<span class=\"number\">256</span>长度的<span class=\"type\">char</span>型数组，定义为: <span class=\"type\">unsigned</span> <span class=\"type\">char</span> sBox[<span class=\"number\">256</span>];</span><br><span class=\"line\">\t参数<span class=\"number\">2</span>是密钥，其内容可以随便定义：<span class=\"type\">char</span> key[<span class=\"number\">256</span>];</span><br><span class=\"line\">\t参数<span class=\"number\">3</span>是密钥的长度，Len = <span class=\"built_in\">strlen</span>(key);</span><br><span class=\"line\"><span class=\"comment\">/*初始化函数*/</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">rc4_init</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>*s,<span class=\"type\">unsigned</span> <span class=\"type\">char</span>*key, <span class=\"type\">unsigned</span> <span class=\"type\">long</span> Len)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//char k[256]=&#123;0&#125;;</span></span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> k[<span class=\"number\">256</span>]=&#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> tmp=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">256</span>;i++) &#123;</span><br><span class=\"line\">        s[i]=i;</span><br><span class=\"line\">        k[i]=key[i%Len];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">256</span>;i++) &#123;</span><br><span class=\"line\">        j=(j+s[i]+k[i])%<span class=\"number\">256</span>;</span><br><span class=\"line\">        tmp=s[i];</span><br><span class=\"line\">        s[i]=s[j];<span class=\"comment\">//交换s[i]和s[j]</span></span><br><span class=\"line\">        s[j]=tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">在初始化的过程中，密钥的主要功能是将S-box搅乱，i确保S-box的每个元素都得到处理，j保证S-box的搅乱是随机的。而不同的S-box在经过伪随机子密码生成算法的处理后可以得到不同的子密钥序列，将S-box和明文进行xor运算，得到密文，解密过程也完全相同。</span><br><span class=\"line\"> </span><br><span class=\"line\">加密过程如下：</span><br><span class=\"line\">    <span class=\"comment\">//化S盒和T数组。S盒是一个256字节的数组，用于存储一个0~255的排列。T数组是由密钥生成的，其长度和S盒相同。</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//密钥流。密钥流是一个与明文长度相等的伪随机数流，其生成方法如下：初始化i和j两个变量（初始值为0），然后对S盒进行256次置换操作。每次操作中，将S[i]和S[j]交换，并以S[i]+S[j] MOD 256作为索引，从S盒中取出一个值，并将其加入到密钥流中。最终得到的密钥流就是T数组经过多轮杂糅后得到的。</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//钥流和明文一一异或。异或操作的规则是：将明文当中的每一个字节和密钥流中的一个字节进行异或操作，得到加密之后的字节流。</span></span><br><span class=\"line\">加解密：</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">rc4_crypt</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>*s,<span class=\"type\">unsigned</span> <span class=\"type\">char</span>*Data,<span class=\"type\">unsigned</span> <span class=\"type\">long</span> Len)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>,t=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">long</span> k=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> tmp;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(k=<span class=\"number\">0</span>;k&lt;Len;k++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        i=(i+<span class=\"number\">1</span>)%<span class=\"number\">256</span>;</span><br><span class=\"line\">        j=(j+s[i])%<span class=\"number\">256</span>;</span><br><span class=\"line\">        tmp=s[i];</span><br><span class=\"line\">        s[i]=s[j];<span class=\"comment\">//交换s[x]和s[y]</span></span><br><span class=\"line\">        s[j]=tmp;</span><br><span class=\"line\">        t=(s[i]+s[j])%<span class=\"number\">256</span>;</span><br><span class=\"line\">        Data[k]^=s[t];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">最后在main函数中调用</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> s[<span class=\"number\">256</span>]=&#123;<span class=\"number\">0</span>&#125;,s2[<span class=\"number\">256</span>]=&#123;<span class=\"number\">0</span>&#125;;<span class=\"comment\">//S-box</span></span><br><span class=\"line\"><span class=\"type\">char</span> key[<span class=\"number\">256</span>]=&#123;<span class=\"string\">&quot;justfortest&quot;</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">char</span> pData[<span class=\"number\">512</span>]=<span class=\"string\">&quot;这是一个用来加密的数据Data&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">long</span> len=<span class=\"built_in\">strlen</span>(pData);</span><br><span class=\"line\"><span class=\"type\">int</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;pData=%s\\n&quot;</span>,pData);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key=%s,length=%d\\n\\n&quot;</span>,key,<span class=\"built_in\">strlen</span>(key));</span><br><span class=\"line\">rc4_init(s,(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>*)key,<span class=\"built_in\">strlen</span>(key));<span class=\"comment\">//已经完成了初始化</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;完成对S[i]的初始化，如下：\\n\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">256</span>;i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%02X&quot;</span>,s[i]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(i&amp;&amp;(i+<span class=\"number\">1</span>)%<span class=\"number\">16</span>==<span class=\"number\">0</span>)<span class=\"built_in\">putchar</span>(<span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">256</span>;i++)<span class=\"comment\">//用s2[i]暂时保留经过初始化的s[i]，很重要的！！！</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    s2[i]=s[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;已经初始化，现在加密:\\n\\n&quot;</span>);</span><br><span class=\"line\">rc4_crypt(s,(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>*)pData,len);<span class=\"comment\">//加密</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;pData=%s\\n\\n&quot;</span>,pData);</span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;已经加密，现在解密:\\n\\n&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//rc4_init(s,(unsigned char*)key,strlen(key));//初始化密钥</span></span><br><span class=\"line\">rc4_crypt(s2,(<span class=\"type\">unsigned</span> <span class=\"type\">char</span>*)pData,len);<span class=\"comment\">//解密</span></span><br><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;pData=%s\\n\\n&quot;</span>,pData);</span><br><span class=\"line\">return0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在解码中 S 盒不发生变化</p>\n<p>例题：</p>\n<h3 id=\"自解密系统exe\"><a class=\"anchor\" href=\"#自解密系统exe\">#</a> 自解密系统.exe</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hint：所谓自解密系统就是用同一个方法去加密和解密，貌似XOR就是这样？</span><br></pre></td></tr></table></figure></p>\n<p>源代码如下：</p>\n<p><figure class=\"highlight cc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> __cdecl <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v3; <span class=\"comment\">// rbx</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v4; <span class=\"comment\">// rsi</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v5; <span class=\"comment\">// edi</span></span><br><span class=\"line\">  __int64 v6; <span class=\"comment\">// r14</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 i; <span class=\"comment\">// rax</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 j; <span class=\"comment\">// r9</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v9; <span class=\"comment\">// r8</span></span><br><span class=\"line\">  __int64 v10; <span class=\"comment\">// r8</span></span><br><span class=\"line\">  __int64 v11; <span class=\"comment\">// r9</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 k; <span class=\"comment\">// rdx</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v13; <span class=\"comment\">// cl</span></span><br><span class=\"line\">  <span class=\"type\">int</span> *v14; <span class=\"comment\">// rsi</span></span><br><span class=\"line\">  __int128 v16; <span class=\"comment\">// [rsp+20h] [rbp-40h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v17[<span class=\"number\">8</span>]; <span class=\"comment\">// [rsp+30h] [rbp-30h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v18[<span class=\"number\">8</span>]; <span class=\"comment\">// [rsp+50h] [rbp-10h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v3 = <span class=\"number\">-1</span>i64;</span><br><span class=\"line\">  v17[<span class=\"number\">0</span>] = <span class=\"number\">0xCCE0C323</span>;</span><br><span class=\"line\">  v17[<span class=\"number\">1</span>] = <span class=\"number\">0x6384D83E</span>;</span><br><span class=\"line\">  v16 = xmmword_140002270;                      <span class=\"comment\">// 导出数据可得密钥 wanshikaitounan</span></span><br><span class=\"line\">  v17[<span class=\"number\">2</span>] = <span class=\"number\">0xD729CB68</span>;</span><br><span class=\"line\">  v4 = <span class=\"number\">-1</span>i64;</span><br><span class=\"line\">  v17[<span class=\"number\">3</span>] = <span class=\"number\">0x2A8700B2</span>;</span><br><span class=\"line\">  v17[<span class=\"number\">4</span>] = <span class=\"number\">0xFC02685</span>;</span><br><span class=\"line\">  v17[<span class=\"number\">5</span>] = <span class=\"number\">0xB0FEDDA</span>;</span><br><span class=\"line\">  v17[<span class=\"number\">6</span>] = <span class=\"number\">0xA6661AB3</span>;</span><br><span class=\"line\">  v17[<span class=\"number\">7</span>] = <span class=\"number\">0x1EB9D4F9</span>;</span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(v18, <span class=\"string\">&quot;跔)€&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">do</span></span><br><span class=\"line\">    ++v4;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( *((_BYTE *)&amp;v16 + v4) );<span class=\"comment\">//意思为所以v16中第v4个字节，下面同理</span></span><br><span class=\"line\">  <span class=\"keyword\">do</span></span><br><span class=\"line\">    ++v3;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( *((_BYTE *)v17 + v3) );</span><br><span class=\"line\">  v5 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">LOBYTE</span>(v6) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(Format);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>i64; i &lt; <span class=\"number\">256</span>; ++i )<span class=\"comment\">//从256字眼可猜到此为RC4加密，S盒初始化</span></span><br><span class=\"line\">    S[i] = i;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>i64; j &lt; <span class=\"number\">256</span>; ++j )<span class=\"comment\">//混淆置换表</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v9 = S[j];</span><br><span class=\"line\">    v6 = (<span class=\"type\">unsigned</span> __int8)(v9 + v6 + *((_BYTE *)&amp;v16 + j % v4));</span><br><span class=\"line\">    S[j] = S[v6];</span><br><span class=\"line\">    S[v6] = v9;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">LOBYTE</span>(v10) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">LOBYTE</span>(v11) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( k = <span class=\"number\">0</span>i64; k &lt; v3; ++k )<span class=\"comment\">//异或加密</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v10 = (<span class=\"type\">unsigned</span> __int8)(v10 + <span class=\"number\">1</span>);</span><br><span class=\"line\">    v13 = S[v10];</span><br><span class=\"line\">    v11 = (<span class=\"type\">unsigned</span> __int8)(v13 + v11);</span><br><span class=\"line\">    S[v10] = S[v11];</span><br><span class=\"line\">    S[v11] = v13;</span><br><span class=\"line\">    *((_BYTE *)v17 + k) ^= S[(<span class=\"type\">unsigned</span> __int8)(v13 + S[v10])];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(asc_140002280);</span><br><span class=\"line\">  v14 = v17;</span><br><span class=\"line\">  <span class=\"keyword\">do</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%#02x,&quot;</span>);</span><br><span class=\"line\">    ++v5;</span><br><span class=\"line\">    v14 = (<span class=\"type\">int</span> *)((<span class=\"type\">char</span> *)v14 + <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( v5 &lt;= v3 );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>从代码可知为原始的 RC4 加密，要找到初始数据和密钥，即处理 v17 和 “wanshikaitounan”</p>\n<p>因为异或 16 进制数（0-255 即 0-FF）所以对 v17 数据进行两两分组（注意 v17 [4],v17 [5] 对齐 8 位</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data = <span class=\"string\">&quot;CCE0C3236384D83ED729CB682A8700B20FC026850B0FEDDAA6661AB31EB9D4F9&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将字符串每两个字符一组分割成列表</span></span><br><span class=\"line\">pairs = [data[i:i+<span class=\"number\">2</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(data), <span class=\"number\">2</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将每一对字符转换成带有0x前缀的十六进制形式</span></span><br><span class=\"line\">formatted_data = <span class=\"string\">&quot;, &quot;</span>.join(<span class=\"string\">f&quot;0x<span class=\"subst\">&#123;pair&#125;</span>&quot;</span> <span class=\"keyword\">for</span> pair <span class=\"keyword\">in</span> pairs)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(formatted_data)</span><br><span class=\"line\"><span class=\"comment\">#0xCC, 0xE0, 0xC3, 0x23, 0x63, 0x84, 0xD8, 0x3E, 0xD7, 0x29, 0xCB, 0x68, 0x2A, 0x87, 0x00, 0xB2, 0x0F, 0xC0, 0x26, 0x85, 0x0B, 0x0F, 0xED, 0xDA, 0xA6, 0x66, 0x1A, 0xB3, 0x1E, 0xB9, 0xD4, 0xF9</span></span><br></pre></td></tr></table></figure></p>\n<p>又因为栈储存原理所以需要将数据四个为一组，逆序输出（v17 [i] 为一组分开）得到：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0x23</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0xcc</span>,</span><br><span class=\"line\"><span class=\"number\">0x3e</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x63</span>,</span><br><span class=\"line\"><span class=\"number\">0x68</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0xd7</span>,</span><br><span class=\"line\"><span class=\"number\">0xb2</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0x2a</span>,</span><br><span class=\"line\"><span class=\"number\">0x85</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xf</span>,</span><br><span class=\"line\"><span class=\"number\">0xda</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0xf</span>, <span class=\"number\">0xb</span>,</span><br><span class=\"line\"><span class=\"number\">0xb3</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0xa6</span>,</span><br><span class=\"line\"><span class=\"number\">0xf9</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x1e</span></span><br></pre></td></tr></table></figure></p>\n<p>又分析汇编代码可知，还有一组值为</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0xDA</span>, <span class=\"number\">0xA0</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x80</span></span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202405111632527.png\" alt=\"image-20240511163215487\" /></p>\n<p>进行解密：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rc4_decrypt</span>(<span class=\"params\">ciphertext, key</span>):</span><br><span class=\"line\">    S = <span class=\"built_in\">list</span>(<span class=\"built_in\">range</span>(<span class=\"number\">256</span>))</span><br><span class=\"line\">    j = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">256</span>):</span><br><span class=\"line\">        j = (j + S[i] + key[i % <span class=\"built_in\">len</span>(key)]) % <span class=\"number\">256</span></span><br><span class=\"line\">        S[i], S[j] = S[j], S[i]</span><br><span class=\"line\"></span><br><span class=\"line\">    i = j = <span class=\"number\">0</span></span><br><span class=\"line\">    plaintext = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> byte <span class=\"keyword\">in</span> ciphertext:</span><br><span class=\"line\">        i = (i + <span class=\"number\">1</span>) % <span class=\"number\">256</span></span><br><span class=\"line\">        j = (j + S[i]) % <span class=\"number\">256</span></span><br><span class=\"line\">        S[i], S[j] = S[j], S[i]</span><br><span class=\"line\">        k = S[(S[i] + S[j]) % <span class=\"number\">256</span>]</span><br><span class=\"line\">        plaintext.append(byte ^ k)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">bytes</span>(plaintext)</span><br><span class=\"line\">encrypted_data = [</span><br><span class=\"line\"><span class=\"number\">0x23</span>, <span class=\"number\">0xc3</span>, <span class=\"number\">0xe0</span>, <span class=\"number\">0xcc</span>,</span><br><span class=\"line\"><span class=\"number\">0x3e</span>, <span class=\"number\">0xd8</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x63</span>,</span><br><span class=\"line\"><span class=\"number\">0x68</span>, <span class=\"number\">0xcb</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0xd7</span>,</span><br><span class=\"line\"><span class=\"number\">0xb2</span>, <span class=\"number\">0x0</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0x2a</span>,</span><br><span class=\"line\"><span class=\"number\">0x85</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0xc0</span>, <span class=\"number\">0xf</span>,</span><br><span class=\"line\"><span class=\"number\">0xda</span>, <span class=\"number\">0xed</span>, <span class=\"number\">0xf</span>, <span class=\"number\">0xb</span>,</span><br><span class=\"line\"><span class=\"number\">0xb3</span>, <span class=\"number\">0x1a</span>, <span class=\"number\">0x66</span>, <span class=\"number\">0xa6</span>,</span><br><span class=\"line\"><span class=\"number\">0xf9</span>, <span class=\"number\">0xd4</span>, <span class=\"number\">0xb9</span>, <span class=\"number\">0x1e</span>,</span><br><span class=\"line\"><span class=\"number\">0xDA</span>, <span class=\"number\">0xA0</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x80</span>]</span><br><span class=\"line\">encryption_key = <span class=\"string\">b&#x27;wanshikaitounan&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">decrypted_data = rc4_decrypt(encrypted_data, encryption_key)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(decrypted_data.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))<span class=\"comment\">#flag&#123;sT1veXODCT5FchBbcpdr0z2wNvMjPG&#125;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"阿拉丁神灯也是盒子exe\"><a class=\"anchor\" href=\"#阿拉丁神灯也是盒子exe\">#</a> 阿拉丁神灯也是盒子.exe</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hint：和自解密系统对比一下看看区别</span><br></pre></td></tr></table></figure></p>\n<p>源代码：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v3; <span class=\"comment\">// rbx</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int8 *v4; <span class=\"comment\">// rdx</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// ecx</span></span><br><span class=\"line\">  __int64 v6; <span class=\"comment\">// rax</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v7; <span class=\"comment\">// rdi</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v8; <span class=\"comment\">// r9</span></span><br><span class=\"line\">  __int64 v9; <span class=\"comment\">// r11</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 j; <span class=\"comment\">// r10</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v11; <span class=\"comment\">// r8</span></span><br><span class=\"line\">  __int64 v12; <span class=\"comment\">// r8</span></span><br><span class=\"line\">  __int64 v13; <span class=\"comment\">// r9</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v14; <span class=\"comment\">// rdx</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v15; <span class=\"comment\">// cl</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v17[<span class=\"number\">24</span>]; <span class=\"comment\">// [rsp+20h] [rbp-40h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v18[<span class=\"number\">8</span>]; <span class=\"comment\">// [rsp+38h] [rbp-28h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v3 = <span class=\"number\">0</span>i64;</span><br><span class=\"line\">  v4 = (<span class=\"type\">unsigned</span> __int8 *)&amp;qword_140002290;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">256</span>; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v6 = *v4++;</span><br><span class=\"line\">    s[v6] = i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  v7 = <span class=\"number\">-1</span>i64;</span><br><span class=\"line\">  v18[<span class=\"number\">0</span>] = <span class=\"number\">0x91D37677</span>;</span><br><span class=\"line\">  v18[<span class=\"number\">1</span>] = <span class=\"number\">0x6AAAAB7F</span>;</span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(v17, <span class=\"string\">&quot;baichaqingfengwuxianshi&quot;</span>);<span class=\"comment\">//密钥</span></span><br><span class=\"line\">  v8 = <span class=\"number\">-1</span>i64;</span><br><span class=\"line\">  v18[<span class=\"number\">2</span>] = <span class=\"number\">0x5359CC95</span>;</span><br><span class=\"line\">  v18[<span class=\"number\">3</span>] = <span class=\"number\">0xEFF70041</span>;</span><br><span class=\"line\">  v18[<span class=\"number\">4</span>] = <span class=\"number\">0x3FC93BAE</span>;</span><br><span class=\"line\">  v18[<span class=\"number\">5</span>] = <span class=\"number\">0xFF6C554E</span>;</span><br><span class=\"line\">  v18[<span class=\"number\">6</span>] = <span class=\"number\">0xFF8178E0</span>;</span><br><span class=\"line\">  v18[<span class=\"number\">7</span>] = <span class=\"number\">0xFB632993</span>;</span><br><span class=\"line\">  <span class=\"keyword\">do</span></span><br><span class=\"line\">    ++v8;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( v17[v8] );</span><br><span class=\"line\">  <span class=\"keyword\">do</span></span><br><span class=\"line\">    ++v7;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( *((_BYTE *)v18 + v7) );</span><br><span class=\"line\">  LOBYTE(v9) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>i64; j &lt; <span class=\"number\">256</span>; ++j )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v11 = s[j];</span><br><span class=\"line\">    v9 = (<span class=\"type\">unsigned</span> __int8)(v11 + v9 + v17[j % v8]);</span><br><span class=\"line\">    s[j] = s[v9];</span><br><span class=\"line\">    s[v9] = v11;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  LOBYTE(v12) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  LOBYTE(v13) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v14 = <span class=\"number\">0</span>i64;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v7 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">do</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v12 = (<span class=\"type\">unsigned</span> __int8)(v12 + <span class=\"number\">1</span>);</span><br><span class=\"line\">      v15 = s[v12];</span><br><span class=\"line\">      v13 = (<span class=\"type\">unsigned</span> __int8)(v15 + v13);</span><br><span class=\"line\">      s[v12] = s[v13];</span><br><span class=\"line\">      s[v13] = v15;</span><br><span class=\"line\">      *((_BYTE *)v18 + v14++) ^= s[(<span class=\"type\">unsigned</span> __int8)(v15 + s[v12])];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( v14 &lt; v7 );</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Encrypted data: &quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">do</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%#02x,&quot;</span>);</span><br><span class=\"line\">      ++v3;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> ( v3 &lt; v7 );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Encrypted data: &quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>其中 qword_140002290 为：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202405111747380.png\" alt=\"image-20240511174713292\" /></p>\n<p>即：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3AF3AC0BC85A5231,</span><br><span class=\"line\">83DE95AB9B27548B,</span><br><span class=\"line\">970AE3C47F53CB60,</span><br><span class=\"line\">7BF4DFC568D529E0,</span><br><span class=\"line\">1770E96C7842D6AA,</span><br><span class=\"line\">6789A975492437D7,</span><br><span class=\"line\">4EC25BB491D9FA03,</span><br><span class=\"line\">74C70873B146FC92,</span><br><span class=\"line\">A5EA2D4DF5ECAF09,</span><br><span class=\"line\">B08F0C7E2BA6EFDA,</span><br><span class=\"line\">1D128E1584620604,</span><br><span class=\"line\">452847D438E2C044,</span><br><span class=\"line\">82188CE6CF639D6E,</span><br><span class=\"line\">20C1109487EE2C1B,</span><br><span class=\"line\">E1D3BC77EBA44A07,</span><br><span class=\"line\">1686CC79E76B2A66,</span><br><span class=\"line\">30FB9F3C5519D1D0,</span><br><span class=\"line\">90CD619EF1B8BD98,</span><br><span class=\"line\">3DB36AAE578D7CCE,</span><br><span class=\"line\">3E4FBAA28871A776,</span><br><span class=\"line\">2F363521480F6440,</span><br><span class=\"line\">D2FEB5D8515D14E8,</span><br><span class=\"line\">804C0D43B6A19396,</span><br><span class=\"line\">BF590572DDA3FFC9,</span><br><span class=\"line\">F2DCE5131F34260E,</span><br><span class=\"line\">8A39B785E41E50C6,</span><br><span class=\"line\">F01A2356BB9CEDCA,</span><br><span class=\"line\">BE416F3365B25832,</span><br><span class=\"line\">81C35FAD00116D3F,</span><br><span class=\"line\">995EF7F69AA0A825,</span><br><span class=\"line\">B97A023BF94B2E22,</span><br><span class=\"line\">FD7D01DB1CF8695C</span><br></pre></td></tr></table></figure></p>\n<p>初始 S 盒用 V4 混淆：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202405111748057.png\" alt=\"image-20240511174850026\" /></p>\n<p>所以新 S 盒为：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">process_string</span>(<span class=\"params\">input_str</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 将字符串按两个字符一组分割成列表，并逆向输出</span></span><br><span class=\"line\">    pairs = [input_str[i:i+<span class=\"number\">2</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(input_str), <span class=\"number\">2</span>)][::-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 以0x开头逆向输出每组字符串</span></span><br><span class=\"line\">    output = <span class=\"string\">&quot;0x&quot;</span> + <span class=\"string\">&quot;, 0x&quot;</span>.join(pairs)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> output</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 给定的字符串列表</span></span><br><span class=\"line\">input_strings = [</span><br><span class=\"line\"><span class=\"string\">&#x27;3AF3AC0BC85A5231&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;83DE95AB9B27548B&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;970AE3C47F53CB60&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;7BF4DFC568D529E0&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;1770E96C7842D6AA&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;6789A975492437D7&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;4EC25BB491D9FA03&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;74C70873B146FC92&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;A5EA2D4DF5ECAF09&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;B08F0C7E2BA6EFDA&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;1D128E1584620604&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;452847D438E2C044&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;82188CE6CF639D6E&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;20C1109487EE2C1B&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;E1D3BC77EBA44A07&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;1686CC79E76B2A66&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;30FB9F3C5519D1D0&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;90CD619EF1B8BD98&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;3DB36AAE578D7CCE&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;3E4FBAA28871A776&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;2F363521480F6440&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;D2FEB5D8515D14E8&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;804C0D43B6A19396&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;BF590572DDA3FFC9&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;F2DCE5131F34260E&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;8A39B785E41E50C6&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;F01A2356BB9CEDCA&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;BE416F3365B25832&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;81C35FAD00116D3F&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;995EF7F69AA0A825&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;B97A023BF94B2E22&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;FD7D01DB1CF8695&#x27;</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 批量处理字符串并输出结果</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> input_str <span class=\"keyword\">in</span> input_strings:</span><br><span class=\"line\">    output = process_string(input_str)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(output)</span><br><span class=\"line\">output = [</span><br><span class=\"line\"><span class=\"number\">0x31</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0x5A</span>, <span class=\"number\">0xC8</span>, <span class=\"number\">0x0B</span>, <span class=\"number\">0xAC</span>, <span class=\"number\">0xF3</span>, <span class=\"number\">0x3A</span>,</span><br><span class=\"line\"><span class=\"number\">0x8B</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x9B</span>, <span class=\"number\">0xAB</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0xDE</span>, <span class=\"number\">0x83</span>,</span><br><span class=\"line\"><span class=\"number\">0x60</span>, <span class=\"number\">0xCB</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0x7F</span>, <span class=\"number\">0xC4</span>, <span class=\"number\">0xE3</span>, <span class=\"number\">0x0A</span>, <span class=\"number\">0x97</span>,</span><br><span class=\"line\"><span class=\"number\">0xE0</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0xD5</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0xC5</span>, <span class=\"number\">0xDF</span>, <span class=\"number\">0xF4</span>, <span class=\"number\">0x7B</span>,</span><br><span class=\"line\"><span class=\"number\">0xAA</span>, <span class=\"number\">0xD6</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x6C</span>, <span class=\"number\">0xE9</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0x17</span>,</span><br><span class=\"line\"><span class=\"number\">0xD7</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0xA9</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0x67</span>,</span><br><span class=\"line\"><span class=\"number\">0x03</span>, <span class=\"number\">0xFA</span>, <span class=\"number\">0xD9</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0xB4</span>, <span class=\"number\">0x5B</span>, <span class=\"number\">0xC2</span>, <span class=\"number\">0x4E</span>,</span><br><span class=\"line\"><span class=\"number\">0x92</span>, <span class=\"number\">0xFC</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0xB1</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0xC7</span>, <span class=\"number\">0x74</span>,</span><br><span class=\"line\"><span class=\"number\">0x09</span>, <span class=\"number\">0xAF</span>, <span class=\"number\">0xEC</span>, <span class=\"number\">0xF5</span>, <span class=\"number\">0x4D</span>, <span class=\"number\">0x2D</span>, <span class=\"number\">0xEA</span>, <span class=\"number\">0xA5</span>,</span><br><span class=\"line\"><span class=\"number\">0xDA</span>, <span class=\"number\">0xEF</span>, <span class=\"number\">0xA6</span>, <span class=\"number\">0x2B</span>, <span class=\"number\">0x7E</span>, <span class=\"number\">0x0C</span>, <span class=\"number\">0x8F</span>, <span class=\"number\">0xB0</span>,</span><br><span class=\"line\"><span class=\"number\">0x04</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0x8E</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x1D</span>,</span><br><span class=\"line\"><span class=\"number\">0x44</span>, <span class=\"number\">0xC0</span>, <span class=\"number\">0xE2</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0xD4</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x45</span>,</span><br><span class=\"line\"><span class=\"number\">0x6E</span>, <span class=\"number\">0x9D</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xCF</span>, <span class=\"number\">0xE6</span>, <span class=\"number\">0x8C</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x82</span>,</span><br><span class=\"line\"><span class=\"number\">0x1B</span>, <span class=\"number\">0x2C</span>, <span class=\"number\">0xEE</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0xC1</span>, <span class=\"number\">0x20</span>,</span><br><span class=\"line\"><span class=\"number\">0x07</span>, <span class=\"number\">0x4A</span>, <span class=\"number\">0xA4</span>, <span class=\"number\">0xEB</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0xBC</span>, <span class=\"number\">0xD3</span>, <span class=\"number\">0xE1</span>,</span><br><span class=\"line\"><span class=\"number\">0x66</span>, <span class=\"number\">0x2A</span>, <span class=\"number\">0x6B</span>, <span class=\"number\">0xE7</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xCC</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x16</span>,</span><br><span class=\"line\"><span class=\"number\">0xD0</span>, <span class=\"number\">0xD1</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x9F</span>, <span class=\"number\">0xFB</span>, <span class=\"number\">0x30</span>,</span><br><span class=\"line\"><span class=\"number\">0x98</span>, <span class=\"number\">0xBD</span>, <span class=\"number\">0xB8</span>, <span class=\"number\">0xF1</span>, <span class=\"number\">0x9E</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xCD</span>, <span class=\"number\">0x90</span>,</span><br><span class=\"line\"><span class=\"number\">0xCE</span>, <span class=\"number\">0x7C</span>, <span class=\"number\">0x8D</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xAE</span>, <span class=\"number\">0x6A</span>, <span class=\"number\">0xB3</span>, <span class=\"number\">0x3D</span>,</span><br><span class=\"line\"><span class=\"number\">0x76</span>, <span class=\"number\">0xA7</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xA2</span>, <span class=\"number\">0xBA</span>, <span class=\"number\">0x4F</span>, <span class=\"number\">0x3E</span>,</span><br><span class=\"line\"><span class=\"number\">0x40</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0x0F</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x2F</span>,</span><br><span class=\"line\"><span class=\"number\">0xE8</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x5D</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0xD8</span>, <span class=\"number\">0xB5</span>, <span class=\"number\">0xFE</span>, <span class=\"number\">0xD2</span>,</span><br><span class=\"line\"><span class=\"number\">0x96</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xA1</span>, <span class=\"number\">0xB6</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x0D</span>, <span class=\"number\">0x4C</span>, <span class=\"number\">0x80</span>,</span><br><span class=\"line\"><span class=\"number\">0xC9</span>, <span class=\"number\">0xFF</span>, <span class=\"number\">0xA3</span>, <span class=\"number\">0xDD</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0xBF</span>,</span><br><span class=\"line\"><span class=\"number\">0x0E</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x1F</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0xE5</span>, <span class=\"number\">0xDC</span>, <span class=\"number\">0xF2</span>,</span><br><span class=\"line\"><span class=\"number\">0xC6</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x1E</span>, <span class=\"number\">0xE4</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xB7</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x8A</span>,</span><br><span class=\"line\"><span class=\"number\">0xCA</span>, <span class=\"number\">0xED</span>, <span class=\"number\">0x9C</span>, <span class=\"number\">0xBB</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x1A</span>, <span class=\"number\">0xF0</span>,</span><br><span class=\"line\"><span class=\"number\">0x32</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xB2</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x6F</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0xBE</span>,</span><br><span class=\"line\"><span class=\"number\">0x3F</span>, <span class=\"number\">0x6D</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0xAD</span>, <span class=\"number\">0x5F</span>, <span class=\"number\">0xC3</span>, <span class=\"number\">0x81</span>,</span><br><span class=\"line\"><span class=\"number\">0x25</span>, <span class=\"number\">0xA8</span>, <span class=\"number\">0xA0</span>, <span class=\"number\">0x9A</span>, <span class=\"number\">0xF6</span>, <span class=\"number\">0xF7</span>, <span class=\"number\">0x5E</span>, <span class=\"number\">0x99</span>,</span><br><span class=\"line\"><span class=\"number\">0x22</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x4B</span>, <span class=\"number\">0xF9</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x7A</span>, <span class=\"number\">0xB9</span>,</span><br><span class=\"line\"><span class=\"number\">0x5C</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0xF8</span>, <span class=\"number\">0x1C</span>, <span class=\"number\">0xDB</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x7D</span>, <span class=\"number\">0xFD</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>这次关于 v18 [] 不用逆序，其余和上题一致</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strings = [</span><br><span class=\"line\"><span class=\"string\">&#x27;91D37677&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;6AAAAB7F&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;5359CC95&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;EFF70041&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;3FC93BAE&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;FF6C554E&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;FF8178E0&#x27;</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;FB632993&#x27;</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> strings:</span><br><span class=\"line\">    result = <span class=\"string\">&quot;0x&quot;</span> + <span class=\"string\">&quot;, 0x&quot;</span>.join([s[i:i+<span class=\"number\">2</span>] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(s), <span class=\"number\">2</span>)])</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(result)</span><br><span class=\"line\">output = [</span><br><span class=\"line\"><span class=\"number\">0x91</span>, <span class=\"number\">0xD3</span>, <span class=\"number\">0x76</span>, <span class=\"number\">0x77</span>,</span><br><span class=\"line\"><span class=\"number\">0x6A</span>, <span class=\"number\">0xAA</span>, <span class=\"number\">0xAB</span>, <span class=\"number\">0x7F</span>,</span><br><span class=\"line\"><span class=\"number\">0x53</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0xCC</span>, <span class=\"number\">0x95</span>,</span><br><span class=\"line\"><span class=\"number\">0xEF</span>, <span class=\"number\">0xF7</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0x41</span>,</span><br><span class=\"line\"><span class=\"number\">0x3F</span>, <span class=\"number\">0xC9</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0xAE</span>,</span><br><span class=\"line\"><span class=\"number\">0xFF</span>, <span class=\"number\">0x6C</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x4E</span>,</span><br><span class=\"line\"><span class=\"number\">0xFF</span>, <span class=\"number\">0x81</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0xE0</span>,</span><br><span class=\"line\"><span class=\"number\">0xFB</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0x93</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>因此这个题的总脚本为:</p>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rc4_decrypt</span>(<span class=\"params\">ciphertext, key</span>):</span><br><span class=\"line\">    output = [</span><br><span class=\"line\">        <span class=\"number\">0x31</span>, <span class=\"number\">0x52</span>, <span class=\"number\">0x5A</span>, <span class=\"number\">0xC8</span>, <span class=\"number\">0x0B</span>, <span class=\"number\">0xAC</span>, <span class=\"number\">0xF3</span>, <span class=\"number\">0x3A</span>,</span><br><span class=\"line\">        <span class=\"number\">0x8B</span>, <span class=\"number\">0x54</span>, <span class=\"number\">0x27</span>, <span class=\"number\">0x9B</span>, <span class=\"number\">0xAB</span>, <span class=\"number\">0x95</span>, <span class=\"number\">0xDE</span>, <span class=\"number\">0x83</span>,</span><br><span class=\"line\">        <span class=\"number\">0x60</span>, <span class=\"number\">0xCB</span>, <span class=\"number\">0x53</span>, <span class=\"number\">0x7F</span>, <span class=\"number\">0xC4</span>, <span class=\"number\">0xE3</span>, <span class=\"number\">0x0A</span>, <span class=\"number\">0x97</span>,</span><br><span class=\"line\">        <span class=\"number\">0xE0</span>, <span class=\"number\">0x29</span>, <span class=\"number\">0xD5</span>, <span class=\"number\">0x68</span>, <span class=\"number\">0xC5</span>, <span class=\"number\">0xDF</span>, <span class=\"number\">0xF4</span>, <span class=\"number\">0x7B</span>,</span><br><span class=\"line\">        <span class=\"number\">0xAA</span>, <span class=\"number\">0xD6</span>, <span class=\"number\">0x42</span>, <span class=\"number\">0x78</span>, <span class=\"number\">0x6C</span>, <span class=\"number\">0xE9</span>, <span class=\"number\">0x70</span>, <span class=\"number\">0x17</span>,</span><br><span class=\"line\">        <span class=\"number\">0xD7</span>, <span class=\"number\">0x37</span>, <span class=\"number\">0x24</span>, <span class=\"number\">0x49</span>, <span class=\"number\">0x75</span>, <span class=\"number\">0xA9</span>, <span class=\"number\">0x89</span>, <span class=\"number\">0x67</span>,</span><br><span class=\"line\">        <span class=\"number\">0x03</span>, <span class=\"number\">0xFA</span>, <span class=\"number\">0xD9</span>, <span class=\"number\">0x91</span>, <span class=\"number\">0xB4</span>, <span class=\"number\">0x5B</span>, <span class=\"number\">0xC2</span>, <span class=\"number\">0x4E</span>,</span><br><span class=\"line\">        <span class=\"number\">0x92</span>, <span class=\"number\">0xFC</span>, <span class=\"number\">0x46</span>, <span class=\"number\">0xB1</span>, <span class=\"number\">0x73</span>, <span class=\"number\">0x08</span>, <span class=\"number\">0xC7</span>, <span class=\"number\">0x74</span>,</span><br><span class=\"line\">        <span class=\"number\">0x09</span>, <span class=\"number\">0xAF</span>, <span class=\"number\">0xEC</span>, <span class=\"number\">0xF5</span>, <span class=\"number\">0x4D</span>, <span class=\"number\">0x2D</span>, <span class=\"number\">0xEA</span>, <span class=\"number\">0xA5</span>,</span><br><span class=\"line\">        <span class=\"number\">0xDA</span>, <span class=\"number\">0xEF</span>, <span class=\"number\">0xA6</span>, <span class=\"number\">0x2B</span>, <span class=\"number\">0x7E</span>, <span class=\"number\">0x0C</span>, <span class=\"number\">0x8F</span>, <span class=\"number\">0xB0</span>,</span><br><span class=\"line\">        <span class=\"number\">0x04</span>, <span class=\"number\">0x06</span>, <span class=\"number\">0x62</span>, <span class=\"number\">0x84</span>, <span class=\"number\">0x15</span>, <span class=\"number\">0x8E</span>, <span class=\"number\">0x12</span>, <span class=\"number\">0x1D</span>,</span><br><span class=\"line\">        <span class=\"number\">0x44</span>, <span class=\"number\">0xC0</span>, <span class=\"number\">0xE2</span>, <span class=\"number\">0x38</span>, <span class=\"number\">0xD4</span>, <span class=\"number\">0x47</span>, <span class=\"number\">0x28</span>, <span class=\"number\">0x45</span>,</span><br><span class=\"line\">        <span class=\"number\">0x6E</span>, <span class=\"number\">0x9D</span>, <span class=\"number\">0x63</span>, <span class=\"number\">0xCF</span>, <span class=\"number\">0xE6</span>, <span class=\"number\">0x8C</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0x82</span>,</span><br><span class=\"line\">        <span class=\"number\">0x1B</span>, <span class=\"number\">0x2C</span>, <span class=\"number\">0xEE</span>, <span class=\"number\">0x87</span>, <span class=\"number\">0x94</span>, <span class=\"number\">0x10</span>, <span class=\"number\">0xC1</span>, <span class=\"number\">0x20</span>,</span><br><span class=\"line\">        <span class=\"number\">0x07</span>, <span class=\"number\">0x4A</span>, <span class=\"number\">0xA4</span>, <span class=\"number\">0xEB</span>, <span class=\"number\">0x77</span>, <span class=\"number\">0xBC</span>, <span class=\"number\">0xD3</span>, <span class=\"number\">0xE1</span>,</span><br><span class=\"line\">        <span class=\"number\">0x66</span>, <span class=\"number\">0x2A</span>, <span class=\"number\">0x6B</span>, <span class=\"number\">0xE7</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0xCC</span>, <span class=\"number\">0x86</span>, <span class=\"number\">0x16</span>,</span><br><span class=\"line\">        <span class=\"number\">0xD0</span>, <span class=\"number\">0xD1</span>, <span class=\"number\">0x19</span>, <span class=\"number\">0x55</span>, <span class=\"number\">0x3C</span>, <span class=\"number\">0x9F</span>, <span class=\"number\">0xFB</span>, <span class=\"number\">0x30</span>,</span><br><span class=\"line\">        <span class=\"number\">0x98</span>, <span class=\"number\">0xBD</span>, <span class=\"number\">0xB8</span>, <span class=\"number\">0xF1</span>, <span class=\"number\">0x9E</span>, <span class=\"number\">0x61</span>, <span class=\"number\">0xCD</span>, <span class=\"number\">0x90</span>,</span><br><span class=\"line\">        <span class=\"number\">0xCE</span>, <span class=\"number\">0x7C</span>, <span class=\"number\">0x8D</span>, <span class=\"number\">0x57</span>, <span class=\"number\">0xAE</span>, <span class=\"number\">0x6A</span>, <span class=\"number\">0xB3</span>, <span class=\"number\">0x3D</span>,</span><br><span class=\"line\">        <span class=\"number\">0x76</span>, <span class=\"number\">0xA7</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x88</span>, <span class=\"number\">0xA2</span>, <span class=\"number\">0xBA</span>, <span class=\"number\">0x4F</span>, <span class=\"number\">0x3E</span>,</span><br><span class=\"line\">        <span class=\"number\">0x40</span>, <span class=\"number\">0x64</span>, <span class=\"number\">0x0F</span>, <span class=\"number\">0x48</span>, <span class=\"number\">0x21</span>, <span class=\"number\">0x35</span>, <span class=\"number\">0x36</span>, <span class=\"number\">0x2F</span>,</span><br><span class=\"line\">        <span class=\"number\">0xE8</span>, <span class=\"number\">0x14</span>, <span class=\"number\">0x5D</span>, <span class=\"number\">0x51</span>, <span class=\"number\">0xD8</span>, <span class=\"number\">0xB5</span>, <span class=\"number\">0xFE</span>, <span class=\"number\">0xD2</span>,</span><br><span class=\"line\">        <span class=\"number\">0x96</span>, <span class=\"number\">0x93</span>, <span class=\"number\">0xA1</span>, <span class=\"number\">0xB6</span>, <span class=\"number\">0x43</span>, <span class=\"number\">0x0D</span>, <span class=\"number\">0x4C</span>, <span class=\"number\">0x80</span>,</span><br><span class=\"line\">        <span class=\"number\">0xC9</span>, <span class=\"number\">0xFF</span>, <span class=\"number\">0xA3</span>, <span class=\"number\">0xDD</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x05</span>, <span class=\"number\">0x59</span>, <span class=\"number\">0xBF</span>,</span><br><span class=\"line\">        <span class=\"number\">0x0E</span>, <span class=\"number\">0x26</span>, <span class=\"number\">0x34</span>, <span class=\"number\">0x1F</span>, <span class=\"number\">0x13</span>, <span class=\"number\">0xE5</span>, <span class=\"number\">0xDC</span>, <span class=\"number\">0xF2</span>,</span><br><span class=\"line\">        <span class=\"number\">0xC6</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0x1E</span>, <span class=\"number\">0xE4</span>, <span class=\"number\">0x85</span>, <span class=\"number\">0xB7</span>, <span class=\"number\">0x39</span>, <span class=\"number\">0x8A</span>,</span><br><span class=\"line\">        <span class=\"number\">0xCA</span>, <span class=\"number\">0xED</span>, <span class=\"number\">0x9C</span>, <span class=\"number\">0xBB</span>, <span class=\"number\">0x56</span>, <span class=\"number\">0x23</span>, <span class=\"number\">0x1A</span>, <span class=\"number\">0xF0</span>,</span><br><span class=\"line\">        <span class=\"number\">0x32</span>, <span class=\"number\">0x58</span>, <span class=\"number\">0xB2</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0x33</span>, <span class=\"number\">0x6F</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0xBE</span>,</span><br><span class=\"line\">        <span class=\"number\">0x3F</span>, <span class=\"number\">0x6D</span>, <span class=\"number\">0x11</span>, <span class=\"number\">0x00</span>, <span class=\"number\">0xAD</span>, <span class=\"number\">0x5F</span>, <span class=\"number\">0xC3</span>, <span class=\"number\">0x81</span>,</span><br><span class=\"line\">        <span class=\"number\">0x25</span>, <span class=\"number\">0xA8</span>, <span class=\"number\">0xA0</span>, <span class=\"number\">0x9A</span>, <span class=\"number\">0xF6</span>, <span class=\"number\">0xF7</span>, <span class=\"number\">0x5E</span>, <span class=\"number\">0x99</span>,</span><br><span class=\"line\">        <span class=\"number\">0x22</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x4B</span>, <span class=\"number\">0xF9</span>, <span class=\"number\">0x3B</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x7A</span>, <span class=\"number\">0xB9</span>,</span><br><span class=\"line\">        <span class=\"number\">0x5C</span>, <span class=\"number\">0x69</span>, <span class=\"number\">0xF8</span>, <span class=\"number\">0x1C</span>, <span class=\"number\">0xDB</span>, <span class=\"number\">0x01</span>, <span class=\"number\">0x7D</span>, <span class=\"number\">0xFD</span>]</span><br><span class=\"line\">    S = [i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">256</span>)]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">256</span>):</span><br><span class=\"line\">        S[output[i]] = i</span><br><span class=\"line\">    j = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">256</span>):</span><br><span class=\"line\">        j = (j + S[i] + key[i % <span class=\"built_in\">len</span>(key)]) % <span class=\"number\">256</span></span><br><span class=\"line\">        S[i], S[j] = S[j], S[i]</span><br><span class=\"line\"></span><br><span class=\"line\">    i = j = t = <span class=\"number\">0</span></span><br><span class=\"line\">    plaintext = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> byte <span class=\"keyword\">in</span> ciphertext:</span><br><span class=\"line\">        i = (i + <span class=\"number\">1</span>) % <span class=\"number\">256</span></span><br><span class=\"line\">        j = (j + S[i]) % <span class=\"number\">256</span></span><br><span class=\"line\">        S[i], S[j] = S[j], S[i]</span><br><span class=\"line\">        k = S[(S[i] + S[j]) % <span class=\"number\">256</span>]</span><br><span class=\"line\">        plaintext.append(byte ^ k)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">bytes</span>(plaintext)</span><br><span class=\"line\"></span><br><span class=\"line\">encrypted_data = [<span class=\"number\">0x91</span>,<span class=\"number\">0xD3</span>,<span class=\"number\">0x76</span>,<span class=\"number\">0x77</span>,<span class=\"number\">0x6A</span>,<span class=\"number\">0xAA</span>,<span class=\"number\">0xAB</span>,<span class=\"number\">0x7F</span>,<span class=\"number\">0x53</span>,<span class=\"number\">0x59</span>,<span class=\"number\">0xCC</span>,<span class=\"number\">0x95</span>,<span class=\"number\">0xEF</span>,<span class=\"number\">0xF7</span>,<span class=\"number\">0x00</span>,<span class=\"number\">0x41</span>,<span class=\"number\">0x3F</span>,<span class=\"number\">0xC9</span>,<span class=\"number\">0x3B</span>,<span class=\"number\">0xAE</span>,<span class=\"number\">0xFF</span>,<span class=\"number\">0x6C</span>,<span class=\"number\">0x55</span>,<span class=\"number\">0x4E</span>,<span class=\"number\">0xFF</span>,<span class=\"number\">0x81</span>,<span class=\"number\">0x78</span>,<span class=\"number\">0xE0</span>,<span class=\"number\">0xFB</span>,<span class=\"number\">0x63</span>,<span class=\"number\">0x29</span>,<span class=\"number\">0x93</span>]</span><br><span class=\"line\">encryption_key = <span class=\"string\">b&#x27;baichaqingfengwuxianshi&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">decrypted_data = rc4_decrypt(encrypted_data, encryption_key)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(decrypted_data.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))<span class=\"comment\">#flag&#123;EteSN5vuj88wa1JXu3UVYLA8Bt&#125;</span></span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "CTF"
            ]
        },
        {
            "id": "https://zoyager.github.io/2024/06/07/Base%E5%AE%B6%E6%97%8F%E7%BC%96%E7%A0%81/",
            "url": "https://zoyager.github.io/2024/06/07/Base%E5%AE%B6%E6%97%8F%E7%BC%96%E7%A0%81/",
            "title": "'Base家族编码'",
            "date_published": "2024-06-07T12:50:26.000Z",
            "content_html": "<p>这是一篇关于 base 编码的相关博客～</p>\n<h2 id=\"base家族\"><a class=\"anchor\" href=\"#base家族\">#</a> Base 家族</h2>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202405072012952.png\" alt=\"\" /></p>\n<h3 id=\"base64编码\"><a class=\"anchor\" href=\"#base64编码\">#</a> Base64 编码</h3>\n<p>原理介绍：<br />\n1、将原始数据每三个字节作为一组，24bit<br />\n2、将 24bit 分为四组，每组 6 个 bit<br />\n3、在每组前面补加零，补全 4 组 8bit（原始数据从三字节变成四字节，增大近 90%）<br />\n4、根据 base64 码表对应符号</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：</span><br><span class=\"line\">文      本：\tM        a        n</span><br><span class=\"line\">ASCII 编码：\t<span class=\"number\">77</span>       <span class=\"number\">97</span>       <span class=\"number\">110</span></span><br><span class=\"line\">8bit  字节：\t<span class=\"number\">0</span>1001101 01100001 01101110</span><br><span class=\"line\">6bit  字节：\t<span class=\"number\">0</span>10011 <span class=\"number\">0</span>10110 <span class=\"number\">000</span>101 <span class=\"number\">101110</span></span><br><span class=\"line\">Base64索引：\t<span class=\"number\">19</span>     <span class=\"number\">22</span>     <span class=\"number\">5</span>      <span class=\"number\">46</span></span><br><span class=\"line\">Base64编码：\tT      W      F      u</span><br></pre></td></tr></table></figure></p>\n<p>当位数不足时如：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202405071027868.png\" alt=\"image-20240507102752808\" /></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">两个字节：两个字节共<span class=\"number\">16</span>个二进制位，依旧按照规则进行分组。此时总共<span class=\"number\">16</span>个二进制位，每<span class=\"number\">6</span>个一组，则第三组缺少<span class=\"number\">2</span>位，用<span class=\"number\">0</span>补齐，得到三个Base64编码，第四组完全没有数据则用“=”补上。因此，上图中“BC”转换之后为“QKM=”</span><br><span class=\"line\"></span><br><span class=\"line\">一个字节：一个字节共<span class=\"number\">8</span>个二进制位，依旧按照规则进行分组。此时共<span class=\"number\">8</span>个二进制位，每<span class=\"number\">6</span>个一组，则第二组缺少<span class=\"number\">4</span>位，用<span class=\"number\">0</span>补齐，得到两个Base64编码，而后面两组没有对应数据，都用“=”补上。因此，上图中“A”转换之后为“QQ==”</span><br></pre></td></tr></table></figure></p>\n<p>Base64 算法代码特征：</p>\n<p>A-Za-z0-9+/=</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202405071156161.png\" alt=\"image-20240507115604123\" /></p>\n<p>解码 Python 实现：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#新表</span></span><br><span class=\"line\">biao = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#密文</span></span><br><span class=\"line\">origin = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\">a = <span class=\"built_in\">str</span>.maketrans(biao,<span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(base64.b64decode(origin.translate(a)))</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"base32编码\"><a class=\"anchor\" href=\"#base32编码\">#</a> Base32 编码</h3>\n<p>介绍：Base32 编码使用 32 个 ASCII 字符对任何数据进行编码，将原数据二进制形式取指定位数转换为 ASCII 码。首先获取数据的二进制形式，将其串联起来，每 5 个比特为一组进行切分，每一组内的 5 个比特可转换到指定的 32 个 ASCII 字符中的一个，将转换后的 ASCII 字符连接起来，就是编码后的数据。</p>\n<p>base32 编码表（A-Z2-7）：</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/ZoyagEr/blogimage@main/img/202405072021690.png\" alt=\"image-20240507202120619\" /></p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//编码实现</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> date[<span class=\"number\">100</span>]=<span class=\"string\">&quot;bacde&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">char</span> code[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> table[<span class=\"number\">33</span>]=<span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ234567&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> len_date,len_code,i,j,num;</span><br><span class=\"line\"></span><br><span class=\"line\">    len_date=<span class=\"built_in\">strlen</span>(date);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;length of date=%d\\n&quot;</span>,len_date);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;date: %s\\n&quot;</span>,date);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(len_date%<span class=\"number\">5</span>!=<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        len_code=(len_date/<span class=\"number\">5</span>+<span class=\"number\">1</span>)*<span class=\"number\">8</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        len_code=(len_date/<span class=\"number\">5</span>)*<span class=\"number\">8</span>; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">//关键代码块——————————————————————————————————————————————————————————————</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;i&lt;len_code;i+=<span class=\"number\">5</span>,j+=<span class=\"number\">8</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        code[j]=table[date[i]&gt;&gt;<span class=\"number\">3</span>];</span><br><span class=\"line\">        code[j+<span class=\"number\">1</span>]=table[((date[i]&amp;<span class=\"number\">7</span>)&lt;&lt;<span class=\"number\">2</span>)|(date[i+<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">6</span>)];</span><br><span class=\"line\">        code[j+<span class=\"number\">2</span>]=table[(date[i+<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)&amp;<span class=\"number\">31</span>];</span><br><span class=\"line\">        code[j+<span class=\"number\">3</span>]=table[(date[i+<span class=\"number\">1</span>]&amp;<span class=\"number\">1</span>)&lt;&lt;<span class=\"number\">4</span>|date[i+<span class=\"number\">2</span>]&gt;&gt;<span class=\"number\">4</span>];</span><br><span class=\"line\">        code[j+<span class=\"number\">4</span>]=table[(date[i+<span class=\"number\">2</span>]&amp;<span class=\"number\">15</span>)&lt;&lt;<span class=\"number\">1</span>|date[i+<span class=\"number\">3</span>]&gt;&gt;<span class=\"number\">7</span>];</span><br><span class=\"line\">        code[j+<span class=\"number\">5</span>]=table[(date[i+<span class=\"number\">3</span>]&gt;&gt;<span class=\"number\">2</span>)&amp;<span class=\"number\">31</span>];</span><br><span class=\"line\">        code[j+<span class=\"number\">6</span>]=table[(date[i+<span class=\"number\">3</span>]&amp;<span class=\"number\">3</span>)&lt;&lt;<span class=\"number\">3</span>|date[i+<span class=\"number\">4</span>]&gt;&gt;<span class=\"number\">5</span>];</span><br><span class=\"line\">        code[j+<span class=\"number\">7</span>]=table[date[i+<span class=\"number\">4</span>]&amp;<span class=\"number\">31</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">//————————————————————————————————————————————————————————————————————————-</span></span><br><span class=\"line\">    num=len_date%<span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(num)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>: </span><br><span class=\"line\">            <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">8</span>-num;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                code[len_code-i]=<span class=\"string\">&#x27;=&#x27;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">7</span>-num;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                code[len_code-i]=<span class=\"string\">&#x27;=&#x27;</span>;</span><br><span class=\"line\">            &#125;        </span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">7</span>-num;i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                code[len_code-i]=<span class=\"string\">&#x27;=&#x27;</span>;</span><br><span class=\"line\">            &#125;        </span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">            code[len_code<span class=\"number\">-1</span>]=<span class=\"string\">&#x27;=&#x27;</span>;    </span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;length of code =%d\\n&quot;</span>,len_code);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;the code:&quot;</span>); </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;len_code;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>,code[i]);</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"base16编码\"><a class=\"anchor\" href=\"#base16编码\">#</a> Base16 编码</h3>\n<p>介绍：Base16 编码就是将 ASCII 字符集中可打印的字符 (数字 0-9 和字母 A-F) 对应的二进制字节数据进行编码，编码的方式：先将数据 (根据 ASCII 编码，UTF-8 编码等) 转成对应的二进制数，不足 8 比特位高位补 0. 然后将所有的二进制全部串起来，4 个二进制位为一组，转化成对应十进制数。</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> date[<span class=\"number\">100</span>]=<span class=\"string\">&quot;bacde&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">char</span> code[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> table[<span class=\"number\">17</span>]=<span class=\"string\">&quot;0123456789ABCDEF&quot;</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> len_date,len_code,i,j,num;</span><br><span class=\"line\"></span><br><span class=\"line\">    len_date=<span class=\"built_in\">strlen</span>(date);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;length of date :\\n%d\\n&quot;</span>,len_date);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;date:\\n%s\\n&quot;</span>,date);</span><br><span class=\"line\">    len_code=len_date*<span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"comment\">//————————————————————————————————————————————————————————————————————</span></span><br><span class=\"line\">   <span class=\"comment\">//关键代码块</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;i&lt;len_date;i++,j+=<span class=\"number\">2</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        code[j]=table[date[i]&gt;&gt;<span class=\"number\">4</span>];</span><br><span class=\"line\">        code[j+<span class=\"number\">1</span>]=table[date[i]&amp;<span class=\"number\">15</span>]; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">//——————————————————————————————————————————————————————————————————————</span></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;length of code:\\n%d\\n&quot;</span>,len_code);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;code: \\n&quot;</span>); </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;len_code;i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%c&quot;</span>,code[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"其他简述\"><a class=\"anchor\" href=\"#其他简述\">#</a> 其他简述</h3>\n<h4 id=\"base58编码\"><a class=\"anchor\" href=\"#base58编码\">#</a> Base58 编码：</h4>\n<p>Base58 是用于比特币（Bitcoin）中使用的一种独特的编码方式，主要用于产生 Bitcoin 的钱包地址。相比 Base64，Base58 不使用数字 &quot;0&quot;，字母大写 &quot;O&quot;，字母大写 &quot;I&quot;，和字母小写 &quot;l&quot;，以及 &quot;+&quot; 和 &quot;/&quot; 符号。</p>\n<p>Base58 字母表：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"base62\"><a class=\"anchor\" href=\"#base62\">#</a> Base62</h4>\n<p>Base62 使用了 62 个字符编码，包括 0-9，a-z，A-Z。</p>\n<pre><code>例：编码前：这是一个例子\n \n    编码后：UxIZABUpAxEZUhIxw1UhIxEFUhIVwJUlERA1\n</code></pre>\n<h4 id=\"base85\"><a class=\"anchor\" href=\"#base85\">#</a> Base85</h4>\n<p>Base85 是一种类似于 Base64 的二进制文本编码形式，通过使用五个 ASCII 字符来表示四个字节的二进制数据。例如，它用于将图像嵌入到 Adobe PDF 文件中。</p>\n<p>Base85 包含下列字符：</p>\n<p>$%()*+,-./0123456789:;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~</p>\n<pre><code>例：编码前：这是一个例子\n \n    编码后：keEPJR'5S\\JE45?jM$Q6XcN\n</code></pre>\n<h4 id=\"base91\"><a class=\"anchor\" href=\"#base91\">#</a> Base91</h4>\n<p>顾名思义，Base91 需要 91 个字符来表示 ASCII 编码的二进制数据。</p>\n<p>Base91 包含下列字符：</p>\n<p>!&quot;#$%&amp;()*+,./0123456789:;&lt;=&gt;？@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~</p>\n<pre><code>例：编码前：这是一个例子\n \n    编码后：*~v6uRhaugfz5el@Dh!q&amp;LB\n</code></pre>\n<h4 id=\"base92\"><a class=\"anchor\" href=\"#base92\">#</a> Base92</h4>\n<p>Base92 是用 92 个可打印字符表示 8 位二进制数据 (含无法显示 打印字符) 的编码方式。</p>\n<p>Base92 包含下列字符：</p>\n<p>!#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_abcdefghijklmnopqrstuvwxyz{|}~</p>\n<pre><code>例：编码前：这是一个例子\n \n    编码后：toxRX&lt;@w&lt;U&quot;[27@\\f!Mpc*\n</code></pre>\n<h4 id=\"base94\"><a class=\"anchor\" href=\"#base94\">#</a> Base94</h4>\n<p>Base94 是用 94 个可打印字符表示 8 位二进制数据 (含无法显示 打印字符) 的编码方式。</p>\n<p>Base94 包含下列字符：</p>\n<p>!&quot;#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~</p>\n<p>10.Base100</p>\n<h4 id=\"base100编码\"><a class=\"anchor\" href=\"#base100编码\">#</a> Base100 编码</h4>\n<p>（又名：Emoji 表情符号编码 / 解码），可将文本内容编码为 Emoji 表情符号；同时也可以将编码后的 Emoji 表情符号内容解码为文本。</p>\n<pre><code>例：编码前：这是一个例子\n \n    编码后：📟💶💐📝💏💦📛💯👷📛💯💡📛💵💂📜💤💇\n</code></pre>\n<h4 id=\"base128\"><a class=\"anchor\" href=\"#base128\">#</a> Base128</h4>\n<p>Base128 是用 128 个字符表示 8 位二进制数据的编码方式。</p>\n<p>Base128 包含下列字符：</p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">0123456789</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\\xb5\\xb6\\xb7\\xbc\\xbd\\xbe\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "CTF"
            ]
        },
        {
            "id": "https://zoyager.github.io/2024/06/03/HB/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E8%AE%B0%E5%BD%95/",
            "url": "https://zoyager.github.io/2024/06/03/HB/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E8%AE%B0%E5%BD%95/",
            "title": "'汇编语言记录'",
            "date_published": "2024-06-03T13:38:24.000Z",
            "content_html": "<p>这是一篇关于汇编代码的解释文章～</p>\n<p>源码：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:0000000140001070 ; <span class=\"built_in\">int</span> __fastcall main(<span class=\"built_in\">int</span> argc, const char **argv, const char **envp)</span><br><span class=\"line\">.text:0000000140001070 main            proc near               ; CODE XREF: __scrt_common_main_seh(void)+<span class=\"number\">107</span>↓p</span><br><span class=\"line\">.text:0000000140001070                                         ; DATA XREF: .pdata:000000014000400C↓o</span><br><span class=\"line\">.text:0000000140001070</span><br><span class=\"line\">.text:0000000140001070 var_88          = xmmword ptr -88h</span><br><span class=\"line\">.text:0000000140001070 var_18          = qword ptr -18h</span><br><span class=\"line\">.text:0000000140001070 arg_0           = qword ptr  <span class=\"number\">8</span></span><br><span class=\"line\">.text:0000000140001070</span><br><span class=\"line\">.text:0000000140001070 ; __unwind &#123; // __GSHandlerCheck</span><br><span class=\"line\">.text:0000000140001070                 mov     [rsp+arg_0], rbx</span><br><span class=\"line\">.text:0000000140001075                 push    rdi</span><br><span class=\"line\">.text:0000000140001076                 sub     rsp, 0A0h</span><br><span class=\"line\">.text:000000014000107D                 mov     rax, cs:__security_cookie</span><br><span class=\"line\">.text:0000000140001084                 xor     rax, rsp</span><br><span class=\"line\">.text:0000000140001087                 mov     [rsp+0A8h+var_18], rax</span><br><span class=\"line\">.text:000000014000108F                 lea     rcx, [rsp+0A8h+var_88]</span><br><span class=\"line\">.text:0000000140001094                 call    cs:gets</span><br><span class=\"line\">.text:000000014000109A                 movdqa  xmm0, cs:xmmword_1400022A0</span><br><span class=\"line\">.text:00000001400010A2                 mov     eax, 10h</span><br><span class=\"line\">.text:00000001400010A7                 xorps   xmm0, [rsp+0A8h+var_88]</span><br><span class=\"line\">.text:00000001400010AC                 xorps   xmm0, cs:xmmword_1400022B0</span><br><span class=\"line\">.text:00000001400010B3                 movdqu  [rsp+0A8h+var_88], xmm0</span><br><span class=\"line\">.text:00000001400010B9                 nop     dword ptr [rax+00000000h]</span><br><span class=\"line\">.text:00000001400010C0</span><br><span class=\"line\">.text:00000001400010C0 loc_1400010C0:                          ; CODE XREF: main+5C↓j</span><br><span class=\"line\">.text:00000001400010C0                 xor     byte ptr [rsp+rax+0A8h+var_88], 1Eh</span><br><span class=\"line\">.text:00000001400010C5                 inc     rax</span><br><span class=\"line\">.text:00000001400010C8                 cmp     rax, 16h</span><br><span class=\"line\">.text:00000001400010CC                 jl      short loc_1400010C0</span><br><span class=\"line\">.text:00000001400010CE                 xor     ebx, ebx</span><br><span class=\"line\">.text:00000001400010D0                 lea     rdi, unk_140002280      ；  <span class=\"number\">0x78</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x7F</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0x6A</span>, <span class=\"number\">0x7F</span>, <span class=\"number\">0x7D</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x71</span>,  <span class=\"number\">0x2E</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x2F</span>, <span class=\"number\">0x6D</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7A</span>,  <span class=\"number\">0x6D</span>, <span class=\"number\">0x63</span></span><br><span class=\"line\">.text:00000001400010D7                 nop     word ptr [rax+rax+00000000h]</span><br><span class=\"line\">.text:<span class=\"number\">00000001400010E0</span></span><br><span class=\"line\">.text:<span class=\"number\">00000001400010E0</span> loc_1400010E0:                          ; CODE XREF: main+8D↓j</span><br><span class=\"line\">.text:<span class=\"number\">00000001400010E0</span>                 movzx   eax, byte ptr [rbx+rdi]</span><br><span class=\"line\">.text:<span class=\"number\">00000001400010E4</span>                 cmp     byte ptr [rsp+rbx+0A8h+var_88], al</span><br><span class=\"line\">.text:<span class=\"number\">00000001400010E8</span>                 jnz     short loc_1400010F6</span><br><span class=\"line\">.text:00000001400010EA                 lea     rcx, Format     ; <span class=\"string\">&quot;your flag is true&quot;</span></span><br><span class=\"line\">.text:00000001400010F1                 call    sub_140001010</span><br><span class=\"line\">.text:00000001400010F6</span><br><span class=\"line\">.text:00000001400010F6 loc_1400010F6:                          ; CODE XREF: main+<span class=\"number\">78</span>↑j</span><br><span class=\"line\">.text:00000001400010F6                 inc     rbx</span><br><span class=\"line\">.text:00000001400010F9                 cmp     rbx, 16h</span><br><span class=\"line\">.text:00000001400010FD                 jl      short loc_1400010E0</span><br><span class=\"line\">.text:00000001400010FF                 lea     rcx, Command    ; <span class=\"string\">&quot;pause&quot;</span></span><br><span class=\"line\">.text:0000000140001106                 call    cs:system</span><br><span class=\"line\">.text:000000014000110C                 xor     eax, eax</span><br><span class=\"line\">.text:000000014000110E                 mov     rcx, [rsp+0A8h+var_18]</span><br><span class=\"line\">.text:0000000140001116                 xor     rcx, rsp        ; StackCookie</span><br><span class=\"line\">.text:0000000140001119                 call    __security_check_cookie</span><br><span class=\"line\">.text:000000014000111E                 mov     rbx, [rsp+0A8h+arg_0]</span><br><span class=\"line\">.text:0000000140001126                 add     rsp, 0A0h</span><br><span class=\"line\">.text:000000014000112D                 pop     rdi</span><br><span class=\"line\">.text:000000014000112E                 retn</span><br><span class=\"line\">.text:000000014000112E ; &#125; // starts at <span class=\"number\">140001070</span></span><br><span class=\"line\">.text:000000014000112E main            endp</span><br><span class=\"line\">.text:000000014000112E</span><br><span class=\"line\">.text:000000014000112E ; ---------------------------------------------------------------------------</span><br></pre></td></tr></table></figure></p>\n<p>具体解释为：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">函数签名</span><br><span class=\"line\"></span><br><span class=\"line\">; <span class=\"built_in\">int</span> __fastcall main(<span class=\"built_in\">int</span> argc, const char **argv, const char **envp)</span><br><span class=\"line\"></span><br><span class=\"line\">这里的汇编代码开头表示这是一个C语言的main函数。在x86-<span class=\"number\">64</span>汇编中，函数参数通常通过寄存器传递，argc 存放在 rdi，argv 存放在 rsi，envp 存放在 rdx 中。</span><br><span class=\"line\"></span><br><span class=\"line\">栈帧设置</span><br><span class=\"line\"></span><br><span class=\"line\">.text:0000000140001070 main proc near</span><br><span class=\"line\">.text:0000000140001070</span><br><span class=\"line\">.text:0000000140001070 var_88  = xmmword ptr -88h</span><br><span class=\"line\">.text:0000000140001070 var_18  = qword ptr -18h</span><br><span class=\"line\">.text:0000000140001070 arg_0   = qword ptr  <span class=\"number\">8</span></span><br><span class=\"line\">.text:0000000140001070</span><br><span class=\"line\"></span><br><span class=\"line\">这部分代码定义了一些局部变量的存储空间。var_88 是一个 <span class=\"number\">128</span> 位的 XMM 寄存器（用于 SIMD 操作），var_18 是一个 <span class=\"number\">8</span> 字节的 qword，arg_0 是第一个参数，通常是 argc。</span><br><span class=\"line\">栈保护和安全性检查</span><br><span class=\"line\"></span><br><span class=\"line\">.text:0000000140001070 ; __unwind &#123; // __GSHandlerCheck</span><br><span class=\"line\">.text:0000000140001070 mov     [rsp+arg_0], rbx</span><br><span class=\"line\">.text:0000000140001075 push    rdi</span><br><span class=\"line\">.text:0000000140001076 sub     rsp, 0A0h</span><br><span class=\"line\">.text:000000014000107D mov     rax, cs:__security_cookie</span><br><span class=\"line\">.text:0000000140001084 xor     rax, rsp</span><br><span class=\"line\">.text:0000000140001087 mov     [rsp+0A8h+var_18], rax</span><br><span class=\"line\"></span><br><span class=\"line\">这段代码是用来设置堆栈保护和安全性检查。它保存了寄存器 rbx 到堆栈上，然后压入 rdi，分配了 <span class=\"number\">0xA0</span> 字节的局部堆栈空间，计算了安全性 cookie 并进行了异或操作。</span><br><span class=\"line\">用户输入与处理</span><br><span class=\"line\"></span><br><span class=\"line\">.text:0000000140001094 lea     rcx, [rsp+0A8h+var_88]</span><br><span class=\"line\">.text:0000000140001094 call    cs:gets</span><br><span class=\"line\"></span><br><span class=\"line\">这里使用 gets 函数来接收用户的输入，存储在 var_88 指向的内存位置中。</span><br><span class=\"line\">数据处理和比较</span><br><span class=\"line\"></span><br><span class=\"line\">.text:000000014000109A movdqa  xmm0, cs:xmmword_1400022A0</span><br><span class=\"line\">.text:00000001400010A7 xorps   xmm0, [rsp+0A8h+var_88]</span><br><span class=\"line\">.text:00000001400010AC xorps   xmm0, cs:xmmword_1400022B0</span><br><span class=\"line\">.text:00000001400010B3 movdqu  [rsp+0A8h+var_88], xmm0</span><br><span class=\"line\"></span><br><span class=\"line\">这部分代码将从内存加载的常量数据与用户输入进行异或操作，并存储结果在 var_88 中。</span><br><span class=\"line\">循环处理</span><br><span class=\"line\"></span><br><span class=\"line\">.text:00000001400010C0 loc_1400010C0:</span><br><span class=\"line\">.text:00000001400010C0 xor     byte ptr [rsp+rax+0A8h+var_88], 1Eh</span><br><span class=\"line\">.text:00000001400010C5 inc     rax</span><br><span class=\"line\">.text:00000001400010C8 cmp     rax, 16h</span><br><span class=\"line\">.text:00000001400010CC jl      short loc_1400010C0</span><br><span class=\"line\"></span><br><span class=\"line\">这段代码对存储的数据进行循环处理，每个字节与 <span class=\"number\">0x1E</span> 进行异或操作，循环次数为 <span class=\"number\">0x16</span>（<span class=\"number\">22</span> 次）。</span><br><span class=\"line\">字符串比较与输出</span><br><span class=\"line\"></span><br><span class=\"line\">.text:<span class=\"number\">00000001400010E0</span> loc_1400010E0:</span><br><span class=\"line\">.text:<span class=\"number\">00000001400010E0</span> movzx   eax, byte ptr [rbx+rdi]</span><br><span class=\"line\">.text:<span class=\"number\">00000001400010E4</span> cmp     byte ptr [rsp+rbx+0A8h+var_88], al</span><br><span class=\"line\">.text:<span class=\"number\">00000001400010E8</span> jnz     short loc_1400010F6</span><br><span class=\"line\">.text:00000001400010EA lea     rcx, Format ; <span class=\"string\">&quot;your flag is true&quot;</span></span><br><span class=\"line\">.text:00000001400010F1 call    sub_140001010</span><br><span class=\"line\"></span><br><span class=\"line\">这部分代码逐字节比较用户输入的内容与预设的数据（Format），如果相同则调用输出函数显示 <span class=\"string\">&quot;your flag is true&quot;</span>。</span><br><span class=\"line\">系统调用</span><br><span class=\"line\"></span><br><span class=\"line\">.text:00000001400010FF lea     rcx, Command ; <span class=\"string\">&quot;pause&quot;</span></span><br><span class=\"line\">.text:0000000140001106 call    cs:system</span><br><span class=\"line\"></span><br><span class=\"line\">最后，程序调用系统命令 pause 来暂停程序运行。</span><br><span class=\"line\">函数结束</span><br><span class=\"line\"></span><br><span class=\"line\">.text:000000014000110C xor     eax, eax</span><br><span class=\"line\">.text:000000014000110E mov     rcx, [rsp+0A8h+var_18]</span><br><span class=\"line\">.text:0000000140001116 xor     rcx, rsp</span><br><span class=\"line\">.text:0000000140001119 call    __security_check_cookie</span><br><span class=\"line\">.text:000000014000111E mov     rbx, [rsp+0A8h+arg_0]</span><br><span class=\"line\">.text:0000000140001126 add     rsp, 0A0h</span><br><span class=\"line\">.text:000000014000112D pop     rdi</span><br><span class=\"line\">.text:000000014000112E retn</span><br><span class=\"line\"></span><br><span class=\"line\">最后，程序执行一些清理工作，包括栈空间的回收和寄存器的恢复，然后返回到调用者。</span><br></pre></td></tr></table></figure></p>\n<p>所以这段汇编代码是将数据与 0x1E 进行异或，所以脚本如下：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result = [<span class=\"number\">0x78</span>, <span class=\"number\">0x72</span>, <span class=\"number\">0x7F</span>, <span class=\"number\">0x79</span>, <span class=\"number\">0x65</span>, <span class=\"number\">0x6A</span>, <span class=\"number\">0x7F</span>, <span class=\"number\">0x7D</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x71</span>,  <span class=\"number\">0x2E</span>, <span class=\"number\">0x71</span>, <span class=\"number\">0x2E</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x2F</span>, <span class=\"number\">0x6D</span>, <span class=\"number\">0x41</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x67</span>, <span class=\"number\">0x7A</span>,  <span class=\"number\">0x6D</span>, <span class=\"number\">0x63</span>]</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(i^<span class=\"number\">0x1E</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)<span class=\"comment\">#flag&#123;tac0o0o0_1s_yyds&#125;</span></span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "HB"
            ]
        },
        {
            "id": "https://zoyager.github.io/2024/06/01/PYTHON/python%E8%AE%B0%E5%BD%95/",
            "url": "https://zoyager.github.io/2024/06/01/PYTHON/python%E8%AE%B0%E5%BD%95/",
            "title": "'python记录'",
            "date_published": "2024-06-01T00:54:49.000Z",
            "content_html": "<p>这是一篇 python 学习过程中的练习的习题～</p>\n<p>其中含有代码和相关内容的补充～</p>\n<h2 id=\"数据传输到文件\"><a class=\"anchor\" href=\"#数据传输到文件\">#</a> 数据传输到文件</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file = <span class=\"built_in\">open</span>(file,mode=<span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># r 读取</span></span><br><span class=\"line\"><span class=\"comment\"># w 打开文件写入，覆盖原内容</span></span><br><span class=\"line\"><span class=\"comment\"># a 打开文件写入，新内容到后面</span></span><br><span class=\"line\"><span class=\"comment\"># x 打开新文件供写入</span></span><br><span class=\"line\"><span class=\"comment\"># b 二进制文件模式</span></span><br><span class=\"line\"><span class=\"comment\"># t 默认</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"找数字\"><a class=\"anchor\" href=\"#找数字\">#</a> 找数字</h2>\n<p>编写一个程序，查找所有此类数字，它们可以被 7 整除，但不能是 5 的倍数（在 2000 和 3200 之间（均包括在内））。获得的数字应以逗号分隔的顺序打印在一行上。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2000</span>, <span class=\"number\">3201</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i%<span class=\"number\">7</span>==<span class=\"number\">0</span>) <span class=\"keyword\">and</span> (i%<span class=\"number\">5</span>!=<span class=\"number\">0</span>):</span><br><span class=\"line\">        arr.append(<span class=\"built_in\">str</span>(i))<span class=\"comment\">#join函数连接字符串数组</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&#x27;,&#x27;</span>.join(arr)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"join函数\"><a class=\"anchor\" href=\"#join函数\">#</a> join () 函数</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python中有join()和os.path.join()两个函数，具体作用如下：</span><br><span class=\"line\"></span><br><span class=\"line\">     join()：连接字符串数组。将字符串、元组、列表中的元素以指定的字符(分隔符)连接生成一个新的字符串</span><br><span class=\"line\">     os.path.join()：将多个路径组合后返回</span><br><span class=\"line\"></span><br><span class=\"line\">函数说明</span><br><span class=\"line\"></span><br><span class=\"line\">1、join()函数</span><br><span class=\"line\"></span><br><span class=\"line\">语法：  &#x27;sep&#x27;.join(seq)</span><br><span class=\"line\"></span><br><span class=\"line\">参数说明</span><br><span class=\"line\"></span><br><span class=\"line\">    sep：分隔符。可以为空</span><br><span class=\"line\">    seq：要连接的元素序列、字符串、元组、字典</span><br><span class=\"line\"></span><br><span class=\"line\">上面的语法即：以sep作为分隔符，将seq所有的元素合并成一个新的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">返回值：返回一个以分隔符sep连接各个元素后生成的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">2、os.path.join()函数</span><br><span class=\"line\"></span><br><span class=\"line\">语法：  os.path.join(path1[,path2[,......]])</span><br><span class=\"line\"></span><br><span class=\"line\">返回值：将多个路径组合后返回</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"阶乘\"><a class=\"anchor\" href=\"#阶乘\">#</a> 阶乘</h2>\n<p>编写一个程序，可以计算给定数字的阶乘，结果应以逗号分隔的顺序打印在一行上，假设向程序提供了以下输入：8 然后，输出应为：40320</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr = []</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">factorial</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> n == <span class=\"number\">0</span> <span class=\"keyword\">or</span> n == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n * factorial(n - <span class=\"number\">1</span>)</span><br><span class=\"line\">num = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(num):</span><br><span class=\"line\">    arr.append(factorial(i))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>.join(<span class=\"built_in\">str</span>(arr)))</span><br></pre></td></tr></table></figure></p>\n<p>程序内置函数 factorial () 计算阶乘</p>\n<h2 id=\"无重复数字\"><a class=\"anchor\" href=\"#无重复数字\">#</a> 无重复数字</h2>\n<p>有四个数字：1、2、3、4，能组成多少个互不相同且无重复数字的三位数？各是多少？</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#不重复数字</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">serect</span>(<span class=\"params\">a,b,c</span>) :</span><br><span class=\"line\">    <span class=\"keyword\">if</span> a!=b <span class=\"keyword\">and</span> b!=c <span class=\"keyword\">and</span> a!=c:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">arr1 = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;</span><br><span class=\"line\">arr2 = []</span><br><span class=\"line\">total =<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> arr1:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> arr1:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> arr1:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> serect(i,j,k):</span><br><span class=\"line\">                number = i*<span class=\"number\">100</span>+j*<span class=\"number\">10</span>+k</span><br><span class=\"line\">                total += <span class=\"number\">1</span></span><br><span class=\"line\">                arr2.append(number)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;total = %d&quot;</span>%total)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;&#x27;</span>.join(<span class=\"built_in\">str</span>(arr2)))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"平方数\"><a class=\"anchor\" href=\"#平方数\">#</a> 平方数</h2>\n<p>一个整数，它加上 100 后是一个完全平方数，再加上 168 又是一个完全平方数，请问该数是多少？</p>\n<p>思路：</p>\n<p>最坏的结果是 n 的平方与 (n+1) 的平方刚好差 168，由于是平方的关系，不可能存在比这更大的间隙。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\">n = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">pow</span>(n+<span class=\"number\">1</span>,<span class=\"number\">2</span>)-<span class=\"built_in\">pow</span>(n,<span class=\"number\">2</span>) &lt;= <span class=\"number\">168</span>:</span><br><span class=\"line\">    n += <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>((n+<span class=\"number\">1</span>)**<span class=\"number\">2</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> math.sqrt(i+<span class=\"number\">100</span>) == <span class=\"built_in\">int</span>(math.sqrt(i+<span class=\"number\">100</span>)) <span class=\"keyword\">and</span> math.sqrt(i+<span class=\"number\">168</span>) == <span class=\"built_in\">int</span>(math.sqrt(i+<span class=\"number\">168</span>)) :</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"哪一天\"><a class=\"anchor\" href=\"#哪一天\">#</a> 哪一天</h2>\n<p>输入某年某月某日，判断这一天是这一年的第几天？</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">happyyear</span>(<span class=\"params\">year</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(year%<span class=\"number\">400</span>==<span class=\"number\">0</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> year%<span class=\"number\">100</span> != <span class=\"number\">0</span> <span class=\"keyword\">and</span> year % <span class=\"number\">4</span> == <span class=\"number\">0</span> :</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> :</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">yeardays = [<span class=\"number\">31</span>,<span class=\"number\">28</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>,<span class=\"number\">30</span>,<span class=\"number\">31</span>]</span><br><span class=\"line\">days =<span class=\"number\">0</span></span><br><span class=\"line\">year = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入年份：&quot;</span>))</span><br><span class=\"line\">month = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入月份：&quot;</span>))</span><br><span class=\"line\">day = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入日期：&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">if</span> happyyear(year) :</span><br><span class=\"line\">    yeardays[<span class=\"number\">1</span>] += <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(month-<span class=\"number\">1</span>):</span><br><span class=\"line\">    days += yeardays[i]</span><br><span class=\"line\">days += day</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;今天是今年的第%d天&quot;</span>%days)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"斐波那契数列i\"><a class=\"anchor\" href=\"#斐波那契数列i\">#</a> 斐波那契数列 I</h2>\n<p>斐波那契数列</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Fib</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> n &lt;= <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Fib(n-<span class=\"number\">1</span>)+Fib(n-<span class=\"number\">2</span>)</span><br><span class=\"line\">arr = []</span><br><span class=\"line\">num = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,num):</span><br><span class=\"line\">    arr.append(Fib(i))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(arr)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"九九乘法表\"><a class=\"anchor\" href=\"#九九乘法表\">#</a> 九九乘法表</h2>\n<p>九九乘法表</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">10</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,i+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;%d*%d=%d\\t&quot;</span>%(j,i,i*j),end=<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"暂停一秒输出\"><a class=\"anchor\" href=\"#暂停一秒输出\">#</a> 暂停一秒输出</h2>\n<p>暂停一秒输出</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#程序分析 使用 time 模块的 sleep() 函数。</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(<span class=\"built_in\">int</span>(time.time())))</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"time模块\"><a class=\"anchor\" href=\"#time模块\">#</a> time 模块</h3>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>获取时间戳</span><br><span class=\"line\">python时间戳取整为<span class=\"number\">10</span>位，单位为s</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.time())  <span class=\"comment\"># 1621235477.11</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">int</span>(time.time()))  <span class=\"comment\"># 1621235477</span></span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2.</span>休眠</span><br><span class=\"line\">程序停止运行<span class=\"number\">3</span>秒</span><br><span class=\"line\">time.sleep(<span class=\"number\">3</span>)</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">3.</span>获取时间元组</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#显示当前时间的时间元组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.localtime())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.localtime(time.time())) <span class=\"comment\"># 同time.localtime()</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#显示一个小时前的时间元组</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(time.localtime(time.time()-<span class=\"number\">3600</span>))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"格式化时间\"><a class=\"anchor\" href=\"#格式化时间\">#</a> 格式化时间</h2>\n<p>暂停一秒输出，并格式化当前时间。</p>\n<p><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(time.strftime(<span class=\"string\">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>,time.localtime(time.time())))</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"生兔子\"><a class=\"anchor\" href=\"#生兔子\">#</a> 生兔子</h2>\n<p>有一对兔子，从出生后第 3 个月起每个月都生一对兔子，小兔子长到第三个月后每个月又生一对兔子，假如兔子都不死，问每个月的兔子总数为多少？</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">month=<span class=\"number\">12</span></span><br><span class=\"line\">month_1=<span class=\"number\">1</span></span><br><span class=\"line\">month_2=<span class=\"number\">0</span></span><br><span class=\"line\">month_3=<span class=\"number\">0</span></span><br><span class=\"line\">month_elder=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(month):</span><br><span class=\"line\">    month_1,month_2,month_3,month_elder=month_elder+month_3,month_1,month_2,month_elder+month_3</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;第%d个月共&#x27;</span>%(i+<span class=\"number\">1</span>),month_1+month_2+month_3+month_elder,<span class=\"string\">&#x27;对兔子&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;其中1月兔：&#x27;</span>,month_1)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;其中2月兔：&#x27;</span>,month_2)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;其中3月兔：&#x27;</span>,month_3)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;其中成年兔：&#x27;</span>,month_elder)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"统计字符\"><a class=\"anchor\" href=\"#统计字符\">#</a> 统计字符</h2>\n<p>输入一行字符，分别统计出其中英文字母、空格、数字和其它字符的个数。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#程序分析 利用 while 或 for 语句,条件为输入的字符不为 ‘\\n’。</span></span><br><span class=\"line\">string=<span class=\"built_in\">input</span>(<span class=\"string\">&quot;输入字符串：&quot;</span>)</span><br><span class=\"line\">alp=<span class=\"number\">0</span></span><br><span class=\"line\">num=<span class=\"number\">0</span></span><br><span class=\"line\">spa=<span class=\"number\">0</span></span><br><span class=\"line\">oth=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(string)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> string[i].isspace():</span><br><span class=\"line\">        spa+=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> string[i].isdigit():</span><br><span class=\"line\">        num+=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> string[i].isalpha():</span><br><span class=\"line\">        alp+=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        oth+=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;space: &#x27;</span>,spa)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;digit: &#x27;</span>,num)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;alpha: &#x27;</span>,alp)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;other: &#x27;</span>,oth)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"字符串处理函数\"><a class=\"anchor\" href=\"#字符串处理函数\">#</a> 字符串处理函数</h3>\n<h4 id=\"字符串查找\"><a class=\"anchor\" href=\"#字符串查找\">#</a> 字符串查找</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str1 = <span class=\"string\">&quot;my name is qlee，what your name?&quot;</span></span><br><span class=\"line\">str2 = <span class=\"string\">&quot;name&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str1.find(str2))<span class=\"comment\">#全部查找</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str1.find(str2,<span class=\"number\">5</span>))<span class=\"comment\">#从第5个元素开始查找</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str1.find(str2,<span class=\"number\">35</span>))<span class=\"comment\"># 从第35个元素开始查找，超过元素索引或者没找到，不会报错</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"字符串大小转换\"><a class=\"anchor\" href=\"#字符串大小转换\">#</a> 字符串大小转换</h4>\n<table>\n<thead>\n<tr>\n<th>upper</th>\n<th>将字符串中所有元素都转为大写</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>lower</td>\n<td>将字符串中所有元素都转为小写</td>\n</tr>\n<tr>\n<td>swapcase</td>\n<td>交换大小写。大写转为小写，小写转为大写</td>\n</tr>\n<tr>\n<td>capitalize</td>\n<td>第一个大写，其余小写</td>\n</tr>\n<tr>\n<td>title</td>\n<td>每个单词的第一次字符大写，其余均为小写</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"字符串对齐\"><a class=\"anchor\" href=\"#字符串对齐\">#</a> 字符串对齐</h4>\n<p>center (width, fillchar)：返回一个指定的宽度 width 居中的字符串，fillchar 为填充的字符，默认为空格。</p>\n<p>ljust (width [, fillchar])：返回一个原字符串左对齐，并使用 fillchar 填充至长度 width 的新字符串，fillchar 默认为空格。</p>\n<p>rjust (width,[, fillchar])：返回一个原字符串右对齐，并使用 fillchar (默认空格）填充至长度 width 的新字符串</p>\n<p>zfill (width)：返回长度为 width 的字符串，原字符串右对齐，前面填充 0</p>\n<h4 id=\"合并同join函数\"><a class=\"anchor\" href=\"#合并同join函数\">#</a> 合并同 join 函数</h4>\n<h4 id=\"判断\"><a class=\"anchor\" href=\"#判断\">#</a> 判断</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isidentifier\t判断字符串是不是合法标识符(字符、数字、下划线)</span><br><span class=\"line\">isspace\t判断字符是否只有空白字符(回车、换行和水平制表符)</span><br><span class=\"line\">isalpha\t判断字符串是否全部由字母组成</span><br><span class=\"line\">isdecimal\t判断字符是否全部由十进制的数字组成，不包括中文、罗马字符</span><br><span class=\"line\">isdigit\t判断字符串只包含数字，不包括中文数字</span><br><span class=\"line\">isnumeric\t判断字符串是否全部由数字组成，中文数字也算</span><br><span class=\"line\">isalnum\t判断字符串是否由字母和数字组成</span><br><span class=\"line\">islower\t判断字符串中的字符是否全部为小写，字符串至少有一个字符</span><br><span class=\"line\">isupper\t判断字符串中的字符是否全部为大写，字符串至少有一个字符</span><br><span class=\"line\">istitle\t判断字符串是否标题话，见titile</span><br><span class=\"line\">isascii\t如果字符串为空或字符串中的所有字符都是 ASCII，则返回 True，否则返回 False。</span><br><span class=\"line\">isprintable\t如果所有字符都是可打印的，则 isprintable() 方法返回 True，否则返回 False。</span><br><span class=\"line\"></span><br><span class=\"line\">startswith()   #判断字符串是否以指定字符开始</span><br><span class=\"line\">endswith()      #判断字符串是否以指定字符结束</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"aaaa数字\"><a class=\"anchor\" href=\"#aaaa数字\">#</a> aaaa 数字</h2>\n<p>求 s=a+aa+aaa+aaaa+aa…a 的值，其中 a 是一个数字。例如 2+22+222+2222+22222 (此时共有 5 个数相加)，几个数相加由键盘控制。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;被加数字：&#x27;</span>)</span><br><span class=\"line\">n=<span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;加几次？：&#x27;</span>))</span><br><span class=\"line\">res=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">    res+=<span class=\"built_in\">int</span>(a)</span><br><span class=\"line\">    a+=a[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;结果是：&#x27;</span>,res)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"完数\"><a class=\"anchor\" href=\"#完数\">#</a> 完数</h2>\n<p>一个数如果恰好等于它的因子之和，这个数就称为 &quot;完数&quot;。例如 6=1＋2＋3. 编程找出 1000 以内的所有完数。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">factor</span>(<span class=\"params\">m</span>):</span><br><span class=\"line\">    arr = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,m):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> m % i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            arr.add(i)</span><br><span class=\"line\">            arr.add(m/i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>,<span class=\"number\">1001</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i == <span class=\"built_in\">sum</span>(factor(i)) - i:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"打印所有小于n的斐波那契数\"><a class=\"anchor\" href=\"#打印所有小于n的斐波那契数\">#</a> 打印所有小于<strong> n</strong> 的斐波那契数</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\">t1 = <span class=\"number\">1</span></span><br><span class=\"line\">t2 = <span class=\"number\">1</span></span><br><span class=\"line\">result = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#循环</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> (t1 &lt; n):</span><br><span class=\"line\">    <span class=\"comment\"># 打印t1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(t1)</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># 定义result 为t1和t2之和</span></span><br><span class=\"line\">    result = t1 + t2</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 将t2的值分配给t1</span></span><br><span class=\"line\">    t1 = t2</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 将result的值分配给t2</span></span><br><span class=\"line\">    t2 = result</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"判断质数\"><a class=\"anchor\" href=\"#判断质数\">#</a> 判断质数</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">    flag = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"comment\"># 循环</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span> (<span class=\"number\">2</span>,n):</span><br><span class=\"line\">        <span class=\"comment\"># 判断 i是否能整除 number</span></span><br><span class=\"line\">        <span class=\"comment\"># 如果能整除，将flag设置为1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> n % i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            flag =<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 根据flag的值，判断是否是质数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> flag == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;非质数&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span> :</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;质数&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\">check(number)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"列表处理类\"><a class=\"anchor\" href=\"#列表处理类\">#</a> 列表处理类</h2>\n<h3 id=\"列表末尾添加元素\"><a class=\"anchor\" href=\"#列表末尾添加元素\">#</a> 列表末尾添加元素</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">odd_numbers = [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取一个整数作为输入并将其分配给number变量。</span></span><br><span class=\"line\">number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用append()函数将用户输入的项目添加到列表的最后。</span></span><br><span class=\"line\">odd_numbers.append(number)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印更新后的列表。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(odd_numbers)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"列表元素的积\"><a class=\"anchor\" href=\"#列表元素的积\">#</a> 列表元素的积</h3>\n<p>要求：</p>\n<p>编写一个程序：计算列表元素的乘积。</p>\n<ul>\n<li>\n<p>创建列表 <code>my_list</code>  并将 <code>[2, 5, 3, 4, 1]</code>  分配给它。</p>\n</li>\n<li>\n<p>声明一个变量 <code>product</code> ，其值为<strong> 1</strong>。</p>\n</li>\n<li>\n<p>循环  <code>my_list</code> ，并将每个元素乘以 <code>product</code> ，然后将结果赋值给 <code>product</code> 。</p>\n</li>\n<li>\n<p>打印 <code>product</code> 。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建一个列表my_list并将[2, 5, 3, 4, 1]分配给它。</span></span><br><span class=\"line\">my_list = [<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个变量product，其值为1。</span></span><br><span class=\"line\">product = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 循环 my_list，并将每个元素乘以product，然后将结果赋值给product</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> my_list:</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 运算</span></span><br><span class=\"line\">    product = product * i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印product。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(product)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h3 id=\"判断字符串首尾字符是否相等\"><a class=\"anchor\" href=\"#判断字符串首尾字符是否相等\">#</a> 判断字符串首尾字符是否相等</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 用户输入</span></span><br><span class=\"line\">check = <span class=\"built_in\">input</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用索引取得字符串的第一个和最后一个字符，并判断是否相等</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> check[<span class=\"number\">0</span>] == check[-<span class=\"number\">1</span>]:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;相等&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不相等&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"依次打印列表元素\"><a class=\"anchor\" href=\"#依次打印列表元素\">#</a> 依次打印列表元素</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建fruit列表，其中有 &quot;苹果&quot;, &quot;猕猴桃&quot;, &quot;葡萄&quot;, &quot;芒果&quot; 等元素。</span></span><br><span class=\"line\">fruit = [<span class=\"string\">&#x27;苹果&#x27;</span>,<span class=\"string\">&#x27;猕猴桃&#x27;</span>,<span class=\"string\">&#x27;葡萄&#x27;</span>,<span class=\"string\">&#x27;芒果&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印列表中的元素，使用for循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> fruit:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"反转列表\"><a class=\"anchor\" href=\"#反转列表\">#</a> 反转列表</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建列表</span></span><br><span class=\"line\">my_list = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 反转列表 并打印新列表</span></span><br><span class=\"line\">my_list.reverse()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(my_list)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"列表切片\"><a class=\"anchor\" href=\"#列表切片\">#</a> 列表切片</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建列表</span></span><br><span class=\"line\">arr = [<span class=\"string\">&quot;p&quot;</span>,<span class=\"string\">&quot;r&quot;</span>,<span class=\"string\">&quot;o&quot;</span>,<span class=\"string\">&quot;g&quot;</span>,<span class=\"string\">&quot;r&quot;</span>,<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;m&quot;</span>,<span class=\"string\">&quot;i&quot;</span>,<span class=\"string\">&quot;z&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取列表第二项到倒数第二项的元素赋值给新列表</span></span><br><span class=\"line\">app = arr[<span class=\"number\">1</span>:-<span class=\"number\">1</span>]</span><br><span class=\"line\"><span class=\"comment\"># 打印新的列表</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(app)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"统计字符出现次数\"><a class=\"anchor\" href=\"#统计字符出现次数\">#</a> 统计字符出现次数</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 输入字符串，总字符串</span></span><br><span class=\"line\">s = <span class=\"built_in\">input</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入字符，需要查找的</span></span><br><span class=\"line\">p = <span class=\"built_in\">input</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 循环字符串</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">    <span class=\"comment\"># 判断并计数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i == p:</span><br><span class=\"line\">        count += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印count</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(count)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"字符串是否相同忽略大小写\"><a class=\"anchor\" href=\"#字符串是否相同忽略大小写\">#</a> 字符串是否相同 (忽略大小写)</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 用户输入</span></span><br><span class=\"line\">s1 = <span class=\"built_in\">input</span>()</span><br><span class=\"line\">s2 = <span class=\"built_in\">input</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 转换为小写字母，并使用&quot;==&quot;检查它们是否相等</span></span><br><span class=\"line\">s1 = s1.lower()</span><br><span class=\"line\">s2 = s2.lower()</span><br><span class=\"line\"><span class=\"keyword\">if</span> s1 == s2:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;相等&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span> :</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;不相等&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"合并两个字典\"><a class=\"anchor\" href=\"#合并两个字典\">#</a> 合并两个字典</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A = &#123;<span class=\"number\">12</span>: <span class=\"string\">&#x27;Kathmandu&#x27;</span>, <span class=\"number\">11</span>: <span class=\"string\">&#x27;London&#x27;</span>, <span class=\"number\">3</span>: <span class=\"string\">&#x27;Sydney&#x27;</span>&#125;</span><br><span class=\"line\">B = &#123;<span class=\"number\">10</span>: <span class=\"string\">&#x27;New York&#x27;</span>, <span class=\"number\">2</span>: <span class=\"string\">&#x27;Delhi&#x27;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 合并字典</span></span><br><span class=\"line\">A.update(B)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印结果</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(A)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"打印字典的值\"><a class=\"anchor\" href=\"#打印字典的值\">#</a> 打印字典的值</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my_dict = &#123;<span class=\"string\">&quot;Elvis&quot;</span>: <span class=\"number\">84</span>, <span class=\"string\">&quot;Nelson&quot;</span>: <span class=\"number\">74</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 循环字典</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> my_dict.keys():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(my_dict[i])</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"列表推导过滤偶数\"><a class=\"anchor\" href=\"#列表推导过滤偶数\">#</a> 列表推导过滤偶数</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numbers = [<span class=\"number\">12</span>, <span class=\"number\">17</span>, <span class=\"number\">28</span>, <span class=\"number\">19</span>, <span class=\"number\">11</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用列表推导创建一个新的列表只包含奇数，即17, 19, 11</span></span><br><span class=\"line\">app =[]</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i % <span class=\"number\">2</span> != <span class=\"number\">0</span>:</span><br><span class=\"line\">        app.append(i)</span><br><span class=\"line\"><span class=\"comment\"># 打印新列表 </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(app)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"前n个自然数列表\"><a class=\"anchor\" href=\"#前n个自然数列表\">#</a> 前 n 个自然数列表</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 输入整数存储在变量n中 </span></span><br><span class=\"line\">n = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列表推导创建包含1到n的自然数 </span></span><br><span class=\"line\">numbers = [item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,n+<span class=\"number\">1</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印列表</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(numbers)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"字典推导创建字典\"><a class=\"anchor\" href=\"#字典推导创建字典\">#</a> 字典推导创建字典</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numbers = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字典推导创建新字典 </span></span><br><span class=\"line\">app =&#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> numbers:</span><br><span class=\"line\">    app[i] = i+<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印字典 </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(app)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"lambda函数求数字立方\"><a class=\"anchor\" href=\"#lambda函数求数字立方\">#</a> lambda 函数求数字立方</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建lambda函数，返回参数的立方 </span></span><br><span class=\"line\">gcc =  <span class=\"keyword\">lambda</span> x : x**<span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入一个整数 </span></span><br><span class=\"line\">number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数并打印结果 </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(gcc(number))</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"lambda函数相关\"><a class=\"anchor\" href=\"#lambda函数相关\">#</a> lambda 函数相关</h3>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">lambda</span> argument_list:expersion</span><br><span class=\"line\">argument_list：参数名</span><br><span class=\"line\">expersion：关系式</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">匿名函数使用注意点：</span><br><span class=\"line\"><span class=\"number\">1.</span>不要返回任何值</span><br><span class=\"line\"><span class=\"number\">2.</span>不要忘记更好的选择</span><br><span class=\"line\"><span class=\"number\">3.</span>不要将它赋值给变量</span><br><span class=\"line\"><span class=\"number\">4.</span>不要忘记列表推导式</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"lambda算术运算\"><a class=\"anchor\" href=\"#lambda算术运算\">#</a> Lambda 算术运算</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建lambda函数，计算两个数字的平方根之和</span></span><br><span class=\"line\">compute = <span class=\"keyword\">lambda</span> x,y: x**<span class=\"number\">0.5</span>+y**<span class=\"number\">0.5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入两个整数</span></span><br><span class=\"line\">n1 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\">n2 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数并打印结果</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(compute(n1,n2))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"函数可变参数\"><a class=\"anchor\" href=\"#函数可变参数\">#</a> 函数可变参数</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建函数，参数为可变数量的参数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">multiply_numbers</span>(<span class=\"params\">*s</span>):</span><br><span class=\"line\">    result = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        result *= i</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入三个整数 </span></span><br><span class=\"line\">n1 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\">n2 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\">n3 = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数 </span></span><br><span class=\"line\">result = multiply_numbers(n1,n2,n3)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印结果 </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"函数可变关键字参数\"><a class=\"anchor\" href=\"#函数可变关键字参数\">#</a> 函数可变关键字参数</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建函数，参数为可变数量的关键字参数 </span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">full_name</span>(<span class=\"params\">**s</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 打印参数</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(s)</span><br><span class=\"line\"></span><br><span class=\"line\">first = <span class=\"built_in\">input</span>()</span><br><span class=\"line\">last = <span class=\"built_in\">input</span>()</span><br><span class=\"line\">full_name(first = first,last = last)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"类对象属性\"><a class=\"anchor\" href=\"#类对象属性\">#</a> 类对象属性</h2>\n<p>要求：</p>\n<p>编写一个程序来创建一个类并使用该类的方法来打印属性。</p>\n<p><strong>创建一个类</strong>:</p>\n<ul>\n<li>创建自行车 <code>Bicycle</code>  类。</li>\n<li>在类中，创建两个方法： <code>__init__()</code>  和 <code>print_attributes()</code> 。</li>\n<li>类有两个属性: <code>gear'和</code>  speed <code>，它们应该在</code> <strong> init</strong> ()` 中初始化。</li>\n<li>在 <code>print_attributes()</code>  方法中，将 <code>gear</code>  属性和 <code>speed</code>  属性分别打印在两行。</li>\n</ul>\n<p><strong>在类外</strong>:</p>\n<ul>\n<li>创建 <code>Bicycle</code>  类对象 <code>bicycle1</code> 。对象的 <code>gear</code>  和 <code>speed</code>  属性分别是<strong> 4</strong> 和<strong> 80</strong>。</li>\n<li>使用 <code>bicycle1</code>  对象调用 <code>print_attributes()</code>  方法。</li>\n</ul>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建Bicycle类 </span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">bicycle1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, gear, speed</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 初始化属性 </span></span><br><span class=\"line\">        self.gear = gear</span><br><span class=\"line\">        self.speed = speed</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 创建print_atributes() 方法 </span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">print_atributes</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.gear)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.speed)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建对象， 4 和 80 作为初始化参数 </span></span><br><span class=\"line\">bicycle1 = bicycle1(<span class=\"number\">4</span>,<span class=\"number\">80</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用 print_atributes() 方法 </span></span><br><span class=\"line\">bicycle1.print_atributes()</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"python-类相关\"><a class=\"anchor\" href=\"#python-类相关\">#</a> python 类相关</h3>\n<h4 id=\"类的创建和类的实例\"><a class=\"anchor\" href=\"#类的创建和类的实例\">#</a> 类的创建和类的实例</h4>\n<p>类是一种用户定义的数据类型，它代表着一类具有相同属性和方法的对象的集合。</p>\n<p>实例则是类的具体实现，是类的一个个体，可以使用类定义的属性和方法。</p>\n<pre><code>定义类：使用关键字 class\n创建一个类的对象：可以通过类名后面加括号来创建一个实例\n\n__init__() 作为类的构造方法，用来初始化类的实例，\nself 表示类的实例本身。\n    self 的名字并不是规定死的，也可以使用 this，但是最好还是按照约定使用 self。\n其他方法则按照正常函数的形式定义。\n类可以定义属性和方法，属性是类的数据成员，方法是类的函数成员。\n类的方法与普通的函数只有一个特别的区别：它们必须有一个额外的第一个参数名称, 按照惯例它的名称是 self。\n\nclass Dog:\n    def __init__(self, name, breed, age):\n        self.name = name\n        self.breed = breed\n        self.age = age\n\nmy_dog = Dog('Buddy', 'Golden Retriever', 6)\n\n上面的代码中，“Dog”类表示狗类，它包含名字、品种和年龄这三个属性。\n创建了一个 “my_dog” 的实例，该实例有名为 “Buddy” 的名字、品种为 “Golden Retriever”、年龄为 6 岁。\n此时，my_dog 变量就代表了一个狗类的实例，可以通过访问它的属性来获取相应的信息，例如：\n\nprint(my_dog.age)\n\n这将打印出 6。同时，也可以使用对象的方法来修改属性或进行其他操作：\n\nclass Dog:\n    def __init__(self, name, breed, age):\n        self.name = name\n        self.breed = breed\n        self.age = age\n\n    def bark(self):\n        print('Woof woof!')\n\nmy_dog = Dog('Buddy', 'Golden Retriever', 6)\nmy_dog.bark()  # 输出 “Woof woof！”\n</code></pre>\n<h4 id=\"类的属性\"><a class=\"anchor\" href=\"#类的属性\">#</a> 类的属性</h4>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在 Python 中，类的属性可以被理解为类的变量。</span><br><span class=\"line\"></span><br><span class=\"line\">Python 的公有属性、私有属性以及实例属性、静态属性之间是存在关联的，具体关系如下：</span><br><span class=\"line\"></span><br><span class=\"line\">    公有属性：指没有加前缀双下划线__的属性，可以在类内外被访问，也可以被继承和重写。</span><br><span class=\"line\"></span><br><span class=\"line\">    私有属性：指加了前缀双下划线__的属性，只能在类内被访问和修改，而在类外部无法访问或修改。</span><br><span class=\"line\"></span><br><span class=\"line\">    实例属性：指定义在 __init__ 方法中，以 self.属性名 的形式定义的属性，每个实例都独立拥有一个自己的实例属性，它们随实例创建和销毁。</span><br><span class=\"line\"></span><br><span class=\"line\">    静态属性：指在类下直接定义的属性，可以使用类名直接访问，它们是类的属性，每个实例都共享一个静态属性。</span><br><span class=\"line\"></span><br><span class=\"line\">公有属性和私有属性是属于对象或类中的实例属性或静态属性的一种访问方式，</span><br><span class=\"line\"></span><br><span class=\"line\">也就是说，公有属性和私有属性可以同时作为实例属性和静态属性存在。</span><br><span class=\"line\"></span><br><span class=\"line\">对于 Python 中的公有属性和实例属性的关系，可以通过实例的 self.属性名 来访问和修改；</span><br><span class=\"line\"></span><br><span class=\"line\">而对于 Python 中的私有属性，则需要在属性名前面加上双下划线&quot;__&quot;，才能被认定为私有属性，无法通过实例调用，只能通过类内部的方法进行访问和修改。对于静态属性，则是直接定义在类下，可以使用类名进行访问和修改。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">公有属性</span><br><span class=\"line\"></span><br><span class=\"line\">公有属性是指可以从类的外部直接访问和修改的属性，一般在类的构造方法中用 self 关键字来定义，例如：</span><br><span class=\"line\">class Student:</span><br><span class=\"line\">    def __init__(self, name, age):</span><br><span class=\"line\">        self.name = name  # 公有属性</span><br><span class=\"line\">        self.age = age  # 公有属性</span><br><span class=\"line\"></span><br><span class=\"line\">私有属性是指不能从类的外部直接访问和修改的属性。在 Python 中，可以通过在属性名前面加上双下划线 __ 来定义私有属性，例如：</span><br><span class=\"line\">class Student:</span><br><span class=\"line\">    def __init__(self, name, age):</span><br><span class=\"line\">        self.__name = name  # 私有属性</span><br><span class=\"line\">        self.__age = age  # 私有属性</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"面向对象封装案例\"><a class=\"anchor\" href=\"#面向对象封装案例\">#</a> 面向对象封装案例</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Gun</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,model</span>):</span><br><span class=\"line\">        <span class=\"comment\">#定义枪类型</span></span><br><span class=\"line\">        self.model = model</span><br><span class=\"line\">        <span class=\"comment\">#定义子弹</span></span><br><span class=\"line\">        self.bullet_count = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_bullet</span>(<span class=\"params\">self,count</span>):</span><br><span class=\"line\">        <span class=\"comment\">#装填子弹</span></span><br><span class=\"line\">        self.bullet_count += count</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">shoot</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.bullet_count &lt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;[%s]没子弹了&quot;</span>%self.model)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        self.bullet_count -= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;[%s].....[%d]&quot;</span>%(self.model,self.bullet_count))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">soldier</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,name</span>):</span><br><span class=\"line\">        <span class=\"comment\">#定义姓名</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        <span class=\"comment\">#定义抢</span></span><br><span class=\"line\">        self.gun = <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">fire</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.gun == <span class=\"literal\">None</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;[%s]&quot;</span>%self.name)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;[tututu]&quot;</span>)</span><br><span class=\"line\">            self.gun.add_bullet(<span class=\"number\">50</span>)</span><br><span class=\"line\">            self.gun.shoot()</span><br><span class=\"line\">ak = Gun(<span class=\"string\">&quot;ak47&quot;</span>)</span><br><span class=\"line\">xusanduo = soldier(<span class=\"string\">&quot;123&quot;</span>)</span><br><span class=\"line\">xusanduo.gun = ak</span><br><span class=\"line\">xusanduo.fire()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(xusanduo.gun)</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"继承\"><a class=\"anchor\" href=\"#继承\">#</a> 继承</h4>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#单继承，多继承</span></span><br><span class=\"line\"><span class=\"comment\">#子类父类：</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span> :</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">eat</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;eat&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">drink</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;drink&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">run</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;run&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">sleep</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;sleep&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span>(<span class=\"title class_ inherited__\">Animal</span>) :</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">bark</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;bark&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#继承的传递性</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">XTQ</span>(<span class=\"title class_ inherited__\">Dog</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">fly</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;fly&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#    def bark(self):#方法的重写（覆盖父类的方法）</span></span><br><span class=\"line\"><span class=\"comment\">#        print(&quot;barkbark&quot;)</span></span><br><span class=\"line\">    <span class=\"built_in\">super</span>().bark()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;barkbark&quot;</span>)<span class=\"comment\">#方法的重写（扩展父类的方法）</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">#多继承</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">test</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;test&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">demo</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;demo&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">C</span>(A,B):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\">c = C()</span><br><span class=\"line\">c.test()</span><br><span class=\"line\">c.demo()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"多态\"><a class=\"anchor\" href=\"#多态\">#</a> 多态</h4>\n<p>不同子类对象，调用相同的父类，产生不同的结果。</p>\n<h2 id=\"坐标类对象相加\"><a class=\"anchor\" href=\"#坐标类对象相加\">#</a> 坐标类对象相加</h2>\n<p>要求：</p>\n<p>编写一个程序，计算两个二维坐标类对象相加之和。</p>\n<p><strong>创建类</strong>:</p>\n<ul>\n<li>创建坐标类 <code>Coordinate</code> ，属性为 <code>x</code>  和 <code>y</code> 。</li>\n<li>使用 <code>__init__()</code>  方法来初始化属性。</li>\n<li>该类有 <code>add_coordinates()</code>  方法，参数为 <code>Coordinate</code>  类对象，计算两个对象的 <code>x</code>  和 <code>y</code>  分别相加之和，并作为新的属性返回一个新的 <code>Coordinate</code>  对象。</li>\n</ul>\n<p><strong>在类外</strong>:</p>\n<ul>\n<li>\n<p>创建两个 <code>Coordinate</code>  类对象 <code>c1</code>  和 <code>c2</code> 。</p>\n</li>\n<li>\n<p><code>c1</code>  的 <code>x</code>  和 <code>y</code>  属性分别为<strong> 5</strong> 和<strong> 6</strong>。</p>\n</li>\n<li>\n<p><code>c2</code>  的 <code>x</code>  和 <code>y</code>  属性分别为<strong> 7</strong> 和<strong> 9</strong>。</p>\n</li>\n<li>\n<p>使用 <code>c1</code>  对象调用 <code>add_coordinates()</code> ，以 <code>c2</code>  为参数，并将结果赋值到 <code>c3</code>  变量中。</p>\n</li>\n<li>\n<p>打印 <code>c3</code>  的 <code>x</code>  属性。</p>\n</li>\n<li>\n<p>打印 <code>c3</code>  的 <code>y</code>  属性。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建 Coordinate 类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Coordinate</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 初始化属性x 和 y，使用__init__() 函数</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, x, y</span>):</span><br><span class=\"line\">        self.x = x</span><br><span class=\"line\">        self.y = y</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 实现 add_coordinates() 方法</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_coordinates</span>(<span class=\"params\">self, other</span>):</span><br><span class=\"line\">        new_x = self.x + other.x</span><br><span class=\"line\">        new_y = self.y +other.y</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Coordinate(new_x,new_y)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建对象 c1 和 c2</span></span><br><span class=\"line\">c1 = Coordinate(<span class=\"number\">5</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\">c2 = Coordinate(<span class=\"number\">7</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对象c1调用add_coordinates()方法，参数为c2</span></span><br><span class=\"line\">c3 = c1.add_coordinates(c2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出对象c3 的属性</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(c3.x)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(c3.y)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h2 id=\"计算周长\"><a class=\"anchor\" href=\"#计算周长\">#</a> 计算周长</h2>\n<p>要求：</p>\n<p>编写一个程序来计算三角形的周长，使用面向对象方式来编程。</p>\n<p><strong>创建类</strong>:</p>\n<ul>\n<li>创建三角形 <code>Triangle</code>  类，有三个属性 <code>x</code> ， <code>y</code> ， <code>z</code> 。</li>\n<li>使用 <code>__init__()</code>  方法来初始化属性。</li>\n<li>创建 <code>get_perimeter()</code>  的方法来计算周长并返回。</li>\n</ul>\n<p><strong>在类外</strong>:</p>\n<ul>\n<li>\n<p>输入三个整数，分别赋值给变量 <code>a</code> 、 <code>b</code>  和 <code>c</code> 。(三角形三边长度)。</p>\n</li>\n<li>\n<p>用 <code>a</code> 、 <code>b</code> 、 <code>c</code>  创建 <code>Triangle</code>  类对象。</p>\n</li>\n<li>\n<p>用该对象调用 <code>get_perimeter()</code>  方法，返回周长。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建三角形类Triangle</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Triangle</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 实现__init__()方法 ，初始化属性</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,x</span>):</span><br><span class=\"line\">        self.x = x</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 定义 get_perimeter() 方法 </span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_perimeter</span>(<span class=\"params\">self,other1,other2</span>):</span><br><span class=\"line\">        new = self.x + other1.x + other2.x</span><br><span class=\"line\">        <span class=\"keyword\">return</span> new</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入三个整数 </span></span><br><span class=\"line\">a = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\">b = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\">c = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建Triangle类对象，并用a、b、c作为参数初始化三边</span></span><br><span class=\"line\">s1 = Triangle(a)</span><br><span class=\"line\">s2 = Triangle(b)</span><br><span class=\"line\">s3 = Triangle(c)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用 get_perimeter() 计算周长</span></span><br><span class=\"line\">perimeter = s1.get_perimeter(s2,s3)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印 周长 perimeter</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(perimeter)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h2 id=\"学生分数总和\"><a class=\"anchor\" href=\"#学生分数总和\">#</a> 学生分数总和</h2>\n<p>要求：</p>\n<p>编写一个程序来创建 <code>Student</code>  类，该类有一个方法返回存储在列表中的分数之和。</p>\n<p><strong>创建类</strong>:</p>\n<ul>\n<li>创建 <code>Student</code>  类，且有一个分数 <code>scores</code>  属性（类型为列表）。</li>\n<li>创建 <code>__init__()</code>  方法初始化 <code>scores</code>  属性。</li>\n<li>创建 <code>get_scores_sum()</code>  方法，将分数相加返回。可使用内置的  <code>sum()</code>  函数。</li>\n</ul>\n<p><strong>类外部</strong>:</p>\n<ul>\n<li>\n<p>创建列表 <code>scores</code>  值为 <code>[55, 75, 80, 62, 77]</code> 。</p>\n</li>\n<li>\n<p>创建 <code>Student</code>  类对象 <code>s1</code> ，并传入 <code>scores</code>  来初始化属性。</p>\n</li>\n<li>\n<p>调用 <code>get_scores_sum()</code>  方法，结果存入 <code>total</code>  变量。</p>\n</li>\n<li>\n<p>打印 <code>total</code>  变量。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建 Student 类 </span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 使用 __init__() 方法来初始化 scores 属性  </span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,scores</span>):</span><br><span class=\"line\">        self.scores = scores</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># 创建get_scores_sum()方法，将分数相加返回</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">ger_score_sum</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span>(self.scores)</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 创建列表 scores </span></span><br><span class=\"line\">scores = [<span class=\"number\">55</span>, <span class=\"number\">75</span>, <span class=\"number\">80</span>, <span class=\"number\">62</span>, <span class=\"number\">77</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 传递分数scores作为参数创建Student类对象</span></span><br><span class=\"line\">s1 = Student(scores)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对象s1调用方法get_scores_sum()</span></span><br><span class=\"line\">total = s1.ger_score_sum()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印 total</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(total)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h2 id=\"车辆类中创建引擎类对象\"><a class=\"anchor\" href=\"#车辆类中创建引擎类对象\">#</a> 车辆类中创建引擎类对象</h2>\n<p>要求：</p>\n<p>编写写一个程序，在一个类中创建另一个类的对象。</p>\n<p><strong>创建类</strong>:</p>\n<ul>\n<li>创建两个类：发动机类 <code>Engine</code> ，属性为动力 <code>power</code> ；车辆类 <code>Vehicle</code> ，属性为：轮子 <code>wheels</code>  和发动机 <code>engine</code> 。</li>\n<li><code>Engine</code>  类 <code>__init__()</code>  方法，带两个参数。 <code>self</code>  和 <code>power</code>  来创建并初始化 <code>Engine</code>  类的 <code>power</code>  属性。</li>\n<li><code>Vehicle</code>  类 <code>__init__()</code>  方法，带两个参数 <code>self</code>  和 <code>wheels</code>  来初始化 <code>Vehicle</code>  类的 <code>wheels</code>  属性。</li>\n<li>在 <code>Vehicle</code>  的 <code>init__()</code>  方法中， <code>engine</code>  属性应该为一个 <code>Engine</code>  类的对象，其 <code>power</code>  属性等于<strong> 400</strong>。</li>\n<li>在 <code>Vehicle</code>  类中创建 <code>get_power()</code>  方法，打印 属性 <code>engine</code>  的 <code>power</code>  属性。</li>\n</ul>\n<p><strong>在类外</strong>:</p>\n<ul>\n<li>\n<p>创建车辆 <code>Vehicle</code>  类对象，轮子 <code>wheels</code>  属性等于<strong> 4</strong>。</p>\n</li>\n<li>\n<p>调用该对象的 <code>get_power()</code>  方法。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建Engine类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Engine</span>:</span><br><span class=\"line\">    <span class=\"comment\"># __init__() 方法初始化 power 属性</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, power</span>):</span><br><span class=\"line\">        self.power = power</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建 Vehicle 类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Vehicle</span>:</span><br><span class=\"line\">    <span class=\"comment\">#  __init__() 方法初始化 wheels 属性</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, wheels</span>):</span><br><span class=\"line\">        self.wheels = wheels</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 引擎属性enginer应该是引擎类的一个对象，power属性为400</span></span><br><span class=\"line\">        self.engine = <span class=\"number\">400</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 创建 get_power() 方法</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_power</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 打印引擎属性的功率属性（engine是引擎类的一个对象）。</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  self.engine</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建车辆Vehicle类对象</span></span><br><span class=\"line\">s = Vehicle(<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用get_power()方法</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.get_power())</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h2 id=\"调用父类方法\"><a class=\"anchor\" href=\"#调用父类方法\">#</a> 调用父类方法</h2>\n<p>要求：</p>\n<p>编写一个程序，使用派生类 (子类) 对象调用基类 (父类) 的方法:</p>\n<p><strong>创建类</strong>:</p>\n<ul>\n<li>创建动物 <code>Animal</code>  基类。该类中，创建 <code>eat()</code>  方法，打印 &quot;我在吃东西&quot;。</li>\n<li>创建一个继承于 <code>Animal</code>  类的  <code>Dog</code>  类。该类中，创建 <code>bark()</code>  方法，打印 &quot;我在叫&quot;。</li>\n</ul>\n<p><strong>在类外</strong>:</p>\n<ul>\n<li>\n<p>创建 <code>Dog</code>  类对象。</p>\n</li>\n<li>\n<p>用该对象调用 <code>eat()</code>  方法。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建Animal类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">eat</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;我在吃东西&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建 Dog 类，继承于 Animal类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span>(<span class=\"title class_ inherited__\">Animal</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">bark</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;我在叫&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建Dog类对象</span></span><br><span class=\"line\">t = Dog()</span><br><span class=\"line\"><span class=\"comment\"># 调用对象的 eat() 方法</span></span><br><span class=\"line\">t.eat()<span class=\"comment\">## 33 super()函数使用</span></span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h2 id=\"super函数使用\"><a class=\"anchor\" href=\"#super函数使用\">#</a> super () 函数使用</h2>\n<p>要求：</p>\n<p>编写一个程序，使用 <code>super()</code>  函数在派生类的方法中调用基类的方法。</p>\n<p><strong>创建类</strong>:</p>\n<ul>\n<li>创建动物 <code>Animal</code>  基类。该类中，创建 <code>eat()</code>  方法，打印 &quot;我在吃东西&quot;。</li>\n<li>创建一个继承于 <code>Animal</code>  类的  <code>Dog</code>  类。该类中，创建 <code>bark()</code>  方法，打印 &quot;我在叫&quot;。</li>\n<li>在 <code>Dog</code>  类中定义 <code>eat()</code>  方法，使用 <code>supper()</code>  调用父类 <code>Animal</code>  类的 <code>eat()</code>  方法。</li>\n</ul>\n<p><strong>在类外</strong>:</p>\n<ul>\n<li>创建 <code>Dog</code>  类对象，用该对象调用 <code>eat()</code>  方法。</li>\n</ul>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建Animal类 </span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Animal</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">eat</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;我在吃东西&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建 Dog 类，继承于 Animal类 </span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span>(<span class=\"title class_ inherited__\">Animal</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">bark</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;我在叫&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">eat</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 通过super() 函数来调用父类的eat方法</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().eat()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建Dog类对象 </span></span><br><span class=\"line\">t = Dog()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用对象的 eat() 方法 </span></span><br><span class=\"line\">t.eat()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"正方形面积及周长\"><a class=\"anchor\" href=\"#正方形面积及周长\">#</a> 正方形面积及周长</h2>\n<p>要求：</p>\n<p>编写一个程序，用类来计算一个正方形的面积和周长。(正方形是一个边长相等的矩形)</p>\n<p><strong>创建一个类</strong>。</p>\n<ul>\n<li>创建正方形 <code>Square</code>  类，且有一个长度 <code>length</code>  属性。</li>\n<li>使用  <code>__init__()</code>  来初始化  <code>length</code>  属性。</li>\n<li>创建 <code>compute_area()</code>  方法来计算正方形的面积并返回。</li>\n<li>创建 <code>compute_perimter()</code>  方法来计算正方形的周长并返回。</li>\n</ul>\n<p><strong>在类外</strong>:</p>\n<ul>\n<li>输入一个整数并赋值给 <code>length</code>  变量。</li>\n<li>通过传递 <code>length</code>  作为参数，创建一个 <code>Square</code>  类对象。</li>\n<li>调用 <code>compute_area()</code>  方法并打印面积。</li>\n<li>调用 <code>compute_perimeter()</code>  方法并打印周长。</li>\n</ul>\n<p>正方形的面积等于 <code>length * length</code> ，正方形的周长等于 <code>4 * length</code> 。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建正方形类Square</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Square</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 实现 __init__() 函数，初始化属性 </span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,length</span>):</span><br><span class=\"line\">        self.length = length</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 实现面积方法 get_area() ，并返回面积</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_area</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.length*self.length</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 实现周长方法 get_perimeter() ，并返回周长</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_perimeter</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">4</span>*self.length</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入一个整数 </span></span><br><span class=\"line\">length = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建Square类对象</span></span><br><span class=\"line\">t = Square(length)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用 get_area() 方法并打印面积</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(t.get_area())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用 get_perimeter() 方法并打印周长</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(t.get_perimeter())</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"列表越界异常处理\"><a class=\"anchor\" href=\"#列表越界异常处理\">#</a> 列表越界异常处理</h2>\n<p>要求：</p>\n<p>编写程序来打印列表在给定索引处的元素。如果索引超出了范围，则打印<strong>错误的索引</strong>。</p>\n<ul>\n<li>\n<p>创建一个列表，元素为 <code>'BMW'</code> ,  <code>'Ferrari'</code> ,  <code>'Audi'</code> ,  <code>'Tesla'</code> 。</p>\n</li>\n<li>\n<p>输入一个整数，并存储在 <code>index</code>  变量中。</p>\n</li>\n<li>\n<p>打印索引 <code>index</code>  处的元素。</p>\n</li>\n<li>\n<p>如果索引超出了范围，则通过<strong>异常处理</strong>打印 &quot;错误的索引&quot;。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用try-except </span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    cars = [<span class=\"string\">&#x27;BMW&#x27;</span>, <span class=\"string\">&#x27;Ferrari&#x27;</span>, <span class=\"string\">&#x27;Audi&#x27;</span>, <span class=\"string\">&#x27;Tesla&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 输入一个整数 </span></span><br><span class=\"line\">    index = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 打印index处cars的元素 </span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(cars[index])</span><br><span class=\"line\"><span class=\"comment\"># expcet 捕获异常处理</span></span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;错误的索引&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h2 id=\"错位词\"><a class=\"anchor\" href=\"#错位词\">#</a> 错位词</h2>\n<p>要求：</p>\n<p>编写一个 Python 程序来判断两个给定的字符串是否是错位词。</p>\n<p>如果两个字符串具有相同的字符，但顺序不同，则被认为是彼此的错位词。 例如， <code>restful</code>  和 <code>fluster</code>  是错位词。</p>\n<ul>\n<li>\n<p>定义函数 <code>are_anagrams()</code> ，有两个参数： <code>string1</code>  和 <code>string2</code> 。</p>\n</li>\n<li>\n<p>在函数内，如果两个字符串是错位词，则返回 <code>True</code> ，否则返回 <code>False</code> 。</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">are_anagrams</span>(<span class=\"params\">string1, string2</span>):</span><br><span class=\"line\">    app1 = [elem <span class=\"keyword\">for</span> elem <span class=\"keyword\">in</span> string1.lower() <span class=\"keyword\">if</span> elem.isalpha() <span class=\"keyword\">or</span> elem.isdigit()]<span class=\"comment\">#筛选字母数字</span></span><br><span class=\"line\">    app2 = [elem <span class=\"keyword\">for</span> elem <span class=\"keyword\">in</span> string2.lower() <span class=\"keyword\">if</span> elem.isalpha() <span class=\"keyword\">or</span> elem.isdigit()]</span><br><span class=\"line\">    app1 = <span class=\"built_in\">set</span>(app1)</span><br><span class=\"line\">    app2 = <span class=\"built_in\">set</span>(app2)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> app1 == app2:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"comment\"># 获取输入string1 和 string2</span></span><br><span class=\"line\">string1 = <span class=\"built_in\">input</span>()</span><br><span class=\"line\">string2 = <span class=\"built_in\">input</span>()</span><br><span class=\"line\"><span class=\"comment\"># 调用函数并打印结果</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(are_anagrams(string1, string2))</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h2 id=\"求最大公约数\"><a class=\"anchor\" href=\"#求最大公约数\">#</a> 求最大公约数</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">find_gcd</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> b == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a</span><br><span class=\"line\">    <span class=\"keyword\">return</span> find_gcd(b,a%b)</span><br><span class=\"line\">    <span class=\"comment\"># 在此处编写代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入整数</span></span><br><span class=\"line\">first_number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\">second_number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(find_gcd(first_number, second_number))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"格式化数字\"><a class=\"anchor\" href=\"#格式化数字\">#</a> 格式化数字</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add_commas</span>(<span class=\"params\">number</span>):</span><br><span class=\"line\">    formatted_str = <span class=\"built_in\">format</span>(number, <span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> formatted_str</span><br><span class=\"line\">    <span class=\"comment\"># 在此处编写代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取用户输入“78934654383”</span></span><br><span class=\"line\">number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(add_commas(number))</span><br><span class=\"line\"><span class=\"comment\"># 78,934,654,383</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"最小公倍数\"><a class=\"anchor\" href=\"#最小公倍数\">#</a> 最小公倍数</h2>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">gcd</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 辗转相除法求最大公约数</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> b:</span><br><span class=\"line\">        a, b = b, a % b</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">lcm</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 最小公倍数等于两数乘积除以最大公约数</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a * b // gcd(a, b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">smallest_multiple</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 初始化最小公倍数为1</span></span><br><span class=\"line\">    result = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"comment\"># 从2到n依次求最小公倍数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>, n + <span class=\"number\">1</span>):</span><br><span class=\"line\">        result = lcm(result, i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入n</span></span><br><span class=\"line\">n = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(smallest_multiple(n))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"十六进制转换为二进制\"><a class=\"anchor\" href=\"#十六进制转换为二进制\">#</a> 十六进制转换为二进制</h2>\n<p>要求：</p>\n<p>编写一个程序，将一个两位十六进制数转换为其等价的二进制。</p>\n<p>例如，十进制数<strong> 75</strong> 在十六进制系统中为<strong> 0x4B</strong>，在二进制系统中为<strong> 1001011</strong>。</p>\n<p>因此，如果用户输入<strong> 0x4B</strong> 作为输入，则您的程序应输出<strong> 01001011</strong>。</p>\n<p><strong>注意</strong>：二进制输出必须始终由 8 位或更多位组成。</p>\n<ul>\n<li>定义函数 <code>hex_to_binary()</code> ，该函数接受单个参数 <code>hex_number</code> （以 <code>0xXX</code>  格式表示的十六进制数）。</li>\n<li>在函数内，将十六进制数转换为二进制，并将结果作为字符串返回。</li>\n</ul>\n<h3 id=\"示例输入\"><a class=\"anchor\" href=\"#示例输入\">#</a> 示例输入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0xFF</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"示例输出\"><a class=\"anchor\" href=\"#示例输出\">#</a> 示例输出</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">11111111</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hex_to_binary</span>(<span class=\"params\">hex_number</span>):</span><br><span class=\"line\">    s = <span class=\"built_in\">format</span>(hex_number, <span class=\"string\">&#x27;08b&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取用户输入的16进制数</span></span><br><span class=\"line\">hex_number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(), <span class=\"number\">16</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印转换后的二进制数 </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(hex_to_binary(hex_number))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"双基回文数\"><a class=\"anchor\" href=\"#双基回文数\">#</a> 双基回文数</h2>\n<p>要求：</p>\n<p>编写一个程序来检查一个数字是否是双基回文数。</p>\n<p>回文是指从前往后读和从后往前读都一样的字母、数字的序列。</p>\n<p>双基回文数是指在十进制和二进制表示中都是回文的数字。</p>\n<p>例如：</p>\n<p><strong>585</strong> = <strong>1001001001</strong></p>\n<p>是一个双基回文，其二进制是回文形式，十进制也是回文形式。</p>\n<ul>\n<li>定义函数 <code>check_double_base_palindrome()</code> ，参数为整数。</li>\n<li>在函数内，检查数字的十进制和二进制形式是否都是回文。</li>\n<li>如果是双基回文，返回 <code>True</code> ，否则返回 <code>False</code> 。</li>\n</ul>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_double_base_palindrome</span>(<span class=\"params\">number</span>):</span><br><span class=\"line\">    bi = (<span class=\"built_in\">bin</span>(number))[<span class=\"number\">2</span>:]</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">bijiao</span>(<span class=\"params\">s</span>):</span><br><span class=\"line\">        app = <span class=\"built_in\">list</span>(<span class=\"built_in\">str</span>(s))</span><br><span class=\"line\">        app1 = app[:]</span><br><span class=\"line\">        app1 = [elem <span class=\"keyword\">for</span> elem <span class=\"keyword\">in</span> app1 <span class=\"keyword\">if</span> elem.isalpha() <span class=\"keyword\">or</span> elem.isdigit()]</span><br><span class=\"line\">        app.reverse()</span><br><span class=\"line\">        app2 = app</span><br><span class=\"line\">        app2 = [elem <span class=\"keyword\">for</span> elem <span class=\"keyword\">in</span> app2 <span class=\"keyword\">if</span> elem.isalpha() <span class=\"keyword\">or</span> elem.isdigit()]</span><br><span class=\"line\">        cou = <span class=\"built_in\">len</span>(app1)</span><br><span class=\"line\">        flag = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,cou):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> app1[i]==app2[i]:</span><br><span class=\"line\">                flag = <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                flag = <span class=\"number\">0</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> flag == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> :</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    flag1 = bijiao(number)</span><br><span class=\"line\">    flag2 = bijiao(bi)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> flag1 == <span class=\"number\">1</span> <span class=\"keyword\">and</span> flag2 == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 此处编写代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取用户输入</span></span><br><span class=\"line\">number = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(check_double_base_palindrome(number))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"嵌套元组唯一元素\"><a class=\"anchor\" href=\"#嵌套元组唯一元素\">#</a> 嵌套元组唯一元素</h2>\n<p>要求：</p>\n<p>编写一个程序来提取嵌套元组中的唯一元素。</p>\n<p>例如，在嵌套元组 <code>((1,2,3),(2,4,6),(2,3,5))</code>  中，<strong>2</strong> 重复出现了 3 次，<strong>3</strong> 重复出现了 2 次，但我们的输出列表只会包含<strong> 2</strong>、<strong>3</strong> 一次。</p>\n<p>即： <code>[1, 2, 3, 4, 5, 6]</code></p>\n<ul>\n<li>定义函数 <code>get_unique_elements()</code> ，函数接受一个参数 - 一个包含三个元组的嵌套元组。</li>\n<li>在函数内，提取所有元组中的独立元素，确保不重复提取元素。</li>\n<li>以列表的形式返回唯一的元素，并<strong>从小到大</strong>排序。</li>\n</ul>\n<h3 id=\"示例输入-2\"><a class=\"anchor\" href=\"#示例输入-2\">#</a> 示例输入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 2 2 3</span><br><span class=\"line\">2 3 3 4</span><br><span class=\"line\">4 5 5 6</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"示例输出-2\"><a class=\"anchor\" href=\"#示例输出-2\">#</a> 示例输出</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[1, 2, 3, 4, 5, 6]</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_unique_elements</span>(<span class=\"params\">nested_tuples</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 此处编写代码</span></span><br><span class=\"line\">    a = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> nested_tuples:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            a.add(j)</span><br><span class=\"line\">    a = <span class=\"built_in\">list</span>(a)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化嵌套元组</span></span><br><span class=\"line\">nested_tuples = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取用户输入</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">3</span>):</span><br><span class=\"line\">    tuple_elements = <span class=\"built_in\">tuple</span>(<span class=\"built_in\">map</span>(<span class=\"built_in\">int</span>, <span class=\"built_in\">input</span>().split()))</span><br><span class=\"line\">    nested_tuples.append(tuple_elements)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_unique_elements(nested_tuples))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"日期相差多少天\"><a class=\"anchor\" href=\"#日期相差多少天\">#</a> 日期相差多少天</h2>\n<p>要求：</p>\n<p>编写一个程序，计算两个日期之间的天数。</p>\n<ul>\n<li>导入 <code>datetime</code>  模块。</li>\n<li>定义函数 <code>calculate_days_between()</code>  数，其中有两个参数： <code>(date1, date2)</code> ，类型为字符串，格式为 <code>YYYY-MM-DD</code> 。</li>\n<li>在函数内，将字符串转换为 <code>datetime</code>  对象，并计算 <code>date2</code>  和 <code>date1</code>  之间的差异，以天为单位。</li>\n<li>以天数的差异作为输出返回。</li>\n</ul>\n<h3 id=\"示例输入-3\"><a class=\"anchor\" href=\"#示例输入-3\">#</a> 示例输入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2023-04-14</span><br><span class=\"line\">2023-04-20</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"示例输出-3\"><a class=\"anchor\" href=\"#示例输出-3\">#</a> 示例输出</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">calculate_days_between</span>(<span class=\"params\">date1, date2</span>):</span><br><span class=\"line\">    date1_obj = datetime.strptime(date1, <span class=\"string\">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class=\"line\">    date2_obj = datetime.strptime(date2, <span class=\"string\">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 计算两个日期之间的差异，并取绝对值</span></span><br><span class=\"line\">    delta = date2_obj - date1_obj</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 返回天数差异</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> delta.days</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取用户输入</span></span><br><span class=\"line\">date1 = <span class=\"built_in\">input</span>()</span><br><span class=\"line\">date2 = <span class=\"built_in\">input</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(calculate_days_between(date1, date2))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"字典转为列表\"><a class=\"anchor\" href=\"#字典转为列表\">#</a> 字典转为列表</h2>\n<p>要求：</p>\n<p>编写一个程序将字典转换为列表，列表的每一个元素表示一个键值对，并按键排序。</p>\n<ul>\n<li>定义函数 <code>dict_to_sorted_list()</code> ，其参数为 <code>dictionary</code> 。</li>\n<li>在函数中，将字典转换为列表，其中每个列表的元素包含<strong>键</strong>及其相应的<strong>值</strong>。</li>\n<li>按升序对此列表排序。</li>\n<li>返回排序后的列表。</li>\n</ul>\n<h3 id=\"示例输入-4\"><a class=\"anchor\" href=\"#示例输入-4\">#</a> 示例输入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&quot;car&quot;: 3, &quot;bus&quot;: 2, &quot;train&quot;: 5&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"示例输出-4\"><a class=\"anchor\" href=\"#示例输出-4\">#</a> 示例输出</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[&#x27;bus&#x27;, 2], [&#x27;car&#x27;, 3], [&#x27;train&#x27;, 5]]</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">dict_to_sorted_list</span>(<span class=\"params\">dictionary</span>):</span><br><span class=\"line\">    dictionary = <span class=\"built_in\">sorted</span>(dictionary.items())</span><br><span class=\"line\">    arr = [[key,value] <span class=\"keyword\">for</span> key,value <span class=\"keyword\">in</span> dictionary]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取输入转为字典</span></span><br><span class=\"line\">dictionary = <span class=\"built_in\">eval</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict_to_sorted_list(dictionary))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"字符串中缺失的字母\"><a class=\"anchor\" href=\"#字符串中缺失的字母\">#</a> 字符串中缺失的字母</h2>\n<p>要求：</p>\n<p>编写一个程序，返回一个按字母顺序排序的字符串，其中包含给定字符串中不出现的所有小写字母。</p>\n<ul>\n<li>定义函数 <code>get_missing_letters()</code> ，参数为 <code>word_string</code> 。</li>\n<li>在函数内部，返回一个排序的字符串，其中包含不出现在 <code>word_string</code>  中的所以小写字母。</li>\n</ul>\n<p><strong>注意</strong>：假设用户只输入小写字母字符串作为输入。</p>\n<h3 id=\"示例输入-5\"><a class=\"anchor\" href=\"#示例输入-5\">#</a> 示例输入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stray</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"示例输出-5\"><a class=\"anchor\" href=\"#示例输出-5\">#</a> 示例输出</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bcdefghijklmnopquvwxz</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><strong>解释</strong>：输入字符串 <code>&quot;stray&quot;</code>  包含英文字母表中除 <code>&quot;bcdefghijklmnopquvwxz&quot;</code>  之外的所有字母。</p>\n</blockquote>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_missing_letters</span>(<span class=\"params\">word_string</span>):</span><br><span class=\"line\">    b = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    a = <span class=\"string\">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">        flag = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> word_string:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> i == j:</span><br><span class=\"line\">                flag = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> flag != <span class=\"number\">1</span>:</span><br><span class=\"line\">            b += i</span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"keyword\">return</span> b</span><br><span class=\"line\">    <span class=\"comment\"># 此处编写你的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取输入的字符串</span></span><br><span class=\"line\">word_string = <span class=\"built_in\">input</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数输出结果</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_missing_letters(word_string))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"子列表的数量\"><a class=\"anchor\" href=\"#子列表的数量\">#</a> 子列表的数量</h2>\n<p>要求：</p>\n<p>编写一个程序来计算列表中子列表的数量。</p>\n<ul>\n<li>定义函数 <code>count_sublists()</code> ，参数为 <code>list_input</code> 。</li>\n<li>在函数内部，返回输入列表中子列表的总数。</li>\n</ul>\n<h3 id=\"示例输入-6\"><a class=\"anchor\" href=\"#示例输入-6\">#</a> 示例输入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"示例输出-6\"><a class=\"anchor\" href=\"#示例输出-6\">#</a> 示例输出</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">count_sublists</span>(<span class=\"params\">list_input</span>):</span><br><span class=\"line\">    total = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> list_input:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:\t\t<span class=\"comment\">#使用try except是为了处理子列表为1或报错</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">                flag = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        total += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> total</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 此处编写代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取输入转为列表</span></span><br><span class=\"line\">list_input = <span class=\"built_in\">eval</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(count_sublists(list_input))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"重复字符的数量\"><a class=\"anchor\" href=\"#重复字符的数量\">#</a> 重复字符的数量</h2>\n<p>要求：</p>\n<p>编写一个程序来计算字符串中重复出现多次的不同字符的数量。</p>\n<p>例如，在单词 <code>Programming</code>  中：</p>\n<ul>\n<li><strong>r</strong> 重复出现了 2 次</li>\n<li><strong>g</strong> 重复出现了 2 次</li>\n<li><strong>m</strong> 重复出现了 2 次</li>\n</ul>\n<p>由于 3 个不同的字符重复出现多次，因此重复字符的数量为<strong> 3</strong>。</p>\n<ul>\n<li>定义函数 <code>count_duplicate_chars()</code> ，参数为 <code>input_string</code> 。</li>\n<li>在函数内部，计算并返回字符串中重复字符的数量。</li>\n</ul>\n<h3 id=\"示例输入-7\"><a class=\"anchor\" href=\"#示例输入-7\">#</a> 示例输入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Programming</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"示例输出-7\"><a class=\"anchor\" href=\"#示例输出-7\">#</a> 示例输出</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">count_duplicate_chars</span>(<span class=\"params\">input_string</span>):</span><br><span class=\"line\">    char_count = &#123;&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 遍历字符串，统计每个字符的出现次数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> input_string:</span><br><span class=\"line\">        <span class=\"comment\"># 如果字符已经在字典中，则增加其出现次数</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> char <span class=\"keyword\">in</span> char_count:</span><br><span class=\"line\">            char_count[char] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 否则，将字符添加到字典中并设置其出现次数为1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            char_count[char] = <span class=\"number\">1</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 计算重复出现多次的不同字符的数量</span></span><br><span class=\"line\">    duplicate_count = <span class=\"built_in\">sum</span>(<span class=\"number\">1</span> <span class=\"keyword\">for</span> count <span class=\"keyword\">in</span> char_count.values() <span class=\"keyword\">if</span> count &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> duplicate_count</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取用户输入</span></span><br><span class=\"line\">test_string = <span class=\"built_in\">input</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\">result = count_duplicate_chars(test_string)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(result)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"最长单词\"><a class=\"anchor\" href=\"#最长单词\">#</a> 最长单词</h2>\n<p>要求：</p>\n<p>编写一个程序，找出一个句子中最长的单词。如果有两个或多个单词长度相同，返回第一个最长的单词。</p>\n<ul>\n<li>定义函数 <code>get_longest_word()</code> ，它接受一个参数： <code>sentence</code> 。</li>\n<li>在函数内部，实现识别最长单词的逻辑，并返回第一个最长单词。</li>\n</ul>\n<h3 id=\"示例输入-8\"><a class=\"anchor\" href=\"#示例输入-8\">#</a> 示例输入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">My toy&#x27;s name is Transformers Optimus Prime.</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"示例输出-8\"><a class=\"anchor\" href=\"#示例输出-8\">#</a> 示例输出</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Transformers</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_longest_word</span>(<span class=\"params\">sentence</span>):</span><br><span class=\"line\">    a = sentence.split()<span class=\"comment\">#以空格为分界划分单词为单个列表</span></span><br><span class=\"line\">    char = &#123;&#125;<span class=\"comment\">#用字典的键值对来储存每个单词的长度</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">        char[i] = <span class=\"built_in\">len</span>(i)</span><br><span class=\"line\">    b = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> char.values():</span><br><span class=\"line\">        b.append(i)</span><br><span class=\"line\">    s = <span class=\"built_in\">max</span>(b)<span class=\"comment\">#找出最长单词</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> char:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> char[i] == s:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 在此处编写你的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取输入</span></span><br><span class=\"line\">sentence = <span class=\"built_in\">input</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(get_longest_word(sentence))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"完美数2\"><a class=\"anchor\" href=\"#完美数2\">#</a> 完美数 2</h2>\n<p>要求：</p>\n<p>编写一个程序来检查一个整数是否是完美数。</p>\n<p>完美数是一个正数，且其因子（不包括它本身）之和等于自己。例如，<strong>6</strong> 是一个完美数，因为它的因子有 <strong>1</strong>，<strong>2</strong> 和 <strong>3</strong>，而 <strong>1</strong> + <strong>2</strong> + <strong>3</strong> = <strong>6</strong>。 其他的完美数如 <strong>28</strong>，<strong>496</strong> 和 <strong>8128</strong>。</p>\n<ul>\n<li>定义函数 <code>check_perfect()</code> ，参数为 <code>num</code> 。</li>\n<li>在函数内，如果数字 <code>num</code>  是完美数，返回 <code>True</code> ，否则返回 <code>False</code> 。</li>\n</ul>\n<h3 id=\"示例输入-9\"><a class=\"anchor\" href=\"#示例输入-9\">#</a> 示例输入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"示例输出-9\"><a class=\"anchor\" href=\"#示例输出-9\">#</a> 示例输出</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">True</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_perfect</span>(<span class=\"params\">num</span>):</span><br><span class=\"line\">    a = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,num):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num % i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            a.append(i)</span><br><span class=\"line\">    s = <span class=\"built_in\">sum</span>(a)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s == num:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"comment\"># 此处编写你的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入处理 </span></span><br><span class=\"line\">num = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数 </span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(check_perfect(num))</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"判断字母位置和是否为偶数\"><a class=\"anchor\" href=\"#判断字母位置和是否为偶数\">#</a> 判断字母位置和是否为偶数</h2>\n<p>要求：</p>\n<p>编写一个程序，用于判断给定字符串中字母在字母表中的位置和是否为偶数。</p>\n<p>例如，字母表中的位置：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = 1</span><br><span class=\"line\">j = 10</span><br><span class=\"line\">z = 26</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>定义函数 <code>is_sum_even()</code> ，参数为 <code>string</code> 。</li>\n<li>在函数内，计算 <code>string</code>  中字母在字母表中的位置和（不区分大小写）。</li>\n<li>忽略字符串中的非字母符号。</li>\n<li>如果和为偶数，则返回 <code>True</code> ，否则返回 <code>False</code> 。</li>\n</ul>\n<h3 id=\"示例输入-10\"><a class=\"anchor\" href=\"#示例输入-10\">#</a> 示例输入</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i am king</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"示例输出-10\"><a class=\"anchor\" href=\"#示例输出-10\">#</a> 示例输出</h3>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">True</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">is_sum_even</span>(<span class=\"params\">string</span>):</span><br><span class=\"line\">    a = <span class=\"string\">&quot; abcdefghijklmnopqrstuvwxyz&quot;</span><span class=\"comment\">#第一个字符为空格标记为0</span></span><br><span class=\"line\">    a = <span class=\"built_in\">list</span>(a)</span><br><span class=\"line\">    b = []</span><br><span class=\"line\">    string = <span class=\"built_in\">list</span>(string)</span><br><span class=\"line\">    total = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> string:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> i == j:</span><br><span class=\"line\">                b.append(total)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                total += <span class=\"number\">1</span></span><br><span class=\"line\">        total = <span class=\"number\">0</span></span><br><span class=\"line\">    s = <span class=\"built_in\">sum</span>(b)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"comment\"># 此处编写你的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取字符串</span></span><br><span class=\"line\">string = <span class=\"built_in\">input</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 调用函数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(is_sum_even(string))</span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "PYTHON"
            ]
        }
    ]
}